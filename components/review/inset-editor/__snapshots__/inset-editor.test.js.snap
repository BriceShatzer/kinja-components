// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReviewInsetEditor /> doesn't allow you to save while the image is uploading and shows a Loading animation 1`] = `
.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 100%;
  overflow: hidden;
  margin-bottom: 5px;
}

.c27:last-child {
  margin-right: 0;
}

.c27 .c38 {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c31 {
  margin-bottom: 15px;
  font-size: 24px;
  line-height: 28px;
  text-align: center;
}

.c31:last-child {
  margin-bottom: 0;
}

.c29 {
  position: relative;
  padding: 15px 15px 1px 15px;
  background-color: #F5F5F5;
}

.c25 {
  width: 100%;
  max-width: 470px;
  margin: 0 auto;
}

.c25 .c26 .c37:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c25 .c28 {
  padding: 15px;
}

.c25 .c28 .c30 {
  margin-bottom: 0;
}

.c25 .c28 .c32 {
  display: none;
}

.c35 .c26 .c37:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c35 .c28 {
  padding: 15px;
}

.c35 .c28 .c30 {
  margin-bottom: 0;
}

.c35 .c28 .c32 {
  display: none;
}

.c19 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c24 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c24 + svg,
.c24 + .c18 {
  margin-left: 4px;
}

.c23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c23 svg + span {
  margin-left: 4px;
}

.c23 .c18 + span {
  margin-left: 4px;
}

.c21 {
  width: auto;
  height: 34px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 34px;
  border-color: #0A7BC2;
  color: #0A7BC2;
  font-size: 14px;
  text-align: center;
  line-height: 34px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c21 .c22 > svg {
  margin-bottom: 2px;
}

.c21 .c18 {
  margin-bottom: 2px;
}

.c21:hover,
.c21:active,
.c21:focus {
  color: #053d61;
  border-color: #053d61;
  background-color: #fff;
}

.c21:hover .c22 > svg,
.c21:active .c22 > svg,
.c21:focus .c22 > svg {
  stroke: #085c91;
}

.c33 {
  width: auto;
  height: 42px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 21px;
  border-color: #0A7BC2;
  color: #0A7BC2;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c33 .c22 > svg {
  margin-bottom: 2px;
}

.c33 .c18 {
  margin-bottom: 2px;
}

.c33:hover,
.c33:active,
.c33:focus {
  color: #053d61;
  border-color: #053d61;
  background-color: #fff;
}

.c33:hover .c22 > svg,
.c33:active .c22 > svg,
.c33:focus .c22 > svg {
  stroke: #085c91;
}

.c34 {
  width: auto;
  height: 42px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 21px;
  border-color: transparent;
  color: #FFF;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #0A7BC2;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c34 .c22 > svg {
  margin-bottom: 2px;
}

.c34 .c18 {
  margin-bottom: 2px;
}

.c34:hover,
.c34:active,
.c34:focus {
  color: #fff;
  border-color: transparent;
  background-color: #085c91;
}

.c34:hover .c22 > svg,
.c34:active .c22 > svg,
.c34:focus .c22 > svg {
  stroke: #fff;
}

.c36 .c22 > svg {
  margin-bottom: 2px;
  stroke: #FFF;
}

.c36 .c18 {
  margin-bottom: 2px;
}

.c36:hover .c22 > svg,
.c36:active .c22 > svg,
.c36:focus .c22 > svg {
  stroke: #fff;
}

.c11 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c3.c3 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c1 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c1:hover .c2 {
  color: #222;
}

.c1:focus-within .c2 {
  color: #0A7BC2;
}

.c1 .c39 {
  margin-top: 8px;
}

.c6.c6 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c6.c6.c6:hover,
.c6.c6.c6:active,
.c6.c6.c6:focus {
  color: #222;
}

.c6:hover {
  border-bottom-color: #666;
}

.c6.c6.c6:focus,
.c6.c6.c6:active {
  border-bottom-color: #0A7BC2;
}

.c6:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c5 {
  position: relative;
}

.c5:hover {
  border-bottom-color: #666;
}

.c5:hover .c4:focus,
.c5:hover .c5:active {
  border-bottom-color: #0A7BC2;
}

.c5:hover .c4:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c5 .c41 {
  padding: 0;
}

.c5 .c40 {
  top: 9px;
}

.c12 {
  width: 100%;
}

.c16 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c15 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c15 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c15 button:hover,
.c15 button:active,
.c15 button:focus {
  background: transparent;
}

.c14 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c17 {
  width: 12px;
}

.c17 svg {
  color: #000;
}

.c7 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c10 {
  white-space: nowrap;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 .c9 {
  padding: 0 10px;
}

.c8 .c9 label {
  padding: 0 10px;
  width: 100%;
}

.c0 {
  padding-bottom: 30px;
}

.c20 {
  margin-top: 2rem;
  color: #222;
  font-size: 18px;
  line-height: 27px;
  text-align: left;
}

<SimpleInsetEditor
  canInsertBox={true}
  imageUploader={[Function]}
  language="en-US"
  onCancel={[Function]}
  onSubmit={[Function]}
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <div
        className="review-inset-editor"
      >
        <h2
          className="modal-title"
        >
          Edit review
        </h2>
        <inset-editor__MainSection
          className="flex-row"
        >
          <StyledComponent
            className="flex-row"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "inset-editor__MainSection-sc-17lptu9-0",
                  "isStatic": true,
                  "lastClassName": "c0",
                  "rules": Array [
                    "padding-bottom:30px;",
                  ],
                },
                "displayName": "inset-editor__MainSection",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "inset-editor__MainSection-sc-17lptu9-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="flex-row c0"
            >
              <div
                className="flex-row__column small-12 large-auto"
              >
                <div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Title
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <Textfield18
                        blogTheme="default"
                        error=""
                        name="title"
                        onChange={[Function]}
                        value=""
                      >
                        <Theme
                          blog="default"
                          theme={
                            Object {
                              "breakpointBanner": "969px",
                              "breakpointMedium": "53.125em",
                              "color": Object {
                                "alert": "#EEB544",
                                "amazon": "#F5C056",
                                "backgroundLayer": "rgba(0,0,0,0.45)",
                                "backgroundLight": "#E6F2F8",
                                "black": "#000",
                                "blackOverlay": "rgba(0,0,0,0.7)",
                                "bodytext": "#222",
                                "commerce": "#72AD75",
                                "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                "darkgray": "#666",
                                "darksmoke": "#222",
                                "error": "#D24A1D",
                                "facebook": "#1877F2",
                                "foregroundLayer": "rgba(0,0,0,0.4)",
                                "google": "#DB4437",
                                "gray": "#7D7D7D",
                                "instagram": "#C32AA3",
                                "lightgray": "#E5E5E5",
                                "linkedin": "#0077B5",
                                "logo": "#000",
                                "midgray": "#CCC",
                                "primary": "#0A7BC2",
                                "primaryLight": "#0C91E4",
                                "rss": "#7D7D7D",
                                "secondarytext": "#7D7D7D",
                                "success": "#23891F",
                                "twitter": "#1DA1F2",
                                "white": "#FFF",
                                "whiteOverlay": "rgba(255,255,255,0.7)",
                                "whitesmoke": "#F5F5F5",
                                "youtube": "#FF0000",
                              },
                              "columnGutter": "2.25rem",
                              "columnGutter19": Object {
                                "largeUp": "1.5rem",
                                "small19": "1rem",
                                "xlargeUp": "2rem",
                              },
                              "columnPadding": "1.125rem",
                              "columnPadding19": Object {
                                "largeUp": "0.75rem",
                                "small19": "0.5rem",
                                "xlargeUp": "1rem",
                              },
                              "featuredContentWidth": "1024px",
                              "globalNavHeight": "80px",
                              "linkTransition": "0.1s ease-out",
                              "mainContainerWidth": "66.5%",
                              "mainContentMaxWidth": "800px",
                              "pageWidth": "1336px",
                              "postContentMaxWidth": "636px",
                              "scrollbackNavHeight": "60px",
                              "sidebarContainerWidth": "33.5%",
                              "sidebarContentMaxWidth": "360px",
                              "sidebarContentMinWidth": "300px",
                              "slideshowTransitionDuration": "0.2s",
                              "typography": Object {
                                "body": Object {
                                  "fontFamily": "ElizabethSerif, Georgia, serif",
                                  "fontSizes": Object {
                                    "large": "27px",
                                    "medium": "19px",
                                    "small": "15px",
                                    "xlarge": "30px",
                                    "xsmall": "14px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "embiggenedHeadlineSize": "34px",
                                "headline": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "headlineLineHeight": "1.3",
                                "headlineSize": "24px",
                                "permalinkHeadlineLineHeight": "1.2",
                                "permalinkHeadlineSize": Object {
                                  "mediumUp": "2.5rem",
                                  "small": "2rem",
                                  "xxxlargeUp": "3rem",
                                },
                                "primary": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "serif": Object {
                                  "fontFamily": "ElizabethSerif, Georgia, serif",
                                  "fontSizes": Object {
                                    "large": "27px",
                                    "medium": "19px",
                                    "small": "15px",
                                    "xlarge": "30px",
                                    "xsmall": "14px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "tertiary": Object {
                                  "fontFamily": "FiraSans, sans-serif",
                                  "fontSizes": Object {
                                    "large": "29px",
                                    "medium": "21px",
                                    "small": "17px",
                                    "xlarge": "35px",
                                    "xsmall": "15px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "utility": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                              },
                            }
                          }
                        >
                          <ThemeProvider
                            theme={
                              Object {
                                "blog": "default",
                                "breakpointBanner": "969px",
                                "breakpointMedium": "53.125em",
                                "color": Object {
                                  "alert": "#EEB544",
                                  "amazon": "#F5C056",
                                  "backgroundLayer": "rgba(0,0,0,0.45)",
                                  "backgroundLight": "#E6F2F8",
                                  "black": "#000",
                                  "blackOverlay": "rgba(0,0,0,0.7)",
                                  "bodytext": "#222",
                                  "commerce": "#72AD75",
                                  "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                  "darkgray": "#666",
                                  "darksmoke": "#222",
                                  "error": "#D24A1D",
                                  "facebook": "#1877F2",
                                  "foregroundLayer": "rgba(0,0,0,0.4)",
                                  "google": "#DB4437",
                                  "gray": "#7D7D7D",
                                  "instagram": "#C32AA3",
                                  "lightgray": "#E5E5E5",
                                  "linkedin": "#0077B5",
                                  "logo": "#000",
                                  "midgray": "#CCC",
                                  "primary": "#0A7BC2",
                                  "primaryLight": "#0C91E4",
                                  "rss": "#7D7D7D",
                                  "secondarytext": "#7D7D7D",
                                  "success": "#23891F",
                                  "twitter": "#1DA1F2",
                                  "white": "#FFF",
                                  "whiteOverlay": "rgba(255,255,255,0.7)",
                                  "whitesmoke": "#F5F5F5",
                                  "youtube": "#FF0000",
                                },
                                "columnGutter": "2.25rem",
                                "columnGutter19": Object {
                                  "largeUp": "1.5rem",
                                  "small19": "1rem",
                                  "xlargeUp": "2rem",
                                },
                                "columnPadding": "1.125rem",
                                "columnPadding19": Object {
                                  "largeUp": "0.75rem",
                                  "small19": "0.5rem",
                                  "xlargeUp": "1rem",
                                },
                                "featuredContentWidth": "1024px",
                                "globalNavHeight": "80px",
                                "linkTransition": "0.1s ease-out",
                                "mainContainerWidth": "66.5%",
                                "mainContentMaxWidth": "800px",
                                "pageWidth": "1336px",
                                "postContentMaxWidth": "636px",
                                "scrollbackNavHeight": "60px",
                                "sidebarContainerWidth": "33.5%",
                                "sidebarContentMaxWidth": "360px",
                                "sidebarContentMinWidth": "300px",
                                "slideshowTransitionDuration": "0.2s",
                                "typography": Object {
                                  "body": Object {
                                    "fontFamily": "ElizabethSerif, Georgia, serif",
                                    "fontSizes": Object {
                                      "large": "27px",
                                      "medium": "19px",
                                      "small": "15px",
                                      "xlarge": "30px",
                                      "xsmall": "14px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "embiggenedHeadlineSize": "34px",
                                  "headline": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "headlineLineHeight": "1.3",
                                  "headlineSize": "24px",
                                  "permalinkHeadlineLineHeight": "1.2",
                                  "permalinkHeadlineSize": Object {
                                    "mediumUp": "2.5rem",
                                    "small": "2rem",
                                    "xxxlargeUp": "3rem",
                                  },
                                  "primary": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "serif": Object {
                                    "fontFamily": "ElizabethSerif, Georgia, serif",
                                    "fontSizes": Object {
                                      "large": "27px",
                                      "medium": "19px",
                                      "small": "15px",
                                      "xlarge": "30px",
                                      "xsmall": "14px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "tertiary": Object {
                                    "fontFamily": "FiraSans, sans-serif",
                                    "fontSizes": Object {
                                      "large": "29px",
                                      "medium": "21px",
                                      "small": "17px",
                                      "xlarge": "35px",
                                      "xsmall": "15px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "utility": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                },
                              }
                            }
                          >
                            <textfield__KinjaFormFieldWrapper>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                      "isStatic": false,
                                      "lastClassName": "c1",
                                      "rules": Array [
                                        "margin-bottom:32px;flex-basis:100%;&:hover{",
                                        ".c2",
                                        "{color:",
                                        [Function],
                                        ";}}&:focus-within{",
                                        ".c2",
                                        "{color:",
                                        [Function],
                                        ";}}",
                                        [Function],
                                        " ",
                                        ".c39",
                                        "{margin-top:8px;}",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaFormFieldWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c1"
                                >
                                  <textfield__KinjaLabel
                                    error=""
                                    htmlFor="title"
                                  >
                                    <StyledComponent
                                      error=""
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c2",
                                            "isStatic": false,
                                            "lastClassName": "c3",
                                            "rules": Array [
                                              "&&{color:",
                                              [Function],
                                              ";font-size:16px;line-height:21px;}",
                                            ],
                                          },
                                          "displayName": "textfield__KinjaLabel",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c2",
                                          "target": "label",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      htmlFor="title"
                                    >
                                      <label
                                        className="c2 c3"
                                        htmlFor="title"
                                      />
                                    </StyledComponent>
                                  </textfield__KinjaLabel>
                                  <textfield__KinjaTextFieldWrapper
                                    hasCustomIcon={false}
                                    status="default"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c4",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "position:relative;&:hover{border-bottom-color:",
                                              [Function],
                                              ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                              [Function],
                                              ";}&:hover &:disabled{border-bottom-color:",
                                              [Function],
                                              ";cursor:not-allowed;}",
                                              ".c41",
                                              "{padding:0;",
                                              [Function],
                                              "}",
                                              ".textfield__KinjaTextField-sc-1a9gghc-2",
                                              ",",
                                              ".c41",
                                              "{",
                                              [Function],
                                              " ",
                                              [Function],
                                              "}",
                                              ".c40",
                                              "{top:9px;}",
                                            ],
                                          },
                                          "displayName": "textfield__KinjaTextFieldWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c4",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      hasCustomIcon={false}
                                      status="default"
                                    >
                                      <div
                                        className="c4 c5"
                                      >
                                        <textfield__KinjaTextField
                                          error=""
                                          id="title"
                                          name="title"
                                          onChange={[Function]}
                                          status="default"
                                          type="text"
                                          value=""
                                        >
                                          <StyledComponent
                                            error=""
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                  "isStatic": false,
                                                  "lastClassName": "c6",
                                                  "rules": Array [
                                                    "&&{border-bottom:1px solid ",
                                                    [Function],
                                                    ";color:",
                                                    [Function],
                                                    " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                                    [Function],
                                                    ";}&:hover{border-bottom-color:",
                                                    [Function],
                                                    ";}&&&:focus,&&&:active{border-bottom-color:",
                                                    [Function],
                                                    ";}&:disabled{border-bottom-color:",
                                                    [Function],
                                                    ";cursor:not-allowed;}",
                                                    ";",
                                                  ],
                                                },
                                                "displayName": "textfield__KinjaTextField",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                "target": "input",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            id="title"
                                            name="title"
                                            onChange={[Function]}
                                            status="default"
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="c6"
                                              id="title"
                                              name="title"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </StyledComponent>
                                        </textfield__KinjaTextField>
                                      </div>
                                    </StyledComponent>
                                  </textfield__KinjaTextFieldWrapper>
                                </div>
                              </StyledComponent>
                            </textfield__KinjaFormFieldWrapper>
                          </ThemeProvider>
                        </Theme>
                      </Textfield18>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Image
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <ImageUpload
                        description=""
                        imageUploader={[Function]}
                        language="en-US"
                        name="image"
                        onChange={[Function]}
                        onError={[Function]}
                        onUploadStarted={[Function]}
                      >
                        <div>
                          <image-upload__ImageUploadTitle>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
                                    "isStatic": true,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "text-align:center;font-weight:400;font-size:1.312rem;",
                                    ],
                                  },
                                  "displayName": "image-upload__ImageUploadTitle",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
                                  "target": "p",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <p
                                className="c7"
                              >
                                <span>
                                  Insert an image from the web
                                </span>
                              </p>
                            </StyledComponent>
                          </image-upload__ImageUploadTitle>
                          <image-upload__ImageInputContainer>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
                                    "isStatic": true,
                                    "lastClassName": "c8",
                                    "rules": Array [
                                      "display:flex;",
                                      ".c9",
                                      "{padding:0 10px;label{padding:0 10px;width:100%;}}",
                                    ],
                                  },
                                  "displayName": "image-upload__ImageInputContainer",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c8"
                              >
                                <Textfield18
                                  blogTheme="default"
                                  error=""
                                  label="Paste the URL of the image"
                                  name="imageURL"
                                  onChange={[Function]}
                                  value=""
                                >
                                  <Theme
                                    blog="default"
                                    theme={
                                      Object {
                                        "breakpointBanner": "969px",
                                        "breakpointMedium": "53.125em",
                                        "color": Object {
                                          "alert": "#EEB544",
                                          "amazon": "#F5C056",
                                          "backgroundLayer": "rgba(0,0,0,0.45)",
                                          "backgroundLight": "#E6F2F8",
                                          "black": "#000",
                                          "blackOverlay": "rgba(0,0,0,0.7)",
                                          "bodytext": "#222",
                                          "commerce": "#72AD75",
                                          "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                          "darkgray": "#666",
                                          "darksmoke": "#222",
                                          "error": "#D24A1D",
                                          "facebook": "#1877F2",
                                          "foregroundLayer": "rgba(0,0,0,0.4)",
                                          "google": "#DB4437",
                                          "gray": "#7D7D7D",
                                          "instagram": "#C32AA3",
                                          "lightgray": "#E5E5E5",
                                          "linkedin": "#0077B5",
                                          "logo": "#000",
                                          "midgray": "#CCC",
                                          "primary": "#0A7BC2",
                                          "primaryLight": "#0C91E4",
                                          "rss": "#7D7D7D",
                                          "secondarytext": "#7D7D7D",
                                          "success": "#23891F",
                                          "twitter": "#1DA1F2",
                                          "white": "#FFF",
                                          "whiteOverlay": "rgba(255,255,255,0.7)",
                                          "whitesmoke": "#F5F5F5",
                                          "youtube": "#FF0000",
                                        },
                                        "columnGutter": "2.25rem",
                                        "columnGutter19": Object {
                                          "largeUp": "1.5rem",
                                          "small19": "1rem",
                                          "xlargeUp": "2rem",
                                        },
                                        "columnPadding": "1.125rem",
                                        "columnPadding19": Object {
                                          "largeUp": "0.75rem",
                                          "small19": "0.5rem",
                                          "xlargeUp": "1rem",
                                        },
                                        "featuredContentWidth": "1024px",
                                        "globalNavHeight": "80px",
                                        "linkTransition": "0.1s ease-out",
                                        "mainContainerWidth": "66.5%",
                                        "mainContentMaxWidth": "800px",
                                        "pageWidth": "1336px",
                                        "postContentMaxWidth": "636px",
                                        "scrollbackNavHeight": "60px",
                                        "sidebarContainerWidth": "33.5%",
                                        "sidebarContentMaxWidth": "360px",
                                        "sidebarContentMinWidth": "300px",
                                        "slideshowTransitionDuration": "0.2s",
                                        "typography": Object {
                                          "body": Object {
                                            "fontFamily": "ElizabethSerif, Georgia, serif",
                                            "fontSizes": Object {
                                              "large": "27px",
                                              "medium": "19px",
                                              "small": "15px",
                                              "xlarge": "30px",
                                              "xsmall": "14px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "embiggenedHeadlineSize": "34px",
                                          "headline": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "headlineLineHeight": "1.3",
                                          "headlineSize": "24px",
                                          "permalinkHeadlineLineHeight": "1.2",
                                          "permalinkHeadlineSize": Object {
                                            "mediumUp": "2.5rem",
                                            "small": "2rem",
                                            "xxxlargeUp": "3rem",
                                          },
                                          "primary": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "serif": Object {
                                            "fontFamily": "ElizabethSerif, Georgia, serif",
                                            "fontSizes": Object {
                                              "large": "27px",
                                              "medium": "19px",
                                              "small": "15px",
                                              "xlarge": "30px",
                                              "xsmall": "14px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "tertiary": Object {
                                            "fontFamily": "FiraSans, sans-serif",
                                            "fontSizes": Object {
                                              "large": "29px",
                                              "medium": "21px",
                                              "small": "17px",
                                              "xlarge": "35px",
                                              "xsmall": "15px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "utility": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "blog": "default",
                                          "breakpointBanner": "969px",
                                          "breakpointMedium": "53.125em",
                                          "color": Object {
                                            "alert": "#EEB544",
                                            "amazon": "#F5C056",
                                            "backgroundLayer": "rgba(0,0,0,0.45)",
                                            "backgroundLight": "#E6F2F8",
                                            "black": "#000",
                                            "blackOverlay": "rgba(0,0,0,0.7)",
                                            "bodytext": "#222",
                                            "commerce": "#72AD75",
                                            "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                            "darkgray": "#666",
                                            "darksmoke": "#222",
                                            "error": "#D24A1D",
                                            "facebook": "#1877F2",
                                            "foregroundLayer": "rgba(0,0,0,0.4)",
                                            "google": "#DB4437",
                                            "gray": "#7D7D7D",
                                            "instagram": "#C32AA3",
                                            "lightgray": "#E5E5E5",
                                            "linkedin": "#0077B5",
                                            "logo": "#000",
                                            "midgray": "#CCC",
                                            "primary": "#0A7BC2",
                                            "primaryLight": "#0C91E4",
                                            "rss": "#7D7D7D",
                                            "secondarytext": "#7D7D7D",
                                            "success": "#23891F",
                                            "twitter": "#1DA1F2",
                                            "white": "#FFF",
                                            "whiteOverlay": "rgba(255,255,255,0.7)",
                                            "whitesmoke": "#F5F5F5",
                                            "youtube": "#FF0000",
                                          },
                                          "columnGutter": "2.25rem",
                                          "columnGutter19": Object {
                                            "largeUp": "1.5rem",
                                            "small19": "1rem",
                                            "xlargeUp": "2rem",
                                          },
                                          "columnPadding": "1.125rem",
                                          "columnPadding19": Object {
                                            "largeUp": "0.75rem",
                                            "small19": "0.5rem",
                                            "xlargeUp": "1rem",
                                          },
                                          "featuredContentWidth": "1024px",
                                          "globalNavHeight": "80px",
                                          "linkTransition": "0.1s ease-out",
                                          "mainContainerWidth": "66.5%",
                                          "mainContentMaxWidth": "800px",
                                          "pageWidth": "1336px",
                                          "postContentMaxWidth": "636px",
                                          "scrollbackNavHeight": "60px",
                                          "sidebarContainerWidth": "33.5%",
                                          "sidebarContentMaxWidth": "360px",
                                          "sidebarContentMinWidth": "300px",
                                          "slideshowTransitionDuration": "0.2s",
                                          "typography": Object {
                                            "body": Object {
                                              "fontFamily": "ElizabethSerif, Georgia, serif",
                                              "fontSizes": Object {
                                                "large": "27px",
                                                "medium": "19px",
                                                "small": "15px",
                                                "xlarge": "30px",
                                                "xsmall": "14px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "embiggenedHeadlineSize": "34px",
                                            "headline": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "headlineLineHeight": "1.3",
                                            "headlineSize": "24px",
                                            "permalinkHeadlineLineHeight": "1.2",
                                            "permalinkHeadlineSize": Object {
                                              "mediumUp": "2.5rem",
                                              "small": "2rem",
                                              "xxxlargeUp": "3rem",
                                            },
                                            "primary": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "serif": Object {
                                              "fontFamily": "ElizabethSerif, Georgia, serif",
                                              "fontSizes": Object {
                                                "large": "27px",
                                                "medium": "19px",
                                                "small": "15px",
                                                "xlarge": "30px",
                                                "xsmall": "14px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "tertiary": Object {
                                              "fontFamily": "FiraSans, sans-serif",
                                              "fontSizes": Object {
                                                "large": "29px",
                                                "medium": "21px",
                                                "small": "17px",
                                                "xlarge": "35px",
                                                "xsmall": "15px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "utility": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <textfield__KinjaFormFieldWrapper>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                                "isStatic": false,
                                                "lastClassName": "c1",
                                                "rules": Array [
                                                  "margin-bottom:32px;flex-basis:100%;&:hover{",
                                                  ".c2",
                                                  "{color:",
                                                  [Function],
                                                  ";}}&:focus-within{",
                                                  ".c2",
                                                  "{color:",
                                                  [Function],
                                                  ";}}",
                                                  [Function],
                                                  " ",
                                                  ".c39",
                                                  "{margin-top:8px;}",
                                                ],
                                              },
                                              "displayName": "textfield__KinjaFormFieldWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c1"
                                          >
                                            <textfield__KinjaLabel
                                              error=""
                                              htmlFor="imageURL"
                                            >
                                              <StyledComponent
                                                error=""
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c2",
                                                      "isStatic": false,
                                                      "lastClassName": "c3",
                                                      "rules": Array [
                                                        "&&{color:",
                                                        [Function],
                                                        ";font-size:16px;line-height:21px;}",
                                                      ],
                                                    },
                                                    "displayName": "textfield__KinjaLabel",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c2",
                                                    "target": "label",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                htmlFor="imageURL"
                                              >
                                                <label
                                                  className="c2 c3"
                                                  htmlFor="imageURL"
                                                >
                                                  Paste the URL of the image
                                                </label>
                                              </StyledComponent>
                                            </textfield__KinjaLabel>
                                            <textfield__KinjaTextFieldWrapper
                                              hasCustomIcon={false}
                                              status="default"
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c4",
                                                      "isStatic": false,
                                                      "lastClassName": "c5",
                                                      "rules": Array [
                                                        "position:relative;&:hover{border-bottom-color:",
                                                        [Function],
                                                        ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                                        [Function],
                                                        ";}&:hover &:disabled{border-bottom-color:",
                                                        [Function],
                                                        ";cursor:not-allowed;}",
                                                        ".c41",
                                                        "{padding:0;",
                                                        [Function],
                                                        "}",
                                                        ".textfield__KinjaTextField-sc-1a9gghc-2",
                                                        ",",
                                                        ".c41",
                                                        "{",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        "}",
                                                        ".c40",
                                                        "{top:9px;}",
                                                      ],
                                                    },
                                                    "displayName": "textfield__KinjaTextFieldWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                hasCustomIcon={false}
                                                status="default"
                                              >
                                                <div
                                                  className="c4 c5"
                                                >
                                                  <textfield__KinjaTextField
                                                    error=""
                                                    id="imageURL"
                                                    name="imageURL"
                                                    onChange={[Function]}
                                                    status="default"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <StyledComponent
                                                      error=""
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                            "isStatic": false,
                                                            "lastClassName": "c6",
                                                            "rules": Array [
                                                              "&&{border-bottom:1px solid ",
                                                              [Function],
                                                              ";color:",
                                                              [Function],
                                                              " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                                              [Function],
                                                              ";}&:hover{border-bottom-color:",
                                                              [Function],
                                                              ";}&&&:focus,&&&:active{border-bottom-color:",
                                                              [Function],
                                                              ";}&:disabled{border-bottom-color:",
                                                              [Function],
                                                              ";cursor:not-allowed;}",
                                                              ";",
                                                            ],
                                                          },
                                                          "displayName": "textfield__KinjaTextField",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                          "target": "input",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      id="imageURL"
                                                      name="imageURL"
                                                      onChange={[Function]}
                                                      status="default"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <input
                                                        className="c6"
                                                        id="imageURL"
                                                        name="imageURL"
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                      />
                                                    </StyledComponent>
                                                  </textfield__KinjaTextField>
                                                </div>
                                              </StyledComponent>
                                            </textfield__KinjaTextFieldWrapper>
                                          </div>
                                        </StyledComponent>
                                      </textfield__KinjaFormFieldWrapper>
                                    </ThemeProvider>
                                  </Theme>
                                </Textfield18>
                                <image-upload__ImageFileInput>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "c9",
                                          "isStatic": true,
                                          "lastClassName": "caIkJs",
                                          "rules": Array [],
                                        },
                                        "displayName": "image-upload__ImageFileInput",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "c9",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="c9 "
                                    >
                                      <image-upload__FileInputText>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "image-upload__FileInputText-d8l6nt-1",
                                                "isStatic": true,
                                                "lastClassName": "c10",
                                                "rules": Array [
                                                  "white-space:nowrap;",
                                                ],
                                              },
                                              "displayName": "image-upload__FileInputText",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                                              "target": "p",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <p
                                            className="c10"
                                          >
                                            <span
                                              className="show-for-small-only"
                                            >
                                              Or upload one from your device
                                            </span>
                                            <span
                                              className="show-for-medium-up"
                                            >
                                              Or upload one from your computer
                                            </span>
                                          </p>
                                        </StyledComponent>
                                      </image-upload__FileInputText>
                                      <Filefield
                                        accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                        error={null}
                                        name="fileUpload"
                                        onChange={[Function]}
                                      >
                                        <Field
                                          error={null}
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <field__Wrapper
                                                className="field"
                                              >
                                                <StyledComponent
                                                  className="field"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "field__Wrapper-sc-1k7q01z-0",
                                                        "isStatic": false,
                                                        "lastClassName": "c11",
                                                        "rules": Array [
                                                          "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "field__Wrapper",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                                      "target": "label",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <label
                                                    className="field c11"
                                                  >
                                                    <filefield__Input
                                                      accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                      error={null}
                                                      name="fileUpload"
                                                      onChange={[Function]}
                                                    >
                                                      <StyledComponent
                                                        accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                        error={null}
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [
                                                              Object {
                                                                "type": "file",
                                                              },
                                                            ],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "filefield__Input-pd0ao4-0",
                                                              "isStatic": false,
                                                              "lastClassName": "dLFlOg",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "filefield__Input",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "filefield__Input-pd0ao4-0",
                                                            "target": "input",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        name="fileUpload"
                                                        onChange={[Function]}
                                                      >
                                                        <input
                                                          accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                          className=""
                                                          name="fileUpload"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                      </StyledComponent>
                                                    </filefield__Input>
                                                  </label>
                                                </StyledComponent>
                                              </field__Wrapper>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Field>
                                      </Filefield>
                                    </div>
                                  </StyledComponent>
                                </image-upload__ImageFileInput>
                              </div>
                            </StyledComponent>
                          </image-upload__ImageInputContainer>
                        </div>
                      </ImageUpload>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Rating
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <Toggle(Select)
                        height={200}
                        onChange={[Function]}
                        value=""
                      >
                        <ClickOutside(Select)
                          close={[Function]}
                          handleClickOutside={[Function]}
                          height={200}
                          isOpen={false}
                          onChange={[Function]}
                          toggle={[Function]}
                          value=""
                        >
                          <Select
                            close={[Function]}
                            height={200}
                            insideReference={[Function]}
                            isOpen={false}
                            onChange={[Function]}
                            toggle={[Function]}
                            value=""
                          >
                            <EnsureDefaultTheme>
                              <ThemeProvider
                                theme={[Function]}
                              >
                                <select__SelectLabel>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "select__SelectLabel-sc-17mlv1t-0",
                                          "isStatic": false,
                                          "lastClassName": "c12",
                                          "rules": Array [
                                            "width:100%;",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "select__SelectLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                                        "target": "label",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={[Function]}
                                  >
                                    <label
                                      className="c12"
                                    >
                                      <select__SelectWrapper>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                                                "isStatic": false,
                                                "lastClassName": "c13",
                                                "rules": Array [
                                                  "display:",
                                                  [Function],
                                                  ";",
                                                ],
                                              },
                                              "displayName": "select__SelectWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c13"
                                          >
                                            <select__LabelSelect
                                              onClick={[Function]}
                                              open={false}
                                              role="button"
                                              tabIndex="0"
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                                      "isStatic": false,
                                                      "lastClassName": "c14",
                                                      "rules": Array [
                                                        "position:relative;width:100%;outline:none;cursor:pointer;",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "select__LabelSelect",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                onClick={[Function]}
                                                open={false}
                                                role="button"
                                                tabIndex="0"
                                              >
                                                <div
                                                  className="c14"
                                                  onClick={[Function]}
                                                  open={false}
                                                  role="button"
                                                  tabIndex="0"
                                                >
                                                  <select__SelectControl
                                                    isOpen={false}
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "select__SelectControl-sc-17mlv1t-3",
                                                            "isStatic": false,
                                                            "lastClassName": "c15",
                                                            "rules": Array [
                                                              "align-items:center;background-color:",
                                                              [Function],
                                                              ";border-color:#d9d9d9 ",
                                                              [Function],
                                                              " #b3b3b3;border-radius:4px;border:1px solid ",
                                                              [Function],
                                                              ";color:",
                                                              [Function],
                                                              ";display:flex;height:",
                                                              "36",
                                                              "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                                            ],
                                                          },
                                                          "displayName": "select__SelectControl",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "select__SelectControl-sc-17mlv1t-3",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      isOpen={false}
                                                    >
                                                      <div
                                                        className="c15"
                                                      >
                                                        <select__SelectValue>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "select__SelectValue-sc-17mlv1t-2",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c16",
                                                                  "rules": Array [
                                                                    "color:",
                                                                    [Function],
                                                                    ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                                                  ],
                                                                },
                                                                "displayName": "select__SelectValue",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "select__SelectValue-sc-17mlv1t-2",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <div
                                                              className="c16"
                                                            />
                                                          </StyledComponent>
                                                        </select__SelectValue>
                                                        <select__Controls
                                                          isOpen={false}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "select__Controls-sc-17mlv1t-9",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c17",
                                                                  "rules": Array [
                                                                    "width:12px;",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "select__Controls",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            isOpen={false}
                                                          >
                                                            <div
                                                              className="c17"
                                                            >
                                                              <ChevronDownIcon>
                                                                <Icon19>
                                                                  <icon19__IconWrapper>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "c18",
                                                                            "isStatic": true,
                                                                            "lastClassName": "c19",
                                                                            "rules": Array [
                                                                              "fill:currentColor;display:flex;",
                                                                            ],
                                                                          },
                                                                          "displayName": "icon19__IconWrapper",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "c18",
                                                                          "target": "span",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <span
                                                                        className="c18 c19"
                                                                      >
                                                                        <ChevronDown
                                                                          aria-label="ChevronDown icon"
                                                                          height="18"
                                                                          viewBox="0 0 18 18"
                                                                          width="18"
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-label="ChevronDown icon"
                                                                            height="18"
                                                                            viewBox="0 0 18 18"
                                                                            width="18"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                                              fillRule="evenodd"
                                                                            />
                                                                          </svg>
                                                                        </ChevronDown>
                                                                      </span>
                                                                    </StyledComponent>
                                                                  </icon19__IconWrapper>
                                                                </Icon19>
                                                              </ChevronDownIcon>
                                                            </div>
                                                          </StyledComponent>
                                                        </select__Controls>
                                                      </div>
                                                    </StyledComponent>
                                                  </select__SelectControl>
                                                </div>
                                              </StyledComponent>
                                            </select__LabelSelect>
                                          </div>
                                        </StyledComponent>
                                      </select__SelectWrapper>
                                    </label>
                                  </StyledComponent>
                                </select__SelectLabel>
                              </ThemeProvider>
                            </EnsureDefaultTheme>
                          </Select>
                        </ClickOutside(Select)>
                      </Toggle(Select)>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-12"
                    >
                      <inset-editor__ReviewDataTitle>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "inset-editor__ReviewDataTitle-sc-17lptu9-1",
                                "isStatic": false,
                                "lastClassName": "c20",
                                "rules": Array [
                                  "margin-top:2rem;color:",
                                  [Function],
                                  ";font-size:18px;line-height:27px;text-align:left;",
                                ],
                              },
                              "displayName": "inset-editor__ReviewDataTitle",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "inset-editor__ReviewDataTitle-sc-17lptu9-1",
                              "target": "h2",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <h2
                            className="c20"
                          >
                            Review data
                          </h2>
                        </StyledComponent>
                      </inset-editor__ReviewDataTitle>
                      <ReviewData
                        language="en-US"
                        name="text"
                        onChange={[Function]}
                        value={Array []}
                      >
                        <div>
                          <Button
                            label="Add field"
                            onClick={[Function]}
                            small={true}
                            type="button"
                            weight="secondary"
                          >
                            <EnsureDefaultTheme>
                              <ThemeProvider
                                theme={[Function]}
                              >
                                <Button__ButtonWrapper
                                  onClick={[Function]}
                                  small={true}
                                  type="button"
                                  weight="secondary"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                                          "isStatic": false,
                                          "lastClassName": "c36",
                                          "rules": Array [
                                            "width:",
                                            [Function],
                                            ";height:",
                                            [Function],
                                            ";padding:",
                                            [Function],
                                            ";border:transparent 1px solid;border-radius:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";color:",
                                            [Function],
                                            ";font-size:",
                                            [Function],
                                            ";text-align:",
                                            [Function],
                                            ";line-height:",
                                            [Function],
                                            ";background-color:",
                                            [Function],
                                            ";transition:",
                                            [Function],
                                            ";",
                                            [Function],
                                            ";",
                                            [Function],
                                            ";",
                                            ".c22",
                                            " > svg{margin-bottom:2px;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            "}",
                                            ".c18",
                                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";background-color:",
                                            [Function],
                                            ";",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            ".c22",
                                            " > svg{",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            "}}",
                                            "@media only screen and ",
                                            "(max-width: 49.94em)",
                                            "{",
                                            "
		",
                                            [Function],
                                            "
	",
                                            "}",
                                          ],
                                        },
                                        "displayName": "Button__ButtonWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                    small={true}
                                    type="button"
                                    weight="secondary"
                                  >
                                    <button
                                      className="c21"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <Button__ButtonInner>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "c22",
                                                "isStatic": false,
                                                "lastClassName": "c23",
                                                "rules": Array [
                                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                                  [Function],
                                                  " + span{margin-left:4px;}}",
                                                  ".c18",
                                                  "{+ span{margin-left:4px;}}",
                                                ],
                                              },
                                              "displayName": "Button__ButtonInner",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "c22",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c22 c23"
                                          >
                                            <Button__Label>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Button__Label-j48i5d-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c24",
                                                      "rules": Array [
                                                        "display:flex;+ svg,+ ",
                                                        ".c18",
                                                        "{margin-left:4px;}",
                                                      ],
                                                    },
                                                    "displayName": "Button__Label",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Button__Label-j48i5d-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c24"
                                                >
                                                  Add field
                                                </span>
                                              </StyledComponent>
                                            </Button__Label>
                                          </div>
                                        </StyledComponent>
                                      </Button__ButtonInner>
                                    </button>
                                  </StyledComponent>
                                </Button__ButtonWrapper>
                              </ThemeProvider>
                            </EnsureDefaultTheme>
                          </Button>
                        </div>
                      </ReviewData>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="flex-row__column flex-row__column--fixed"
              >
                <ReviewBox
                  alignment="Center"
                  hide={true}
                  image={null}
                  score={null}
                  text={Array []}
                  title=""
                >
                  <EnsureDefaultTheme>
                    <ThemeProvider
                      theme={[Function]}
                    >
                      <ReviewBox__ReviewBoxWrapper
                        alignment="Center"
                        className="reviewbox-inset"
                        hide={true}
                        image={null}
                        score={null}
                        text={Array []}
                        title=""
                      >
                        <StyledComponent
                          alignment="Center"
                          className="reviewbox-inset"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                                "isStatic": false,
                                "lastClassName": "c35",
                                "rules": Array [
                                  "width:100%;max-width:470px;margin:0 auto;",
                                  ".c26",
                                  "{",
                                  ".c37",
                                  ":hover{text-decoration:none;}}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  "@media only screen and ",
                                  "(max-width: 49.94em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "
	",
                                  "}",
                                  " ",
                                  "@media only screen and ",
                                  "(min-width: 37.37em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "

	",
                                  "}",
                                  " ",
                                  "@media only screen and ",
                                  "(min-width: 50em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "
	",
                                  "}",
                                ],
                              },
                              "displayName": "ReviewBox__ReviewBoxWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                              "target": "section",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hide={true}
                          image={null}
                          score={null}
                          text={Array []}
                          title=""
                        >
                          <section
                            className="reviewbox-inset c25"
                            title=""
                          >
                            <story-type-label-wrapper__Wrapper
                              margin="small"
                              variant="top"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c26",
                                      "isStatic": false,
                                      "lastClassName": "c27",
                                      "rules": Array [
                                        "display:flex;max-width:100%;overflow:hidden;",
                                        [Function],
                                        " ",
                                        [Function],
                                        ":last-child{margin-right:0;}",
                                        ".c38",
                                        "{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}",
                                      ],
                                    },
                                    "displayName": "story-type-label-wrapper__Wrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c26",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                margin="small"
                                variant="top"
                              >
                                <div
                                  className="c26 c27"
                                />
                              </StyledComponent>
                            </story-type-label-wrapper__Wrapper>
                            <ReviewBox__Head>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ReviewBox__Head-aebpua-2",
                                      "isStatic": true,
                                      "lastClassName": "Uixpq",
                                      "rules": Array [],
                                    },
                                    "displayName": "ReviewBox__Head",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ReviewBox__Head-aebpua-2",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className=""
                                />
                              </StyledComponent>
                            </ReviewBox__Head>
                            <ReviewBox__Content>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c28",
                                      "isStatic": false,
                                      "lastClassName": "c29",
                                      "rules": Array [
                                        "position:relative;padding:15px 15px 1px 15px;background-color:",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "ReviewBox__Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c28",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c28 c29"
                                >
                                  <ReviewBox__Title>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c30",
                                            "isStatic": true,
                                            "lastClassName": "c31",
                                            "rules": Array [
                                              "margin-bottom:15px;font-size:24px;line-height:28px;text-align:center;&:last-child{margin-bottom:0;}",
                                            ],
                                          },
                                          "displayName": "ReviewBox__Title",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c30",
                                          "target": "h2",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <h2
                                        className="c30 c31"
                                      />
                                    </StyledComponent>
                                  </ReviewBox__Title>
                                  <ReviewBox__DataWrapper>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c32",
                                            "isStatic": true,
                                            "lastClassName": "jIFghh",
                                            "rules": Array [],
                                          },
                                          "displayName": "ReviewBox__DataWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c32",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c32 "
                                      />
                                    </StyledComponent>
                                  </ReviewBox__DataWrapper>
                                </div>
                              </StyledComponent>
                            </ReviewBox__Content>
                          </section>
                        </StyledComponent>
                      </ReviewBox__ReviewBoxWrapper>
                    </ThemeProvider>
                  </EnsureDefaultTheme>
                </ReviewBox>
              </div>
            </div>
          </StyledComponent>
        </inset-editor__MainSection>
        <div
          className="form-buttons"
        >
          <Button
            className="form-button"
            label="Cancel"
            onClick={[Function]}
            type="button"
            weight="secondary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button"
                  onClick={[Function]}
                  type="button"
                  weight="secondary"
                >
                  <StyledComponent
                    className="form-button"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c36",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c22",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c18",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c22",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    type="button"
                    weight="secondary"
                  >
                    <button
                      className="form-button c33"
                      onClick={[Function]}
                      type="button"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c22",
                                "isStatic": false,
                                "lastClassName": "c23",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c18",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c22",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c22 c23"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c24",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c18",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c24"
                                >
                                  Cancel
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
          <Button
            className="form-button review-inset-editor__save-button"
            disabled={false}
            label="Save review"
            onClick={[Function]}
            type="submit"
            weight="primary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button review-inset-editor__save-button"
                  disabled={false}
                  isDisabled={false}
                  onClick={[Function]}
                  type="submit"
                  weight="primary"
                >
                  <StyledComponent
                    className="form-button review-inset-editor__save-button"
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c36",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c22",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c18",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c22",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isDisabled={false}
                    onClick={[Function]}
                    type="submit"
                    weight="primary"
                  >
                    <button
                      className="form-button review-inset-editor__save-button c34"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c22",
                                "isStatic": false,
                                "lastClassName": "c23",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c18",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c22",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c22 c23"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c24",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c18",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c24"
                                >
                                  Save review
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
          <Button
            className="form-button review-inset-editor__save-and-insert-button"
            disabled={false}
            label="Save and insert box"
            onClick={[Function]}
            type="submit"
            weight="primary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button review-inset-editor__save-and-insert-button"
                  disabled={false}
                  isDisabled={false}
                  onClick={[Function]}
                  type="submit"
                  weight="primary"
                >
                  <StyledComponent
                    className="form-button review-inset-editor__save-and-insert-button"
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c36",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c22",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c18",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c22",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isDisabled={false}
                    onClick={[Function]}
                    type="submit"
                    weight="primary"
                  >
                    <button
                      className="form-button review-inset-editor__save-and-insert-button c34"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c22",
                                "isStatic": false,
                                "lastClassName": "c23",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c18",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c22",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c22 c23"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c24",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c18",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c24"
                                >
                                  Save and insert box
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
        </div>
      </div>
    </ThemeProvider>
  </EnsureDefaultTheme>
</SimpleInsetEditor>
`;

exports[`<ReviewInsetEditor /> doesn't allow you to save while the image is uploading and shows a Loading animation 2`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 100%;
  overflow: hidden;
  margin-bottom: 5px;
}

.c2:last-child {
  margin-right: 0;
}

.c2 .c10 {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c6 {
  margin-bottom: 15px;
  font-size: 24px;
  line-height: 28px;
  text-align: center;
}

.c6:last-child {
  margin-bottom: 0;
}

.c4 {
  position: relative;
  padding: 15px 15px 1px 15px;
  background-color: #F5F5F5;
}

.c0 {
  width: 100%;
  max-width: 470px;
  margin: 0 auto;
}

.c0 .c1 .c9:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0 .c3 {
  padding: 15px;
}

.c0 .c3 .c5 {
  margin-bottom: 0;
}

.c0 .c3 .c7 {
  display: none;
}

.c8 .c1 .c9:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c8 .c3 {
  padding: 15px;
}

.c8 .c3 .c5 {
  margin-bottom: 0;
}

.c8 .c3 .c7 {
  display: none;
}

<ReviewBox
  alignment="Center"
  hide={true}
  image={null}
  score={null}
  text={Array []}
  title=""
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <ReviewBox__ReviewBoxWrapper
        alignment="Center"
        className="reviewbox-inset"
        hide={true}
        image={null}
        score={null}
        text={Array []}
        title=""
      >
        <StyledComponent
          alignment="Center"
          className="reviewbox-inset"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                "isStatic": false,
                "lastClassName": "c8",
                "rules": Array [
                  "width:100%;max-width:470px;margin:0 auto;",
                  ".c1",
                  "{",
                  ".c9",
                  ":hover{text-decoration:none;}}",
                  [Function],
                  " ",
                  [Function],
                  " ",
                  [Function],
                  " ",
                  [Function],
                  " ",
                  "@media only screen and ",
                  "(max-width: 49.94em)",
                  "{",
                  "
		",
                  [Function],
                  "
	",
                  "}",
                  " ",
                  "@media only screen and ",
                  "(min-width: 37.37em)",
                  "{",
                  "
		",
                  [Function],
                  "

	",
                  "}",
                  " ",
                  "@media only screen and ",
                  "(min-width: 50em)",
                  "{",
                  "
		",
                  [Function],
                  "
	",
                  "}",
                ],
              },
              "displayName": "ReviewBox__ReviewBoxWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
              "target": "section",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          hide={true}
          image={null}
          score={null}
          text={Array []}
          title=""
        >
          <section
            className="reviewbox-inset c0"
            title=""
          >
            <story-type-label-wrapper__Wrapper
              margin="small"
              variant="top"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "c1",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "display:flex;max-width:100%;overflow:hidden;",
                        [Function],
                        " ",
                        [Function],
                        ":last-child{margin-right:0;}",
                        ".c10",
                        "{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}",
                      ],
                    },
                    "displayName": "story-type-label-wrapper__Wrapper",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "c1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                margin="small"
                variant="top"
              >
                <div
                  className="c1 c2"
                />
              </StyledComponent>
            </story-type-label-wrapper__Wrapper>
            <ReviewBox__Head>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "ReviewBox__Head-aebpua-2",
                      "isStatic": true,
                      "lastClassName": "Uixpq",
                      "rules": Array [],
                    },
                    "displayName": "ReviewBox__Head",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "ReviewBox__Head-aebpua-2",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className=""
                />
              </StyledComponent>
            </ReviewBox__Head>
            <ReviewBox__Content>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "c3",
                      "isStatic": false,
                      "lastClassName": "c4",
                      "rules": Array [
                        "position:relative;padding:15px 15px 1px 15px;background-color:",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "ReviewBox__Content",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "c3",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c3 c4"
                >
                  <ReviewBox__Title>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c5",
                            "isStatic": true,
                            "lastClassName": "c6",
                            "rules": Array [
                              "margin-bottom:15px;font-size:24px;line-height:28px;text-align:center;&:last-child{margin-bottom:0;}",
                            ],
                          },
                          "displayName": "ReviewBox__Title",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c5",
                          "target": "h2",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <h2
                        className="c5 c6"
                      />
                    </StyledComponent>
                  </ReviewBox__Title>
                  <ReviewBox__DataWrapper>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c7",
                            "isStatic": true,
                            "lastClassName": "jIFghh",
                            "rules": Array [],
                          },
                          "displayName": "ReviewBox__DataWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c7",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c7 "
                      />
                    </StyledComponent>
                  </ReviewBox__DataWrapper>
                </div>
              </StyledComponent>
            </ReviewBox__Content>
          </section>
        </StyledComponent>
      </ReviewBox__ReviewBoxWrapper>
    </ThemeProvider>
  </EnsureDefaultTheme>
</ReviewBox>
`;

exports[`<ReviewInsetEditor /> doesn't allow you to save without a title 1`] = `
.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 100%;
  overflow: hidden;
  margin-bottom: 5px;
}

.c27:last-child {
  margin-right: 0;
}

.c27 .c36 {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c31 {
  margin-bottom: 15px;
  font-size: 24px;
  line-height: 28px;
  text-align: center;
}

.c31:last-child {
  margin-bottom: 0;
}

.c29 {
  position: relative;
  padding: 15px 15px 1px 15px;
  background-color: #F5F5F5;
}

.c25 {
  width: 100%;
  max-width: 470px;
  margin: 0 auto;
}

.c25 .c26 .c35:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c25 .c28 {
  padding: 15px;
}

.c25 .c28 .c30 {
  margin-bottom: 0;
}

.c25 .c28 .c32 {
  display: none;
}

.c19 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c24 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c24 + svg,
.c24 + .c18 {
  margin-left: 4px;
}

.c23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c23 svg + span {
  margin-left: 4px;
}

.c23 .c18 + span {
  margin-left: 4px;
}

.c21 {
  width: auto;
  height: 34px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 34px;
  border-color: #0A7BC2;
  color: #0A7BC2;
  font-size: 14px;
  text-align: center;
  line-height: 34px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c21 .c22 > svg {
  margin-bottom: 2px;
}

.c21 .c18 {
  margin-bottom: 2px;
}

.c21:hover,
.c21:active,
.c21:focus {
  color: #053d61;
  border-color: #053d61;
  background-color: #fff;
}

.c21:hover .c22 > svg,
.c21:active .c22 > svg,
.c21:focus .c22 > svg {
  stroke: #085c91;
}

.c33 {
  width: auto;
  height: 42px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 21px;
  border-color: #0A7BC2;
  color: #0A7BC2;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c33 .c22 > svg {
  margin-bottom: 2px;
}

.c33 .c18 {
  margin-bottom: 2px;
}

.c33:hover,
.c33:active,
.c33:focus {
  color: #053d61;
  border-color: #053d61;
  background-color: #fff;
}

.c33:hover .c22 > svg,
.c33:active .c22 > svg,
.c33:focus .c22 > svg {
  stroke: #085c91;
}

.c34 {
  width: auto;
  height: 42px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 21px;
  border-color: transparent;
  color: #FFF;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #0A7BC2;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c34 .c22 > svg {
  margin-bottom: 2px;
}

.c34 .c18 {
  margin-bottom: 2px;
}

.c34:hover,
.c34:active,
.c34:focus {
  color: #fff;
  border-color: transparent;
  background-color: #085c91;
}

.c34:hover .c22 > svg,
.c34:active .c22 > svg,
.c34:focus .c22 > svg {
  stroke: #fff;
}

.c11 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c3.c3 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c1 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c1:hover .c2 {
  color: #222;
}

.c1:focus-within .c2 {
  color: #0A7BC2;
}

.c1 .c37 {
  margin-top: 8px;
}

.c6.c6 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c6.c6.c6:hover,
.c6.c6.c6:active,
.c6.c6.c6:focus {
  color: #222;
}

.c6:hover {
  border-bottom-color: #666;
}

.c6.c6.c6:focus,
.c6.c6.c6:active {
  border-bottom-color: #0A7BC2;
}

.c6:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c5 {
  position: relative;
}

.c5:hover {
  border-bottom-color: #666;
}

.c5:hover .c4:focus,
.c5:hover .c5:active {
  border-bottom-color: #0A7BC2;
}

.c5:hover .c4:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c5 .c39 {
  padding: 0;
}

.c5 .c38 {
  top: 9px;
}

.c12 {
  width: 100%;
}

.c16 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c15 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c15 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c15 button:hover,
.c15 button:active,
.c15 button:focus {
  background: transparent;
}

.c14 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c17 {
  width: 12px;
}

.c17 svg {
  color: #000;
}

.c7 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c10 {
  white-space: nowrap;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 .c9 {
  padding: 0 10px;
}

.c8 .c9 label {
  padding: 0 10px;
  width: 100%;
}

.c0 {
  padding-bottom: 30px;
}

.c20 {
  margin-top: 2rem;
  color: #222;
  font-size: 18px;
  line-height: 27px;
  text-align: left;
}

<SimpleInsetEditor
  canInsertBox={true}
  imageUploader={[Function]}
  language="en-US"
  onCancel={[Function]}
  onSubmit={[MockFunction]}
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <div
        className="review-inset-editor"
      >
        <h2
          className="modal-title"
        >
          Edit review
        </h2>
        <inset-editor__MainSection
          className="flex-row"
        >
          <StyledComponent
            className="flex-row"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "inset-editor__MainSection-sc-17lptu9-0",
                  "isStatic": true,
                  "lastClassName": "c0",
                  "rules": Array [
                    "padding-bottom:30px;",
                  ],
                },
                "displayName": "inset-editor__MainSection",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "inset-editor__MainSection-sc-17lptu9-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="flex-row c0"
            >
              <div
                className="flex-row__column small-12 large-auto"
              >
                <div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Title
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <Textfield18
                        blogTheme="default"
                        error=""
                        name="title"
                        onChange={[Function]}
                        value=""
                      >
                        <Theme
                          blog="default"
                          theme={
                            Object {
                              "breakpointBanner": "969px",
                              "breakpointMedium": "53.125em",
                              "color": Object {
                                "alert": "#EEB544",
                                "amazon": "#F5C056",
                                "backgroundLayer": "rgba(0,0,0,0.45)",
                                "backgroundLight": "#E6F2F8",
                                "black": "#000",
                                "blackOverlay": "rgba(0,0,0,0.7)",
                                "bodytext": "#222",
                                "commerce": "#72AD75",
                                "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                "darkgray": "#666",
                                "darksmoke": "#222",
                                "error": "#D24A1D",
                                "facebook": "#1877F2",
                                "foregroundLayer": "rgba(0,0,0,0.4)",
                                "google": "#DB4437",
                                "gray": "#7D7D7D",
                                "instagram": "#C32AA3",
                                "lightgray": "#E5E5E5",
                                "linkedin": "#0077B5",
                                "logo": "#000",
                                "midgray": "#CCC",
                                "primary": "#0A7BC2",
                                "primaryLight": "#0C91E4",
                                "rss": "#7D7D7D",
                                "secondarytext": "#7D7D7D",
                                "success": "#23891F",
                                "twitter": "#1DA1F2",
                                "white": "#FFF",
                                "whiteOverlay": "rgba(255,255,255,0.7)",
                                "whitesmoke": "#F5F5F5",
                                "youtube": "#FF0000",
                              },
                              "columnGutter": "2.25rem",
                              "columnGutter19": Object {
                                "largeUp": "1.5rem",
                                "small19": "1rem",
                                "xlargeUp": "2rem",
                              },
                              "columnPadding": "1.125rem",
                              "columnPadding19": Object {
                                "largeUp": "0.75rem",
                                "small19": "0.5rem",
                                "xlargeUp": "1rem",
                              },
                              "featuredContentWidth": "1024px",
                              "globalNavHeight": "80px",
                              "linkTransition": "0.1s ease-out",
                              "mainContainerWidth": "66.5%",
                              "mainContentMaxWidth": "800px",
                              "pageWidth": "1336px",
                              "postContentMaxWidth": "636px",
                              "scrollbackNavHeight": "60px",
                              "sidebarContainerWidth": "33.5%",
                              "sidebarContentMaxWidth": "360px",
                              "sidebarContentMinWidth": "300px",
                              "slideshowTransitionDuration": "0.2s",
                              "typography": Object {
                                "body": Object {
                                  "fontFamily": "ElizabethSerif, Georgia, serif",
                                  "fontSizes": Object {
                                    "large": "27px",
                                    "medium": "19px",
                                    "small": "15px",
                                    "xlarge": "30px",
                                    "xsmall": "14px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "embiggenedHeadlineSize": "34px",
                                "headline": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "headlineLineHeight": "1.3",
                                "headlineSize": "24px",
                                "permalinkHeadlineLineHeight": "1.2",
                                "permalinkHeadlineSize": Object {
                                  "mediumUp": "2.5rem",
                                  "small": "2rem",
                                  "xxxlargeUp": "3rem",
                                },
                                "primary": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "serif": Object {
                                  "fontFamily": "ElizabethSerif, Georgia, serif",
                                  "fontSizes": Object {
                                    "large": "27px",
                                    "medium": "19px",
                                    "small": "15px",
                                    "xlarge": "30px",
                                    "xsmall": "14px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "tertiary": Object {
                                  "fontFamily": "FiraSans, sans-serif",
                                  "fontSizes": Object {
                                    "large": "29px",
                                    "medium": "21px",
                                    "small": "17px",
                                    "xlarge": "35px",
                                    "xsmall": "15px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "utility": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                              },
                            }
                          }
                        >
                          <ThemeProvider
                            theme={
                              Object {
                                "blog": "default",
                                "breakpointBanner": "969px",
                                "breakpointMedium": "53.125em",
                                "color": Object {
                                  "alert": "#EEB544",
                                  "amazon": "#F5C056",
                                  "backgroundLayer": "rgba(0,0,0,0.45)",
                                  "backgroundLight": "#E6F2F8",
                                  "black": "#000",
                                  "blackOverlay": "rgba(0,0,0,0.7)",
                                  "bodytext": "#222",
                                  "commerce": "#72AD75",
                                  "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                  "darkgray": "#666",
                                  "darksmoke": "#222",
                                  "error": "#D24A1D",
                                  "facebook": "#1877F2",
                                  "foregroundLayer": "rgba(0,0,0,0.4)",
                                  "google": "#DB4437",
                                  "gray": "#7D7D7D",
                                  "instagram": "#C32AA3",
                                  "lightgray": "#E5E5E5",
                                  "linkedin": "#0077B5",
                                  "logo": "#000",
                                  "midgray": "#CCC",
                                  "primary": "#0A7BC2",
                                  "primaryLight": "#0C91E4",
                                  "rss": "#7D7D7D",
                                  "secondarytext": "#7D7D7D",
                                  "success": "#23891F",
                                  "twitter": "#1DA1F2",
                                  "white": "#FFF",
                                  "whiteOverlay": "rgba(255,255,255,0.7)",
                                  "whitesmoke": "#F5F5F5",
                                  "youtube": "#FF0000",
                                },
                                "columnGutter": "2.25rem",
                                "columnGutter19": Object {
                                  "largeUp": "1.5rem",
                                  "small19": "1rem",
                                  "xlargeUp": "2rem",
                                },
                                "columnPadding": "1.125rem",
                                "columnPadding19": Object {
                                  "largeUp": "0.75rem",
                                  "small19": "0.5rem",
                                  "xlargeUp": "1rem",
                                },
                                "featuredContentWidth": "1024px",
                                "globalNavHeight": "80px",
                                "linkTransition": "0.1s ease-out",
                                "mainContainerWidth": "66.5%",
                                "mainContentMaxWidth": "800px",
                                "pageWidth": "1336px",
                                "postContentMaxWidth": "636px",
                                "scrollbackNavHeight": "60px",
                                "sidebarContainerWidth": "33.5%",
                                "sidebarContentMaxWidth": "360px",
                                "sidebarContentMinWidth": "300px",
                                "slideshowTransitionDuration": "0.2s",
                                "typography": Object {
                                  "body": Object {
                                    "fontFamily": "ElizabethSerif, Georgia, serif",
                                    "fontSizes": Object {
                                      "large": "27px",
                                      "medium": "19px",
                                      "small": "15px",
                                      "xlarge": "30px",
                                      "xsmall": "14px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "embiggenedHeadlineSize": "34px",
                                  "headline": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "headlineLineHeight": "1.3",
                                  "headlineSize": "24px",
                                  "permalinkHeadlineLineHeight": "1.2",
                                  "permalinkHeadlineSize": Object {
                                    "mediumUp": "2.5rem",
                                    "small": "2rem",
                                    "xxxlargeUp": "3rem",
                                  },
                                  "primary": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "serif": Object {
                                    "fontFamily": "ElizabethSerif, Georgia, serif",
                                    "fontSizes": Object {
                                      "large": "27px",
                                      "medium": "19px",
                                      "small": "15px",
                                      "xlarge": "30px",
                                      "xsmall": "14px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "tertiary": Object {
                                    "fontFamily": "FiraSans, sans-serif",
                                    "fontSizes": Object {
                                      "large": "29px",
                                      "medium": "21px",
                                      "small": "17px",
                                      "xlarge": "35px",
                                      "xsmall": "15px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "utility": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                },
                              }
                            }
                          >
                            <textfield__KinjaFormFieldWrapper>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                      "isStatic": false,
                                      "lastClassName": "c1",
                                      "rules": Array [
                                        "margin-bottom:32px;flex-basis:100%;&:hover{",
                                        ".c2",
                                        "{color:",
                                        [Function],
                                        ";}}&:focus-within{",
                                        ".c2",
                                        "{color:",
                                        [Function],
                                        ";}}",
                                        [Function],
                                        " ",
                                        ".c37",
                                        "{margin-top:8px;}",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaFormFieldWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c1"
                                >
                                  <textfield__KinjaLabel
                                    error=""
                                    htmlFor="title"
                                  >
                                    <StyledComponent
                                      error=""
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c2",
                                            "isStatic": false,
                                            "lastClassName": "c3",
                                            "rules": Array [
                                              "&&{color:",
                                              [Function],
                                              ";font-size:16px;line-height:21px;}",
                                            ],
                                          },
                                          "displayName": "textfield__KinjaLabel",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c2",
                                          "target": "label",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      htmlFor="title"
                                    >
                                      <label
                                        className="c2 c3"
                                        htmlFor="title"
                                      />
                                    </StyledComponent>
                                  </textfield__KinjaLabel>
                                  <textfield__KinjaTextFieldWrapper
                                    hasCustomIcon={false}
                                    status="default"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c4",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "position:relative;&:hover{border-bottom-color:",
                                              [Function],
                                              ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                              [Function],
                                              ";}&:hover &:disabled{border-bottom-color:",
                                              [Function],
                                              ";cursor:not-allowed;}",
                                              ".c39",
                                              "{padding:0;",
                                              [Function],
                                              "}",
                                              ".textfield__KinjaTextField-sc-1a9gghc-2",
                                              ",",
                                              ".c39",
                                              "{",
                                              [Function],
                                              " ",
                                              [Function],
                                              "}",
                                              ".c38",
                                              "{top:9px;}",
                                            ],
                                          },
                                          "displayName": "textfield__KinjaTextFieldWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c4",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      hasCustomIcon={false}
                                      status="default"
                                    >
                                      <div
                                        className="c4 c5"
                                      >
                                        <textfield__KinjaTextField
                                          error=""
                                          id="title"
                                          name="title"
                                          onChange={[Function]}
                                          status="default"
                                          type="text"
                                          value=""
                                        >
                                          <StyledComponent
                                            error=""
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                  "isStatic": false,
                                                  "lastClassName": "c6",
                                                  "rules": Array [
                                                    "&&{border-bottom:1px solid ",
                                                    [Function],
                                                    ";color:",
                                                    [Function],
                                                    " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                                    [Function],
                                                    ";}&:hover{border-bottom-color:",
                                                    [Function],
                                                    ";}&&&:focus,&&&:active{border-bottom-color:",
                                                    [Function],
                                                    ";}&:disabled{border-bottom-color:",
                                                    [Function],
                                                    ";cursor:not-allowed;}",
                                                    ";",
                                                  ],
                                                },
                                                "displayName": "textfield__KinjaTextField",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                "target": "input",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            id="title"
                                            name="title"
                                            onChange={[Function]}
                                            status="default"
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="c6"
                                              id="title"
                                              name="title"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </StyledComponent>
                                        </textfield__KinjaTextField>
                                      </div>
                                    </StyledComponent>
                                  </textfield__KinjaTextFieldWrapper>
                                </div>
                              </StyledComponent>
                            </textfield__KinjaFormFieldWrapper>
                          </ThemeProvider>
                        </Theme>
                      </Textfield18>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Image
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <ImageUpload
                        description=""
                        imageUploader={[Function]}
                        language="en-US"
                        name="image"
                        onChange={[Function]}
                        onError={[Function]}
                        onUploadStarted={[Function]}
                      >
                        <div>
                          <image-upload__ImageUploadTitle>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
                                    "isStatic": true,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "text-align:center;font-weight:400;font-size:1.312rem;",
                                    ],
                                  },
                                  "displayName": "image-upload__ImageUploadTitle",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
                                  "target": "p",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <p
                                className="c7"
                              >
                                <span>
                                  Insert an image from the web
                                </span>
                              </p>
                            </StyledComponent>
                          </image-upload__ImageUploadTitle>
                          <image-upload__ImageInputContainer>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
                                    "isStatic": true,
                                    "lastClassName": "c8",
                                    "rules": Array [
                                      "display:flex;",
                                      ".c9",
                                      "{padding:0 10px;label{padding:0 10px;width:100%;}}",
                                    ],
                                  },
                                  "displayName": "image-upload__ImageInputContainer",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c8"
                              >
                                <Textfield18
                                  blogTheme="default"
                                  error=""
                                  label="Paste the URL of the image"
                                  name="imageURL"
                                  onChange={[Function]}
                                  value=""
                                >
                                  <Theme
                                    blog="default"
                                    theme={
                                      Object {
                                        "breakpointBanner": "969px",
                                        "breakpointMedium": "53.125em",
                                        "color": Object {
                                          "alert": "#EEB544",
                                          "amazon": "#F5C056",
                                          "backgroundLayer": "rgba(0,0,0,0.45)",
                                          "backgroundLight": "#E6F2F8",
                                          "black": "#000",
                                          "blackOverlay": "rgba(0,0,0,0.7)",
                                          "bodytext": "#222",
                                          "commerce": "#72AD75",
                                          "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                          "darkgray": "#666",
                                          "darksmoke": "#222",
                                          "error": "#D24A1D",
                                          "facebook": "#1877F2",
                                          "foregroundLayer": "rgba(0,0,0,0.4)",
                                          "google": "#DB4437",
                                          "gray": "#7D7D7D",
                                          "instagram": "#C32AA3",
                                          "lightgray": "#E5E5E5",
                                          "linkedin": "#0077B5",
                                          "logo": "#000",
                                          "midgray": "#CCC",
                                          "primary": "#0A7BC2",
                                          "primaryLight": "#0C91E4",
                                          "rss": "#7D7D7D",
                                          "secondarytext": "#7D7D7D",
                                          "success": "#23891F",
                                          "twitter": "#1DA1F2",
                                          "white": "#FFF",
                                          "whiteOverlay": "rgba(255,255,255,0.7)",
                                          "whitesmoke": "#F5F5F5",
                                          "youtube": "#FF0000",
                                        },
                                        "columnGutter": "2.25rem",
                                        "columnGutter19": Object {
                                          "largeUp": "1.5rem",
                                          "small19": "1rem",
                                          "xlargeUp": "2rem",
                                        },
                                        "columnPadding": "1.125rem",
                                        "columnPadding19": Object {
                                          "largeUp": "0.75rem",
                                          "small19": "0.5rem",
                                          "xlargeUp": "1rem",
                                        },
                                        "featuredContentWidth": "1024px",
                                        "globalNavHeight": "80px",
                                        "linkTransition": "0.1s ease-out",
                                        "mainContainerWidth": "66.5%",
                                        "mainContentMaxWidth": "800px",
                                        "pageWidth": "1336px",
                                        "postContentMaxWidth": "636px",
                                        "scrollbackNavHeight": "60px",
                                        "sidebarContainerWidth": "33.5%",
                                        "sidebarContentMaxWidth": "360px",
                                        "sidebarContentMinWidth": "300px",
                                        "slideshowTransitionDuration": "0.2s",
                                        "typography": Object {
                                          "body": Object {
                                            "fontFamily": "ElizabethSerif, Georgia, serif",
                                            "fontSizes": Object {
                                              "large": "27px",
                                              "medium": "19px",
                                              "small": "15px",
                                              "xlarge": "30px",
                                              "xsmall": "14px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "embiggenedHeadlineSize": "34px",
                                          "headline": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "headlineLineHeight": "1.3",
                                          "headlineSize": "24px",
                                          "permalinkHeadlineLineHeight": "1.2",
                                          "permalinkHeadlineSize": Object {
                                            "mediumUp": "2.5rem",
                                            "small": "2rem",
                                            "xxxlargeUp": "3rem",
                                          },
                                          "primary": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "serif": Object {
                                            "fontFamily": "ElizabethSerif, Georgia, serif",
                                            "fontSizes": Object {
                                              "large": "27px",
                                              "medium": "19px",
                                              "small": "15px",
                                              "xlarge": "30px",
                                              "xsmall": "14px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "tertiary": Object {
                                            "fontFamily": "FiraSans, sans-serif",
                                            "fontSizes": Object {
                                              "large": "29px",
                                              "medium": "21px",
                                              "small": "17px",
                                              "xlarge": "35px",
                                              "xsmall": "15px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "utility": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "blog": "default",
                                          "breakpointBanner": "969px",
                                          "breakpointMedium": "53.125em",
                                          "color": Object {
                                            "alert": "#EEB544",
                                            "amazon": "#F5C056",
                                            "backgroundLayer": "rgba(0,0,0,0.45)",
                                            "backgroundLight": "#E6F2F8",
                                            "black": "#000",
                                            "blackOverlay": "rgba(0,0,0,0.7)",
                                            "bodytext": "#222",
                                            "commerce": "#72AD75",
                                            "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                            "darkgray": "#666",
                                            "darksmoke": "#222",
                                            "error": "#D24A1D",
                                            "facebook": "#1877F2",
                                            "foregroundLayer": "rgba(0,0,0,0.4)",
                                            "google": "#DB4437",
                                            "gray": "#7D7D7D",
                                            "instagram": "#C32AA3",
                                            "lightgray": "#E5E5E5",
                                            "linkedin": "#0077B5",
                                            "logo": "#000",
                                            "midgray": "#CCC",
                                            "primary": "#0A7BC2",
                                            "primaryLight": "#0C91E4",
                                            "rss": "#7D7D7D",
                                            "secondarytext": "#7D7D7D",
                                            "success": "#23891F",
                                            "twitter": "#1DA1F2",
                                            "white": "#FFF",
                                            "whiteOverlay": "rgba(255,255,255,0.7)",
                                            "whitesmoke": "#F5F5F5",
                                            "youtube": "#FF0000",
                                          },
                                          "columnGutter": "2.25rem",
                                          "columnGutter19": Object {
                                            "largeUp": "1.5rem",
                                            "small19": "1rem",
                                            "xlargeUp": "2rem",
                                          },
                                          "columnPadding": "1.125rem",
                                          "columnPadding19": Object {
                                            "largeUp": "0.75rem",
                                            "small19": "0.5rem",
                                            "xlargeUp": "1rem",
                                          },
                                          "featuredContentWidth": "1024px",
                                          "globalNavHeight": "80px",
                                          "linkTransition": "0.1s ease-out",
                                          "mainContainerWidth": "66.5%",
                                          "mainContentMaxWidth": "800px",
                                          "pageWidth": "1336px",
                                          "postContentMaxWidth": "636px",
                                          "scrollbackNavHeight": "60px",
                                          "sidebarContainerWidth": "33.5%",
                                          "sidebarContentMaxWidth": "360px",
                                          "sidebarContentMinWidth": "300px",
                                          "slideshowTransitionDuration": "0.2s",
                                          "typography": Object {
                                            "body": Object {
                                              "fontFamily": "ElizabethSerif, Georgia, serif",
                                              "fontSizes": Object {
                                                "large": "27px",
                                                "medium": "19px",
                                                "small": "15px",
                                                "xlarge": "30px",
                                                "xsmall": "14px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "embiggenedHeadlineSize": "34px",
                                            "headline": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "headlineLineHeight": "1.3",
                                            "headlineSize": "24px",
                                            "permalinkHeadlineLineHeight": "1.2",
                                            "permalinkHeadlineSize": Object {
                                              "mediumUp": "2.5rem",
                                              "small": "2rem",
                                              "xxxlargeUp": "3rem",
                                            },
                                            "primary": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "serif": Object {
                                              "fontFamily": "ElizabethSerif, Georgia, serif",
                                              "fontSizes": Object {
                                                "large": "27px",
                                                "medium": "19px",
                                                "small": "15px",
                                                "xlarge": "30px",
                                                "xsmall": "14px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "tertiary": Object {
                                              "fontFamily": "FiraSans, sans-serif",
                                              "fontSizes": Object {
                                                "large": "29px",
                                                "medium": "21px",
                                                "small": "17px",
                                                "xlarge": "35px",
                                                "xsmall": "15px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "utility": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <textfield__KinjaFormFieldWrapper>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                                "isStatic": false,
                                                "lastClassName": "c1",
                                                "rules": Array [
                                                  "margin-bottom:32px;flex-basis:100%;&:hover{",
                                                  ".c2",
                                                  "{color:",
                                                  [Function],
                                                  ";}}&:focus-within{",
                                                  ".c2",
                                                  "{color:",
                                                  [Function],
                                                  ";}}",
                                                  [Function],
                                                  " ",
                                                  ".c37",
                                                  "{margin-top:8px;}",
                                                ],
                                              },
                                              "displayName": "textfield__KinjaFormFieldWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c1"
                                          >
                                            <textfield__KinjaLabel
                                              error=""
                                              htmlFor="imageURL"
                                            >
                                              <StyledComponent
                                                error=""
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c2",
                                                      "isStatic": false,
                                                      "lastClassName": "c3",
                                                      "rules": Array [
                                                        "&&{color:",
                                                        [Function],
                                                        ";font-size:16px;line-height:21px;}",
                                                      ],
                                                    },
                                                    "displayName": "textfield__KinjaLabel",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c2",
                                                    "target": "label",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                htmlFor="imageURL"
                                              >
                                                <label
                                                  className="c2 c3"
                                                  htmlFor="imageURL"
                                                >
                                                  Paste the URL of the image
                                                </label>
                                              </StyledComponent>
                                            </textfield__KinjaLabel>
                                            <textfield__KinjaTextFieldWrapper
                                              hasCustomIcon={false}
                                              status="default"
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c4",
                                                      "isStatic": false,
                                                      "lastClassName": "c5",
                                                      "rules": Array [
                                                        "position:relative;&:hover{border-bottom-color:",
                                                        [Function],
                                                        ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                                        [Function],
                                                        ";}&:hover &:disabled{border-bottom-color:",
                                                        [Function],
                                                        ";cursor:not-allowed;}",
                                                        ".c39",
                                                        "{padding:0;",
                                                        [Function],
                                                        "}",
                                                        ".textfield__KinjaTextField-sc-1a9gghc-2",
                                                        ",",
                                                        ".c39",
                                                        "{",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        "}",
                                                        ".c38",
                                                        "{top:9px;}",
                                                      ],
                                                    },
                                                    "displayName": "textfield__KinjaTextFieldWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                hasCustomIcon={false}
                                                status="default"
                                              >
                                                <div
                                                  className="c4 c5"
                                                >
                                                  <textfield__KinjaTextField
                                                    error=""
                                                    id="imageURL"
                                                    name="imageURL"
                                                    onChange={[Function]}
                                                    status="default"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <StyledComponent
                                                      error=""
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                            "isStatic": false,
                                                            "lastClassName": "c6",
                                                            "rules": Array [
                                                              "&&{border-bottom:1px solid ",
                                                              [Function],
                                                              ";color:",
                                                              [Function],
                                                              " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                                              [Function],
                                                              ";}&:hover{border-bottom-color:",
                                                              [Function],
                                                              ";}&&&:focus,&&&:active{border-bottom-color:",
                                                              [Function],
                                                              ";}&:disabled{border-bottom-color:",
                                                              [Function],
                                                              ";cursor:not-allowed;}",
                                                              ";",
                                                            ],
                                                          },
                                                          "displayName": "textfield__KinjaTextField",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                          "target": "input",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      id="imageURL"
                                                      name="imageURL"
                                                      onChange={[Function]}
                                                      status="default"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <input
                                                        className="c6"
                                                        id="imageURL"
                                                        name="imageURL"
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                      />
                                                    </StyledComponent>
                                                  </textfield__KinjaTextField>
                                                </div>
                                              </StyledComponent>
                                            </textfield__KinjaTextFieldWrapper>
                                          </div>
                                        </StyledComponent>
                                      </textfield__KinjaFormFieldWrapper>
                                    </ThemeProvider>
                                  </Theme>
                                </Textfield18>
                                <image-upload__ImageFileInput>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "c9",
                                          "isStatic": true,
                                          "lastClassName": "caIkJs",
                                          "rules": Array [],
                                        },
                                        "displayName": "image-upload__ImageFileInput",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "c9",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="c9 "
                                    >
                                      <image-upload__FileInputText>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "image-upload__FileInputText-d8l6nt-1",
                                                "isStatic": true,
                                                "lastClassName": "c10",
                                                "rules": Array [
                                                  "white-space:nowrap;",
                                                ],
                                              },
                                              "displayName": "image-upload__FileInputText",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                                              "target": "p",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <p
                                            className="c10"
                                          >
                                            <span
                                              className="show-for-small-only"
                                            >
                                              Or upload one from your device
                                            </span>
                                            <span
                                              className="show-for-medium-up"
                                            >
                                              Or upload one from your computer
                                            </span>
                                          </p>
                                        </StyledComponent>
                                      </image-upload__FileInputText>
                                      <Filefield
                                        accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                        error={null}
                                        name="fileUpload"
                                        onChange={[Function]}
                                      >
                                        <Field
                                          error={null}
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <field__Wrapper
                                                className="field"
                                              >
                                                <StyledComponent
                                                  className="field"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "field__Wrapper-sc-1k7q01z-0",
                                                        "isStatic": false,
                                                        "lastClassName": "c11",
                                                        "rules": Array [
                                                          "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "field__Wrapper",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                                      "target": "label",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <label
                                                    className="field c11"
                                                  >
                                                    <filefield__Input
                                                      accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                      error={null}
                                                      name="fileUpload"
                                                      onChange={[Function]}
                                                    >
                                                      <StyledComponent
                                                        accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                        error={null}
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [
                                                              Object {
                                                                "type": "file",
                                                              },
                                                            ],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "filefield__Input-pd0ao4-0",
                                                              "isStatic": false,
                                                              "lastClassName": "dLFlOg",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "filefield__Input",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "filefield__Input-pd0ao4-0",
                                                            "target": "input",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        name="fileUpload"
                                                        onChange={[Function]}
                                                      >
                                                        <input
                                                          accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                          className=""
                                                          name="fileUpload"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                      </StyledComponent>
                                                    </filefield__Input>
                                                  </label>
                                                </StyledComponent>
                                              </field__Wrapper>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Field>
                                      </Filefield>
                                    </div>
                                  </StyledComponent>
                                </image-upload__ImageFileInput>
                              </div>
                            </StyledComponent>
                          </image-upload__ImageInputContainer>
                        </div>
                      </ImageUpload>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Rating
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <Toggle(Select)
                        height={200}
                        onChange={[Function]}
                        value=""
                      >
                        <ClickOutside(Select)
                          close={[Function]}
                          handleClickOutside={[Function]}
                          height={200}
                          isOpen={false}
                          onChange={[Function]}
                          toggle={[Function]}
                          value=""
                        >
                          <Select
                            close={[Function]}
                            height={200}
                            insideReference={[Function]}
                            isOpen={false}
                            onChange={[Function]}
                            toggle={[Function]}
                            value=""
                          >
                            <EnsureDefaultTheme>
                              <ThemeProvider
                                theme={[Function]}
                              >
                                <select__SelectLabel>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "select__SelectLabel-sc-17mlv1t-0",
                                          "isStatic": false,
                                          "lastClassName": "c12",
                                          "rules": Array [
                                            "width:100%;",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "select__SelectLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                                        "target": "label",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={[Function]}
                                  >
                                    <label
                                      className="c12"
                                    >
                                      <select__SelectWrapper>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                                                "isStatic": false,
                                                "lastClassName": "c13",
                                                "rules": Array [
                                                  "display:",
                                                  [Function],
                                                  ";",
                                                ],
                                              },
                                              "displayName": "select__SelectWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c13"
                                          >
                                            <select__LabelSelect
                                              onClick={[Function]}
                                              open={false}
                                              role="button"
                                              tabIndex="0"
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                                      "isStatic": false,
                                                      "lastClassName": "c14",
                                                      "rules": Array [
                                                        "position:relative;width:100%;outline:none;cursor:pointer;",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "select__LabelSelect",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                onClick={[Function]}
                                                open={false}
                                                role="button"
                                                tabIndex="0"
                                              >
                                                <div
                                                  className="c14"
                                                  onClick={[Function]}
                                                  open={false}
                                                  role="button"
                                                  tabIndex="0"
                                                >
                                                  <select__SelectControl
                                                    isOpen={false}
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "select__SelectControl-sc-17mlv1t-3",
                                                            "isStatic": false,
                                                            "lastClassName": "c15",
                                                            "rules": Array [
                                                              "align-items:center;background-color:",
                                                              [Function],
                                                              ";border-color:#d9d9d9 ",
                                                              [Function],
                                                              " #b3b3b3;border-radius:4px;border:1px solid ",
                                                              [Function],
                                                              ";color:",
                                                              [Function],
                                                              ";display:flex;height:",
                                                              "36",
                                                              "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                                            ],
                                                          },
                                                          "displayName": "select__SelectControl",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "select__SelectControl-sc-17mlv1t-3",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      isOpen={false}
                                                    >
                                                      <div
                                                        className="c15"
                                                      >
                                                        <select__SelectValue>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "select__SelectValue-sc-17mlv1t-2",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c16",
                                                                  "rules": Array [
                                                                    "color:",
                                                                    [Function],
                                                                    ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                                                  ],
                                                                },
                                                                "displayName": "select__SelectValue",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "select__SelectValue-sc-17mlv1t-2",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <div
                                                              className="c16"
                                                            />
                                                          </StyledComponent>
                                                        </select__SelectValue>
                                                        <select__Controls
                                                          isOpen={false}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "select__Controls-sc-17mlv1t-9",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c17",
                                                                  "rules": Array [
                                                                    "width:12px;",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "select__Controls",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            isOpen={false}
                                                          >
                                                            <div
                                                              className="c17"
                                                            >
                                                              <ChevronDownIcon>
                                                                <Icon19>
                                                                  <icon19__IconWrapper>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "c18",
                                                                            "isStatic": true,
                                                                            "lastClassName": "c19",
                                                                            "rules": Array [
                                                                              "fill:currentColor;display:flex;",
                                                                            ],
                                                                          },
                                                                          "displayName": "icon19__IconWrapper",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "c18",
                                                                          "target": "span",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <span
                                                                        className="c18 c19"
                                                                      >
                                                                        <ChevronDown
                                                                          aria-label="ChevronDown icon"
                                                                          height="18"
                                                                          viewBox="0 0 18 18"
                                                                          width="18"
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-label="ChevronDown icon"
                                                                            height="18"
                                                                            viewBox="0 0 18 18"
                                                                            width="18"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                                              fillRule="evenodd"
                                                                            />
                                                                          </svg>
                                                                        </ChevronDown>
                                                                      </span>
                                                                    </StyledComponent>
                                                                  </icon19__IconWrapper>
                                                                </Icon19>
                                                              </ChevronDownIcon>
                                                            </div>
                                                          </StyledComponent>
                                                        </select__Controls>
                                                      </div>
                                                    </StyledComponent>
                                                  </select__SelectControl>
                                                </div>
                                              </StyledComponent>
                                            </select__LabelSelect>
                                          </div>
                                        </StyledComponent>
                                      </select__SelectWrapper>
                                    </label>
                                  </StyledComponent>
                                </select__SelectLabel>
                              </ThemeProvider>
                            </EnsureDefaultTheme>
                          </Select>
                        </ClickOutside(Select)>
                      </Toggle(Select)>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-12"
                    >
                      <inset-editor__ReviewDataTitle>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "inset-editor__ReviewDataTitle-sc-17lptu9-1",
                                "isStatic": false,
                                "lastClassName": "c20",
                                "rules": Array [
                                  "margin-top:2rem;color:",
                                  [Function],
                                  ";font-size:18px;line-height:27px;text-align:left;",
                                ],
                              },
                              "displayName": "inset-editor__ReviewDataTitle",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "inset-editor__ReviewDataTitle-sc-17lptu9-1",
                              "target": "h2",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <h2
                            className="c20"
                          >
                            Review data
                          </h2>
                        </StyledComponent>
                      </inset-editor__ReviewDataTitle>
                      <ReviewData
                        language="en-US"
                        name="text"
                        onChange={[Function]}
                        value={Array []}
                      >
                        <div>
                          <Button
                            label="Add field"
                            onClick={[Function]}
                            small={true}
                            type="button"
                            weight="secondary"
                          >
                            <EnsureDefaultTheme>
                              <ThemeProvider
                                theme={[Function]}
                              >
                                <Button__ButtonWrapper
                                  onClick={[Function]}
                                  small={true}
                                  type="button"
                                  weight="secondary"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                                          "isStatic": false,
                                          "lastClassName": "c34",
                                          "rules": Array [
                                            "width:",
                                            [Function],
                                            ";height:",
                                            [Function],
                                            ";padding:",
                                            [Function],
                                            ";border:transparent 1px solid;border-radius:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";color:",
                                            [Function],
                                            ";font-size:",
                                            [Function],
                                            ";text-align:",
                                            [Function],
                                            ";line-height:",
                                            [Function],
                                            ";background-color:",
                                            [Function],
                                            ";transition:",
                                            [Function],
                                            ";",
                                            [Function],
                                            ";",
                                            [Function],
                                            ";",
                                            ".c22",
                                            " > svg{margin-bottom:2px;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            "}",
                                            ".c18",
                                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";background-color:",
                                            [Function],
                                            ";",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            ".c22",
                                            " > svg{",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            "}}",
                                            "@media only screen and ",
                                            "(max-width: 49.94em)",
                                            "{",
                                            "
		",
                                            [Function],
                                            "
	",
                                            "}",
                                          ],
                                        },
                                        "displayName": "Button__ButtonWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                    small={true}
                                    type="button"
                                    weight="secondary"
                                  >
                                    <button
                                      className="c21"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <Button__ButtonInner>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "c22",
                                                "isStatic": false,
                                                "lastClassName": "c23",
                                                "rules": Array [
                                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                                  [Function],
                                                  " + span{margin-left:4px;}}",
                                                  ".c18",
                                                  "{+ span{margin-left:4px;}}",
                                                ],
                                              },
                                              "displayName": "Button__ButtonInner",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "c22",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c22 c23"
                                          >
                                            <Button__Label>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Button__Label-j48i5d-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c24",
                                                      "rules": Array [
                                                        "display:flex;+ svg,+ ",
                                                        ".c18",
                                                        "{margin-left:4px;}",
                                                      ],
                                                    },
                                                    "displayName": "Button__Label",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Button__Label-j48i5d-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c24"
                                                >
                                                  Add field
                                                </span>
                                              </StyledComponent>
                                            </Button__Label>
                                          </div>
                                        </StyledComponent>
                                      </Button__ButtonInner>
                                    </button>
                                  </StyledComponent>
                                </Button__ButtonWrapper>
                              </ThemeProvider>
                            </EnsureDefaultTheme>
                          </Button>
                        </div>
                      </ReviewData>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="flex-row__column flex-row__column--fixed"
              >
                <ReviewBox
                  alignment="Center"
                  hide={true}
                  image={null}
                  score={null}
                  text={Array []}
                  title=""
                >
                  <EnsureDefaultTheme>
                    <ThemeProvider
                      theme={[Function]}
                    >
                      <ReviewBox__ReviewBoxWrapper
                        alignment="Center"
                        className="reviewbox-inset"
                        hide={true}
                        image={null}
                        score={null}
                        text={Array []}
                        title=""
                      >
                        <StyledComponent
                          alignment="Center"
                          className="reviewbox-inset"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                                "isStatic": false,
                                "lastClassName": "c25",
                                "rules": Array [
                                  "width:100%;max-width:470px;margin:0 auto;",
                                  ".c26",
                                  "{",
                                  ".c35",
                                  ":hover{text-decoration:none;}}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  "@media only screen and ",
                                  "(max-width: 49.94em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "
	",
                                  "}",
                                  " ",
                                  "@media only screen and ",
                                  "(min-width: 37.37em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "

	",
                                  "}",
                                  " ",
                                  "@media only screen and ",
                                  "(min-width: 50em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "
	",
                                  "}",
                                ],
                              },
                              "displayName": "ReviewBox__ReviewBoxWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                              "target": "section",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hide={true}
                          image={null}
                          score={null}
                          text={Array []}
                          title=""
                        >
                          <section
                            className="reviewbox-inset c25"
                            title=""
                          >
                            <story-type-label-wrapper__Wrapper
                              margin="small"
                              variant="top"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c26",
                                      "isStatic": false,
                                      "lastClassName": "c27",
                                      "rules": Array [
                                        "display:flex;max-width:100%;overflow:hidden;",
                                        [Function],
                                        " ",
                                        [Function],
                                        ":last-child{margin-right:0;}",
                                        ".c36",
                                        "{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}",
                                      ],
                                    },
                                    "displayName": "story-type-label-wrapper__Wrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c26",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                margin="small"
                                variant="top"
                              >
                                <div
                                  className="c26 c27"
                                />
                              </StyledComponent>
                            </story-type-label-wrapper__Wrapper>
                            <ReviewBox__Head>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ReviewBox__Head-aebpua-2",
                                      "isStatic": true,
                                      "lastClassName": "Uixpq",
                                      "rules": Array [],
                                    },
                                    "displayName": "ReviewBox__Head",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ReviewBox__Head-aebpua-2",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className=""
                                />
                              </StyledComponent>
                            </ReviewBox__Head>
                            <ReviewBox__Content>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c28",
                                      "isStatic": false,
                                      "lastClassName": "c29",
                                      "rules": Array [
                                        "position:relative;padding:15px 15px 1px 15px;background-color:",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "ReviewBox__Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c28",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c28 c29"
                                >
                                  <ReviewBox__Title>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c30",
                                            "isStatic": true,
                                            "lastClassName": "c31",
                                            "rules": Array [
                                              "margin-bottom:15px;font-size:24px;line-height:28px;text-align:center;&:last-child{margin-bottom:0;}",
                                            ],
                                          },
                                          "displayName": "ReviewBox__Title",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c30",
                                          "target": "h2",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <h2
                                        className="c30 c31"
                                      />
                                    </StyledComponent>
                                  </ReviewBox__Title>
                                  <ReviewBox__DataWrapper>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c32",
                                            "isStatic": true,
                                            "lastClassName": "jIFghh",
                                            "rules": Array [],
                                          },
                                          "displayName": "ReviewBox__DataWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c32",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c32 "
                                      />
                                    </StyledComponent>
                                  </ReviewBox__DataWrapper>
                                </div>
                              </StyledComponent>
                            </ReviewBox__Content>
                          </section>
                        </StyledComponent>
                      </ReviewBox__ReviewBoxWrapper>
                    </ThemeProvider>
                  </EnsureDefaultTheme>
                </ReviewBox>
              </div>
            </div>
          </StyledComponent>
        </inset-editor__MainSection>
        <div
          className="form-buttons"
        >
          <Button
            className="form-button"
            label="Cancel"
            onClick={[Function]}
            type="button"
            weight="secondary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button"
                  onClick={[Function]}
                  type="button"
                  weight="secondary"
                >
                  <StyledComponent
                    className="form-button"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c34",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c22",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c18",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c22",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    type="button"
                    weight="secondary"
                  >
                    <button
                      className="form-button c33"
                      onClick={[Function]}
                      type="button"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c22",
                                "isStatic": false,
                                "lastClassName": "c23",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c18",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c22",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c22 c23"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c24",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c18",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c24"
                                >
                                  Cancel
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
          <Button
            className="form-button review-inset-editor__save-button"
            disabled={false}
            label="Save review"
            onClick={[Function]}
            type="submit"
            weight="primary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button review-inset-editor__save-button"
                  disabled={false}
                  isDisabled={false}
                  onClick={[Function]}
                  type="submit"
                  weight="primary"
                >
                  <StyledComponent
                    className="form-button review-inset-editor__save-button"
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c34",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c22",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c18",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c22",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isDisabled={false}
                    onClick={[Function]}
                    type="submit"
                    weight="primary"
                  >
                    <button
                      className="form-button review-inset-editor__save-button c34"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c22",
                                "isStatic": false,
                                "lastClassName": "c23",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c18",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c22",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c22 c23"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c24",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c18",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c24"
                                >
                                  Save review
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
          <Button
            className="form-button review-inset-editor__save-and-insert-button"
            disabled={false}
            label="Save and insert box"
            onClick={[Function]}
            type="submit"
            weight="primary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button review-inset-editor__save-and-insert-button"
                  disabled={false}
                  isDisabled={false}
                  onClick={[Function]}
                  type="submit"
                  weight="primary"
                >
                  <StyledComponent
                    className="form-button review-inset-editor__save-and-insert-button"
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c34",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c22",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c18",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c22",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isDisabled={false}
                    onClick={[Function]}
                    type="submit"
                    weight="primary"
                  >
                    <button
                      className="form-button review-inset-editor__save-and-insert-button c34"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c22",
                                "isStatic": false,
                                "lastClassName": "c23",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c18",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c22",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c22 c23"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c24",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c18",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c24"
                                >
                                  Save and insert box
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
        </div>
      </div>
    </ThemeProvider>
  </EnsureDefaultTheme>
</SimpleInsetEditor>
`;

exports[`<ReviewInsetEditor /> doesn't allow you to save without a title 2`] = `
.c32 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 100%;
  overflow: hidden;
  margin-bottom: 5px;
}

.c32:last-child {
  margin-right: 0;
}

.c32 .c41 {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c36 {
  margin-bottom: 15px;
  font-size: 24px;
  line-height: 28px;
  text-align: center;
}

.c36:last-child {
  margin-bottom: 0;
}

.c34 {
  position: relative;
  padding: 15px 15px 1px 15px;
  background-color: #F5F5F5;
}

.c30 {
  width: 100%;
  max-width: 470px;
  margin: 0 auto;
}

.c30 .c31 .c40:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c30 .c33 {
  padding: 15px;
}

.c30 .c33 .c35 {
  margin-bottom: 0;
}

.c30 .c33 .c37 {
  display: none;
}

.c10 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c29 + svg,
.c29 + .c9 {
  margin-left: 4px;
}

.c28 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c28 svg + span {
  margin-left: 4px;
}

.c28 .c9 + span {
  margin-left: 4px;
}

.c26 {
  width: auto;
  height: 34px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 34px;
  border-color: #0A7BC2;
  color: #0A7BC2;
  font-size: 14px;
  text-align: center;
  line-height: 34px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c26 .c27 > svg {
  margin-bottom: 2px;
}

.c26 .c9 {
  margin-bottom: 2px;
}

.c26:hover,
.c26:active,
.c26:focus {
  color: #053d61;
  border-color: #053d61;
  background-color: #fff;
}

.c26:hover .c27 > svg,
.c26:active .c27 > svg,
.c26:focus .c27 > svg {
  stroke: #085c91;
}

.c38 {
  width: auto;
  height: 42px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 21px;
  border-color: #0A7BC2;
  color: #0A7BC2;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c38 .c27 > svg {
  margin-bottom: 2px;
}

.c38 .c9 {
  margin-bottom: 2px;
}

.c38:hover,
.c38:active,
.c38:focus {
  color: #053d61;
  border-color: #053d61;
  background-color: #fff;
}

.c38:hover .c27 > svg,
.c38:active .c27 > svg,
.c38:focus .c27 > svg {
  stroke: #085c91;
}

.c39 {
  width: auto;
  height: 42px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 21px;
  border-color: transparent;
  color: #FFF;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #0A7BC2;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c39 .c27 > svg {
  margin-bottom: 2px;
}

.c39 .c9 {
  margin-bottom: 2px;
}

.c39:hover,
.c39:active,
.c39:focus {
  color: #fff;
  border-color: transparent;
  background-color: #085c91;
}

.c39:hover .c27 > svg,
.c39:active .c27 > svg,
.c39:focus .c27 > svg {
  stroke: #fff;
}

.c8 {
  background-color: #D24A1D;
  border-radius: 3px;
  color: #FFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  padding: 0.1875rem 0.5rem 0.1875rem 0.25rem;
  position: relative;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.c8:before {
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  content: " ";
  height: 0;
  position: absolute;
  width: 0;
}

.c8:before {
  border-bottom: 5px solid #D24A1D;
  left: 8px;
  top: -5px;
}

.c11 {
  font-size: 0.875rem;
  line-height: 1.125rem;
  margin-bottom: 0;
  margin-left: 0.25rem;
}

.c18 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c14.c14 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c3.c3 {
  color: #D24A1D;
  font-size: 16px;
  line-height: 21px;
}

.c1 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c1:hover .c2 {
  color: #222;
}

.c1:focus-within .c2 {
  color: #0A7BC2;
}

.c1 .c7 {
  margin-top: 8px;
}

.c15.c15 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c15.c15.c15:hover,
.c15.c15.c15:active,
.c15.c15.c15:focus {
  color: #222;
}

.c15:hover {
  border-bottom-color: #666;
}

.c15.c15.c15:focus,
.c15.c15.c15:active {
  border-bottom-color: #0A7BC2;
}

.c15:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6.c6 {
  border-bottom: 1px solid #D24A1D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c6.c6.c6:hover,
.c6.c6.c6:active,
.c6.c6.c6:focus {
  color: #222;
}

.c6:hover {
  border-bottom-color: #a53a17;
}

.c6.c6.c6:focus,
.c6.c6.c6:active {
  border-bottom-color: #D24A1D;
}

.c6:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c5 {
  position: relative;
}

.c5:hover {
  border-bottom-color: #666;
}

.c5:hover .c4:focus,
.c5:hover .c5:active {
  border-bottom-color: #0A7BC2;
}

.c5:hover .c4:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c5 .c43 {
  padding: 0;
}

.c5 .c42 {
  top: 9px;
}

.c19 {
  width: 100%;
}

.c23 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c22 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c22 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c22 button:hover,
.c22 button:active,
.c22 button:focus {
  background: transparent;
}

.c21 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c24 {
  width: 12px;
}

.c24 svg {
  color: #000;
}

.c12 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c17 {
  white-space: nowrap;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c13 .c16 {
  padding: 0 10px;
}

.c13 .c16 label {
  padding: 0 10px;
  width: 100%;
}

.c0 {
  padding-bottom: 30px;
}

.c25 {
  margin-top: 2rem;
  color: #222;
  font-size: 18px;
  line-height: 27px;
  text-align: left;
}

<SimpleInsetEditor
  canInsertBox={true}
  imageUploader={[Function]}
  language="en-US"
  onCancel={[Function]}
  onSubmit={[MockFunction]}
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <div
        className="review-inset-editor"
      >
        <h2
          className="modal-title"
        >
          Edit review
        </h2>
        <inset-editor__MainSection
          className="flex-row"
        >
          <StyledComponent
            className="flex-row"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "inset-editor__MainSection-sc-17lptu9-0",
                  "isStatic": true,
                  "lastClassName": "c0",
                  "rules": Array [
                    "padding-bottom:30px;",
                  ],
                },
                "displayName": "inset-editor__MainSection",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "inset-editor__MainSection-sc-17lptu9-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="flex-row c0"
            >
              <div
                className="flex-row__column small-12 large-auto"
              >
                <div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Title
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <Textfield18
                        blogTheme="default"
                        error="Please specify a review title."
                        name="title"
                        onChange={[Function]}
                        value=""
                      >
                        <Theme
                          blog="default"
                          theme={
                            Object {
                              "breakpointBanner": "969px",
                              "breakpointMedium": "53.125em",
                              "color": Object {
                                "alert": "#EEB544",
                                "amazon": "#F5C056",
                                "backgroundLayer": "rgba(0,0,0,0.45)",
                                "backgroundLight": "#E6F2F8",
                                "black": "#000",
                                "blackOverlay": "rgba(0,0,0,0.7)",
                                "bodytext": "#222",
                                "commerce": "#72AD75",
                                "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                "darkgray": "#666",
                                "darksmoke": "#222",
                                "error": "#D24A1D",
                                "facebook": "#1877F2",
                                "foregroundLayer": "rgba(0,0,0,0.4)",
                                "google": "#DB4437",
                                "gray": "#7D7D7D",
                                "instagram": "#C32AA3",
                                "lightgray": "#E5E5E5",
                                "linkedin": "#0077B5",
                                "logo": "#000",
                                "midgray": "#CCC",
                                "primary": "#0A7BC2",
                                "primaryLight": "#0C91E4",
                                "rss": "#7D7D7D",
                                "secondarytext": "#7D7D7D",
                                "success": "#23891F",
                                "twitter": "#1DA1F2",
                                "white": "#FFF",
                                "whiteOverlay": "rgba(255,255,255,0.7)",
                                "whitesmoke": "#F5F5F5",
                                "youtube": "#FF0000",
                              },
                              "columnGutter": "2.25rem",
                              "columnGutter19": Object {
                                "largeUp": "1.5rem",
                                "small19": "1rem",
                                "xlargeUp": "2rem",
                              },
                              "columnPadding": "1.125rem",
                              "columnPadding19": Object {
                                "largeUp": "0.75rem",
                                "small19": "0.5rem",
                                "xlargeUp": "1rem",
                              },
                              "featuredContentWidth": "1024px",
                              "globalNavHeight": "80px",
                              "linkTransition": "0.1s ease-out",
                              "mainContainerWidth": "66.5%",
                              "mainContentMaxWidth": "800px",
                              "pageWidth": "1336px",
                              "postContentMaxWidth": "636px",
                              "scrollbackNavHeight": "60px",
                              "sidebarContainerWidth": "33.5%",
                              "sidebarContentMaxWidth": "360px",
                              "sidebarContentMinWidth": "300px",
                              "slideshowTransitionDuration": "0.2s",
                              "typography": Object {
                                "body": Object {
                                  "fontFamily": "ElizabethSerif, Georgia, serif",
                                  "fontSizes": Object {
                                    "large": "27px",
                                    "medium": "19px",
                                    "small": "15px",
                                    "xlarge": "30px",
                                    "xsmall": "14px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "embiggenedHeadlineSize": "34px",
                                "headline": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "headlineLineHeight": "1.3",
                                "headlineSize": "24px",
                                "permalinkHeadlineLineHeight": "1.2",
                                "permalinkHeadlineSize": Object {
                                  "mediumUp": "2.5rem",
                                  "small": "2rem",
                                  "xxxlargeUp": "3rem",
                                },
                                "primary": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "serif": Object {
                                  "fontFamily": "ElizabethSerif, Georgia, serif",
                                  "fontSizes": Object {
                                    "large": "27px",
                                    "medium": "19px",
                                    "small": "15px",
                                    "xlarge": "30px",
                                    "xsmall": "14px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "tertiary": Object {
                                  "fontFamily": "FiraSans, sans-serif",
                                  "fontSizes": Object {
                                    "large": "29px",
                                    "medium": "21px",
                                    "small": "17px",
                                    "xlarge": "35px",
                                    "xsmall": "15px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "utility": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                              },
                            }
                          }
                        >
                          <ThemeProvider
                            theme={
                              Object {
                                "blog": "default",
                                "breakpointBanner": "969px",
                                "breakpointMedium": "53.125em",
                                "color": Object {
                                  "alert": "#EEB544",
                                  "amazon": "#F5C056",
                                  "backgroundLayer": "rgba(0,0,0,0.45)",
                                  "backgroundLight": "#E6F2F8",
                                  "black": "#000",
                                  "blackOverlay": "rgba(0,0,0,0.7)",
                                  "bodytext": "#222",
                                  "commerce": "#72AD75",
                                  "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                  "darkgray": "#666",
                                  "darksmoke": "#222",
                                  "error": "#D24A1D",
                                  "facebook": "#1877F2",
                                  "foregroundLayer": "rgba(0,0,0,0.4)",
                                  "google": "#DB4437",
                                  "gray": "#7D7D7D",
                                  "instagram": "#C32AA3",
                                  "lightgray": "#E5E5E5",
                                  "linkedin": "#0077B5",
                                  "logo": "#000",
                                  "midgray": "#CCC",
                                  "primary": "#0A7BC2",
                                  "primaryLight": "#0C91E4",
                                  "rss": "#7D7D7D",
                                  "secondarytext": "#7D7D7D",
                                  "success": "#23891F",
                                  "twitter": "#1DA1F2",
                                  "white": "#FFF",
                                  "whiteOverlay": "rgba(255,255,255,0.7)",
                                  "whitesmoke": "#F5F5F5",
                                  "youtube": "#FF0000",
                                },
                                "columnGutter": "2.25rem",
                                "columnGutter19": Object {
                                  "largeUp": "1.5rem",
                                  "small19": "1rem",
                                  "xlargeUp": "2rem",
                                },
                                "columnPadding": "1.125rem",
                                "columnPadding19": Object {
                                  "largeUp": "0.75rem",
                                  "small19": "0.5rem",
                                  "xlargeUp": "1rem",
                                },
                                "featuredContentWidth": "1024px",
                                "globalNavHeight": "80px",
                                "linkTransition": "0.1s ease-out",
                                "mainContainerWidth": "66.5%",
                                "mainContentMaxWidth": "800px",
                                "pageWidth": "1336px",
                                "postContentMaxWidth": "636px",
                                "scrollbackNavHeight": "60px",
                                "sidebarContainerWidth": "33.5%",
                                "sidebarContentMaxWidth": "360px",
                                "sidebarContentMinWidth": "300px",
                                "slideshowTransitionDuration": "0.2s",
                                "typography": Object {
                                  "body": Object {
                                    "fontFamily": "ElizabethSerif, Georgia, serif",
                                    "fontSizes": Object {
                                      "large": "27px",
                                      "medium": "19px",
                                      "small": "15px",
                                      "xlarge": "30px",
                                      "xsmall": "14px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "embiggenedHeadlineSize": "34px",
                                  "headline": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "headlineLineHeight": "1.3",
                                  "headlineSize": "24px",
                                  "permalinkHeadlineLineHeight": "1.2",
                                  "permalinkHeadlineSize": Object {
                                    "mediumUp": "2.5rem",
                                    "small": "2rem",
                                    "xxxlargeUp": "3rem",
                                  },
                                  "primary": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "serif": Object {
                                    "fontFamily": "ElizabethSerif, Georgia, serif",
                                    "fontSizes": Object {
                                      "large": "27px",
                                      "medium": "19px",
                                      "small": "15px",
                                      "xlarge": "30px",
                                      "xsmall": "14px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "tertiary": Object {
                                    "fontFamily": "FiraSans, sans-serif",
                                    "fontSizes": Object {
                                      "large": "29px",
                                      "medium": "21px",
                                      "small": "17px",
                                      "xlarge": "35px",
                                      "xsmall": "15px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "utility": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                },
                              }
                            }
                          >
                            <textfield__KinjaFormFieldWrapper>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                      "isStatic": false,
                                      "lastClassName": "c1",
                                      "rules": Array [
                                        "margin-bottom:32px;flex-basis:100%;&:hover{",
                                        ".c2",
                                        "{color:",
                                        [Function],
                                        ";}}&:focus-within{",
                                        ".c2",
                                        "{color:",
                                        [Function],
                                        ";}}",
                                        [Function],
                                        " ",
                                        ".c7",
                                        "{margin-top:8px;}",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaFormFieldWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c1"
                                >
                                  <textfield__KinjaLabel
                                    error="Please specify a review title."
                                    htmlFor="title"
                                  >
                                    <StyledComponent
                                      error="Please specify a review title."
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c2",
                                            "isStatic": false,
                                            "lastClassName": "c14",
                                            "rules": Array [
                                              "&&{color:",
                                              [Function],
                                              ";font-size:16px;line-height:21px;}",
                                            ],
                                          },
                                          "displayName": "textfield__KinjaLabel",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c2",
                                          "target": "label",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      htmlFor="title"
                                    >
                                      <label
                                        className="c2 c3"
                                        htmlFor="title"
                                      />
                                    </StyledComponent>
                                  </textfield__KinjaLabel>
                                  <textfield__KinjaTextFieldWrapper
                                    hasCustomIcon={false}
                                    status="default"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c4",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "position:relative;&:hover{border-bottom-color:",
                                              [Function],
                                              ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                              [Function],
                                              ";}&:hover &:disabled{border-bottom-color:",
                                              [Function],
                                              ";cursor:not-allowed;}",
                                              ".c43",
                                              "{padding:0;",
                                              [Function],
                                              "}",
                                              ".textfield__KinjaTextField-sc-1a9gghc-2",
                                              ",",
                                              ".c43",
                                              "{",
                                              [Function],
                                              " ",
                                              [Function],
                                              "}",
                                              ".c42",
                                              "{top:9px;}",
                                            ],
                                          },
                                          "displayName": "textfield__KinjaTextFieldWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c4",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      hasCustomIcon={false}
                                      status="default"
                                    >
                                      <div
                                        className="c4 c5"
                                      >
                                        <textfield__KinjaTextField
                                          error="Please specify a review title."
                                          id="title"
                                          name="title"
                                          onChange={[Function]}
                                          status="default"
                                          type="text"
                                          value=""
                                        >
                                          <StyledComponent
                                            error="Please specify a review title."
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                  "isStatic": false,
                                                  "lastClassName": "c15",
                                                  "rules": Array [
                                                    "&&{border-bottom:1px solid ",
                                                    [Function],
                                                    ";color:",
                                                    [Function],
                                                    " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                                    [Function],
                                                    ";}&:hover{border-bottom-color:",
                                                    [Function],
                                                    ";}&&&:focus,&&&:active{border-bottom-color:",
                                                    [Function],
                                                    ";}&:disabled{border-bottom-color:",
                                                    [Function],
                                                    ";cursor:not-allowed;}",
                                                    ";",
                                                  ],
                                                },
                                                "displayName": "textfield__KinjaTextField",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                "target": "input",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            id="title"
                                            name="title"
                                            onChange={[Function]}
                                            status="default"
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="c6"
                                              id="title"
                                              name="title"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </StyledComponent>
                                        </textfield__KinjaTextField>
                                      </div>
                                    </StyledComponent>
                                  </textfield__KinjaTextFieldWrapper>
                                  <feedback__StyledFeedback
                                    arrow="topleft"
                                    color="error"
                                    text="Please specify a review title."
                                  >
                                    <StyledComponent
                                      arrow="topleft"
                                      color="error"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c7",
                                            "isStatic": true,
                                            "lastClassName": "dkcDmi",
                                            "rules": Array [],
                                          },
                                          "displayName": "feedback__StyledFeedback",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c7",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                          Symbol(Symbol.hasInstance): [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      text="Please specify a review title."
                                    >
                                      <Feedback
                                        arrow="topleft"
                                        className="c7 "
                                        color="error"
                                        text="Please specify a review title."
                                      >
                                        <feedback__FeedbackContainer
                                          arrow="topleft"
                                          className="c7 "
                                          color="error"
                                        >
                                          <StyledComponent
                                            arrow="topleft"
                                            className="c7 "
                                            color="error"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "feedback__FeedbackContainer-sc-11pii97-0",
                                                  "isStatic": false,
                                                  "lastClassName": "c8",
                                                  "rules": Array [
                                                    "background-color:",
                                                    [Function],
                                                    ";border-radius:3px;color:",
                                                    [Function],
                                                    ";display:flex;flex-direction:row;padding:0.1875rem 0.5rem 0.1875rem 0.25rem;position:relative;width:fit-content;",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "feedback__FeedbackContainer",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "feedback__FeedbackContainer-sc-11pii97-0",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="c7 c8"
                                              color="error"
                                            >
                                              <FeedbackIcon
                                                color="error"
                                              >
                                                <ErrorIcon>
                                                  <Icon19>
                                                    <icon19__IconWrapper>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "c9",
                                                              "isStatic": true,
                                                              "lastClassName": "c10",
                                                              "rules": Array [
                                                                "fill:currentColor;display:flex;",
                                                              ],
                                                            },
                                                            "displayName": "icon19__IconWrapper",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "c9",
                                                            "target": "span",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <span
                                                          className="c9 c10"
                                                        >
                                                          <Error
                                                            aria-label="Error icon"
                                                            height="18"
                                                            viewBox="0 0 18 18"
                                                            width="18"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-label="Error icon"
                                                              height="18"
                                                              viewBox="0 0 18 18"
                                                              width="18"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M9.94 2.6l6.37 10.79c.48.8.03 1.61-.91 1.61H2.6c-.93 0-1.38-.81-.9-1.61L8.05 2.6c.48-.8 1.4-.8 1.88 0zm-1.02.5L2.55 13.9c-.08.14-.1.1.06.1H15.4c.16 0 .14.04.05-.1L9.08 3.1c-.09-.14-.07-.14-.16 0zM9 11a1 1 0 0 1 1 1 1 1 0 0 1-1 1c-.54 0-1-.46-1-1a1 1 0 0 1 1-1zm0-5c.7 0 1 .91 1 1.99C10 9.09 9.7 10 9 10s-1-.93-1-2.01C8 6.92 8.31 6 9 6z"
                                                                fillRule="evenodd"
                                                              />
                                                            </svg>
                                                          </Error>
                                                        </span>
                                                      </StyledComponent>
                                                    </icon19__IconWrapper>
                                                  </Icon19>
                                                </ErrorIcon>
                                              </FeedbackIcon>
                                              <feedback__FeedbackText>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "feedback__FeedbackText-sc-11pii97-1",
                                                        "isStatic": true,
                                                        "lastClassName": "c11",
                                                        "rules": Array [
                                                          "font-size:0.875rem;line-height:1.125rem;margin-bottom:0;margin-left:0.25rem;",
                                                        ],
                                                      },
                                                      "displayName": "feedback__FeedbackText",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "feedback__FeedbackText-sc-11pii97-1",
                                                      "target": "p",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <p
                                                    className="c11"
                                                  >
                                                    Please specify a review title.
                                                  </p>
                                                </StyledComponent>
                                              </feedback__FeedbackText>
                                            </div>
                                          </StyledComponent>
                                        </feedback__FeedbackContainer>
                                      </Feedback>
                                    </StyledComponent>
                                  </feedback__StyledFeedback>
                                </div>
                              </StyledComponent>
                            </textfield__KinjaFormFieldWrapper>
                          </ThemeProvider>
                        </Theme>
                      </Textfield18>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Image
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <ImageUpload
                        description=""
                        imageUploader={[Function]}
                        language="en-US"
                        name="image"
                        onChange={[Function]}
                        onError={[Function]}
                        onUploadStarted={[Function]}
                      >
                        <div>
                          <image-upload__ImageUploadTitle>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
                                    "isStatic": true,
                                    "lastClassName": "c12",
                                    "rules": Array [
                                      "text-align:center;font-weight:400;font-size:1.312rem;",
                                    ],
                                  },
                                  "displayName": "image-upload__ImageUploadTitle",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
                                  "target": "p",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <p
                                className="c12"
                              >
                                <span>
                                  Insert an image from the web
                                </span>
                              </p>
                            </StyledComponent>
                          </image-upload__ImageUploadTitle>
                          <image-upload__ImageInputContainer>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
                                    "isStatic": true,
                                    "lastClassName": "c13",
                                    "rules": Array [
                                      "display:flex;",
                                      ".c16",
                                      "{padding:0 10px;label{padding:0 10px;width:100%;}}",
                                    ],
                                  },
                                  "displayName": "image-upload__ImageInputContainer",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13"
                              >
                                <Textfield18
                                  blogTheme="default"
                                  error=""
                                  label="Paste the URL of the image"
                                  name="imageURL"
                                  onChange={[Function]}
                                  value=""
                                >
                                  <Theme
                                    blog="default"
                                    theme={
                                      Object {
                                        "breakpointBanner": "969px",
                                        "breakpointMedium": "53.125em",
                                        "color": Object {
                                          "alert": "#EEB544",
                                          "amazon": "#F5C056",
                                          "backgroundLayer": "rgba(0,0,0,0.45)",
                                          "backgroundLight": "#E6F2F8",
                                          "black": "#000",
                                          "blackOverlay": "rgba(0,0,0,0.7)",
                                          "bodytext": "#222",
                                          "commerce": "#72AD75",
                                          "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                          "darkgray": "#666",
                                          "darksmoke": "#222",
                                          "error": "#D24A1D",
                                          "facebook": "#1877F2",
                                          "foregroundLayer": "rgba(0,0,0,0.4)",
                                          "google": "#DB4437",
                                          "gray": "#7D7D7D",
                                          "instagram": "#C32AA3",
                                          "lightgray": "#E5E5E5",
                                          "linkedin": "#0077B5",
                                          "logo": "#000",
                                          "midgray": "#CCC",
                                          "primary": "#0A7BC2",
                                          "primaryLight": "#0C91E4",
                                          "rss": "#7D7D7D",
                                          "secondarytext": "#7D7D7D",
                                          "success": "#23891F",
                                          "twitter": "#1DA1F2",
                                          "white": "#FFF",
                                          "whiteOverlay": "rgba(255,255,255,0.7)",
                                          "whitesmoke": "#F5F5F5",
                                          "youtube": "#FF0000",
                                        },
                                        "columnGutter": "2.25rem",
                                        "columnGutter19": Object {
                                          "largeUp": "1.5rem",
                                          "small19": "1rem",
                                          "xlargeUp": "2rem",
                                        },
                                        "columnPadding": "1.125rem",
                                        "columnPadding19": Object {
                                          "largeUp": "0.75rem",
                                          "small19": "0.5rem",
                                          "xlargeUp": "1rem",
                                        },
                                        "featuredContentWidth": "1024px",
                                        "globalNavHeight": "80px",
                                        "linkTransition": "0.1s ease-out",
                                        "mainContainerWidth": "66.5%",
                                        "mainContentMaxWidth": "800px",
                                        "pageWidth": "1336px",
                                        "postContentMaxWidth": "636px",
                                        "scrollbackNavHeight": "60px",
                                        "sidebarContainerWidth": "33.5%",
                                        "sidebarContentMaxWidth": "360px",
                                        "sidebarContentMinWidth": "300px",
                                        "slideshowTransitionDuration": "0.2s",
                                        "typography": Object {
                                          "body": Object {
                                            "fontFamily": "ElizabethSerif, Georgia, serif",
                                            "fontSizes": Object {
                                              "large": "27px",
                                              "medium": "19px",
                                              "small": "15px",
                                              "xlarge": "30px",
                                              "xsmall": "14px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "embiggenedHeadlineSize": "34px",
                                          "headline": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "headlineLineHeight": "1.3",
                                          "headlineSize": "24px",
                                          "permalinkHeadlineLineHeight": "1.2",
                                          "permalinkHeadlineSize": Object {
                                            "mediumUp": "2.5rem",
                                            "small": "2rem",
                                            "xxxlargeUp": "3rem",
                                          },
                                          "primary": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "serif": Object {
                                            "fontFamily": "ElizabethSerif, Georgia, serif",
                                            "fontSizes": Object {
                                              "large": "27px",
                                              "medium": "19px",
                                              "small": "15px",
                                              "xlarge": "30px",
                                              "xsmall": "14px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "tertiary": Object {
                                            "fontFamily": "FiraSans, sans-serif",
                                            "fontSizes": Object {
                                              "large": "29px",
                                              "medium": "21px",
                                              "small": "17px",
                                              "xlarge": "35px",
                                              "xsmall": "15px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "utility": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "blog": "default",
                                          "breakpointBanner": "969px",
                                          "breakpointMedium": "53.125em",
                                          "color": Object {
                                            "alert": "#EEB544",
                                            "amazon": "#F5C056",
                                            "backgroundLayer": "rgba(0,0,0,0.45)",
                                            "backgroundLight": "#E6F2F8",
                                            "black": "#000",
                                            "blackOverlay": "rgba(0,0,0,0.7)",
                                            "bodytext": "#222",
                                            "commerce": "#72AD75",
                                            "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                            "darkgray": "#666",
                                            "darksmoke": "#222",
                                            "error": "#D24A1D",
                                            "facebook": "#1877F2",
                                            "foregroundLayer": "rgba(0,0,0,0.4)",
                                            "google": "#DB4437",
                                            "gray": "#7D7D7D",
                                            "instagram": "#C32AA3",
                                            "lightgray": "#E5E5E5",
                                            "linkedin": "#0077B5",
                                            "logo": "#000",
                                            "midgray": "#CCC",
                                            "primary": "#0A7BC2",
                                            "primaryLight": "#0C91E4",
                                            "rss": "#7D7D7D",
                                            "secondarytext": "#7D7D7D",
                                            "success": "#23891F",
                                            "twitter": "#1DA1F2",
                                            "white": "#FFF",
                                            "whiteOverlay": "rgba(255,255,255,0.7)",
                                            "whitesmoke": "#F5F5F5",
                                            "youtube": "#FF0000",
                                          },
                                          "columnGutter": "2.25rem",
                                          "columnGutter19": Object {
                                            "largeUp": "1.5rem",
                                            "small19": "1rem",
                                            "xlargeUp": "2rem",
                                          },
                                          "columnPadding": "1.125rem",
                                          "columnPadding19": Object {
                                            "largeUp": "0.75rem",
                                            "small19": "0.5rem",
                                            "xlargeUp": "1rem",
                                          },
                                          "featuredContentWidth": "1024px",
                                          "globalNavHeight": "80px",
                                          "linkTransition": "0.1s ease-out",
                                          "mainContainerWidth": "66.5%",
                                          "mainContentMaxWidth": "800px",
                                          "pageWidth": "1336px",
                                          "postContentMaxWidth": "636px",
                                          "scrollbackNavHeight": "60px",
                                          "sidebarContainerWidth": "33.5%",
                                          "sidebarContentMaxWidth": "360px",
                                          "sidebarContentMinWidth": "300px",
                                          "slideshowTransitionDuration": "0.2s",
                                          "typography": Object {
                                            "body": Object {
                                              "fontFamily": "ElizabethSerif, Georgia, serif",
                                              "fontSizes": Object {
                                                "large": "27px",
                                                "medium": "19px",
                                                "small": "15px",
                                                "xlarge": "30px",
                                                "xsmall": "14px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "embiggenedHeadlineSize": "34px",
                                            "headline": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "headlineLineHeight": "1.3",
                                            "headlineSize": "24px",
                                            "permalinkHeadlineLineHeight": "1.2",
                                            "permalinkHeadlineSize": Object {
                                              "mediumUp": "2.5rem",
                                              "small": "2rem",
                                              "xxxlargeUp": "3rem",
                                            },
                                            "primary": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "serif": Object {
                                              "fontFamily": "ElizabethSerif, Georgia, serif",
                                              "fontSizes": Object {
                                                "large": "27px",
                                                "medium": "19px",
                                                "small": "15px",
                                                "xlarge": "30px",
                                                "xsmall": "14px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "tertiary": Object {
                                              "fontFamily": "FiraSans, sans-serif",
                                              "fontSizes": Object {
                                                "large": "29px",
                                                "medium": "21px",
                                                "small": "17px",
                                                "xlarge": "35px",
                                                "xsmall": "15px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "utility": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <textfield__KinjaFormFieldWrapper>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                                "isStatic": false,
                                                "lastClassName": "c1",
                                                "rules": Array [
                                                  "margin-bottom:32px;flex-basis:100%;&:hover{",
                                                  ".c2",
                                                  "{color:",
                                                  [Function],
                                                  ";}}&:focus-within{",
                                                  ".c2",
                                                  "{color:",
                                                  [Function],
                                                  ";}}",
                                                  [Function],
                                                  " ",
                                                  ".c7",
                                                  "{margin-top:8px;}",
                                                ],
                                              },
                                              "displayName": "textfield__KinjaFormFieldWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c1"
                                          >
                                            <textfield__KinjaLabel
                                              error=""
                                              htmlFor="imageURL"
                                            >
                                              <StyledComponent
                                                error=""
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c2",
                                                      "isStatic": false,
                                                      "lastClassName": "c14",
                                                      "rules": Array [
                                                        "&&{color:",
                                                        [Function],
                                                        ";font-size:16px;line-height:21px;}",
                                                      ],
                                                    },
                                                    "displayName": "textfield__KinjaLabel",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c2",
                                                    "target": "label",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                htmlFor="imageURL"
                                              >
                                                <label
                                                  className="c2 c14"
                                                  htmlFor="imageURL"
                                                >
                                                  Paste the URL of the image
                                                </label>
                                              </StyledComponent>
                                            </textfield__KinjaLabel>
                                            <textfield__KinjaTextFieldWrapper
                                              hasCustomIcon={false}
                                              status="default"
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c4",
                                                      "isStatic": false,
                                                      "lastClassName": "c5",
                                                      "rules": Array [
                                                        "position:relative;&:hover{border-bottom-color:",
                                                        [Function],
                                                        ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                                        [Function],
                                                        ";}&:hover &:disabled{border-bottom-color:",
                                                        [Function],
                                                        ";cursor:not-allowed;}",
                                                        ".c43",
                                                        "{padding:0;",
                                                        [Function],
                                                        "}",
                                                        ".textfield__KinjaTextField-sc-1a9gghc-2",
                                                        ",",
                                                        ".c43",
                                                        "{",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        "}",
                                                        ".c42",
                                                        "{top:9px;}",
                                                      ],
                                                    },
                                                    "displayName": "textfield__KinjaTextFieldWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                hasCustomIcon={false}
                                                status="default"
                                              >
                                                <div
                                                  className="c4 c5"
                                                >
                                                  <textfield__KinjaTextField
                                                    error=""
                                                    id="imageURL"
                                                    name="imageURL"
                                                    onChange={[Function]}
                                                    status="default"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <StyledComponent
                                                      error=""
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                            "isStatic": false,
                                                            "lastClassName": "c15",
                                                            "rules": Array [
                                                              "&&{border-bottom:1px solid ",
                                                              [Function],
                                                              ";color:",
                                                              [Function],
                                                              " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                                              [Function],
                                                              ";}&:hover{border-bottom-color:",
                                                              [Function],
                                                              ";}&&&:focus,&&&:active{border-bottom-color:",
                                                              [Function],
                                                              ";}&:disabled{border-bottom-color:",
                                                              [Function],
                                                              ";cursor:not-allowed;}",
                                                              ";",
                                                            ],
                                                          },
                                                          "displayName": "textfield__KinjaTextField",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                          "target": "input",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      id="imageURL"
                                                      name="imageURL"
                                                      onChange={[Function]}
                                                      status="default"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <input
                                                        className="c15"
                                                        id="imageURL"
                                                        name="imageURL"
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                      />
                                                    </StyledComponent>
                                                  </textfield__KinjaTextField>
                                                </div>
                                              </StyledComponent>
                                            </textfield__KinjaTextFieldWrapper>
                                          </div>
                                        </StyledComponent>
                                      </textfield__KinjaFormFieldWrapper>
                                    </ThemeProvider>
                                  </Theme>
                                </Textfield18>
                                <image-upload__ImageFileInput>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "c16",
                                          "isStatic": true,
                                          "lastClassName": "caIkJs",
                                          "rules": Array [],
                                        },
                                        "displayName": "image-upload__ImageFileInput",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "c16",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="c16 "
                                    >
                                      <image-upload__FileInputText>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "image-upload__FileInputText-d8l6nt-1",
                                                "isStatic": true,
                                                "lastClassName": "c17",
                                                "rules": Array [
                                                  "white-space:nowrap;",
                                                ],
                                              },
                                              "displayName": "image-upload__FileInputText",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                                              "target": "p",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <p
                                            className="c17"
                                          >
                                            <span
                                              className="show-for-small-only"
                                            >
                                              Or upload one from your device
                                            </span>
                                            <span
                                              className="show-for-medium-up"
                                            >
                                              Or upload one from your computer
                                            </span>
                                          </p>
                                        </StyledComponent>
                                      </image-upload__FileInputText>
                                      <Filefield
                                        accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                        error={null}
                                        name="fileUpload"
                                        onChange={[Function]}
                                      >
                                        <Field
                                          error={null}
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <field__Wrapper
                                                className="field"
                                              >
                                                <StyledComponent
                                                  className="field"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "field__Wrapper-sc-1k7q01z-0",
                                                        "isStatic": false,
                                                        "lastClassName": "c18",
                                                        "rules": Array [
                                                          "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "field__Wrapper",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                                      "target": "label",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <label
                                                    className="field c18"
                                                  >
                                                    <filefield__Input
                                                      accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                      error={null}
                                                      name="fileUpload"
                                                      onChange={[Function]}
                                                    >
                                                      <StyledComponent
                                                        accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                        error={null}
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [
                                                              Object {
                                                                "type": "file",
                                                              },
                                                            ],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "filefield__Input-pd0ao4-0",
                                                              "isStatic": false,
                                                              "lastClassName": "dLFlOg",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "filefield__Input",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "filefield__Input-pd0ao4-0",
                                                            "target": "input",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        name="fileUpload"
                                                        onChange={[Function]}
                                                      >
                                                        <input
                                                          accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                          className=""
                                                          name="fileUpload"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                      </StyledComponent>
                                                    </filefield__Input>
                                                  </label>
                                                </StyledComponent>
                                              </field__Wrapper>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Field>
                                      </Filefield>
                                    </div>
                                  </StyledComponent>
                                </image-upload__ImageFileInput>
                              </div>
                            </StyledComponent>
                          </image-upload__ImageInputContainer>
                        </div>
                      </ImageUpload>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Rating
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <Toggle(Select)
                        height={200}
                        onChange={[Function]}
                        value=""
                      >
                        <ClickOutside(Select)
                          close={[Function]}
                          handleClickOutside={[Function]}
                          height={200}
                          isOpen={false}
                          onChange={[Function]}
                          toggle={[Function]}
                          value=""
                        >
                          <Select
                            close={[Function]}
                            height={200}
                            insideReference={[Function]}
                            isOpen={false}
                            onChange={[Function]}
                            toggle={[Function]}
                            value=""
                          >
                            <EnsureDefaultTheme>
                              <ThemeProvider
                                theme={[Function]}
                              >
                                <select__SelectLabel>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "select__SelectLabel-sc-17mlv1t-0",
                                          "isStatic": false,
                                          "lastClassName": "c19",
                                          "rules": Array [
                                            "width:100%;",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "select__SelectLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                                        "target": "label",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={[Function]}
                                  >
                                    <label
                                      className="c19"
                                    >
                                      <select__SelectWrapper>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                                                "isStatic": false,
                                                "lastClassName": "c20",
                                                "rules": Array [
                                                  "display:",
                                                  [Function],
                                                  ";",
                                                ],
                                              },
                                              "displayName": "select__SelectWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c20"
                                          >
                                            <select__LabelSelect
                                              onClick={[Function]}
                                              open={false}
                                              role="button"
                                              tabIndex="0"
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                                      "isStatic": false,
                                                      "lastClassName": "c21",
                                                      "rules": Array [
                                                        "position:relative;width:100%;outline:none;cursor:pointer;",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "select__LabelSelect",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                onClick={[Function]}
                                                open={false}
                                                role="button"
                                                tabIndex="0"
                                              >
                                                <div
                                                  className="c21"
                                                  onClick={[Function]}
                                                  open={false}
                                                  role="button"
                                                  tabIndex="0"
                                                >
                                                  <select__SelectControl
                                                    isOpen={false}
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "select__SelectControl-sc-17mlv1t-3",
                                                            "isStatic": false,
                                                            "lastClassName": "c22",
                                                            "rules": Array [
                                                              "align-items:center;background-color:",
                                                              [Function],
                                                              ";border-color:#d9d9d9 ",
                                                              [Function],
                                                              " #b3b3b3;border-radius:4px;border:1px solid ",
                                                              [Function],
                                                              ";color:",
                                                              [Function],
                                                              ";display:flex;height:",
                                                              "36",
                                                              "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                                            ],
                                                          },
                                                          "displayName": "select__SelectControl",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "select__SelectControl-sc-17mlv1t-3",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      isOpen={false}
                                                    >
                                                      <div
                                                        className="c22"
                                                      >
                                                        <select__SelectValue>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "select__SelectValue-sc-17mlv1t-2",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c23",
                                                                  "rules": Array [
                                                                    "color:",
                                                                    [Function],
                                                                    ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                                                  ],
                                                                },
                                                                "displayName": "select__SelectValue",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "select__SelectValue-sc-17mlv1t-2",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <div
                                                              className="c23"
                                                            />
                                                          </StyledComponent>
                                                        </select__SelectValue>
                                                        <select__Controls
                                                          isOpen={false}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "select__Controls-sc-17mlv1t-9",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c24",
                                                                  "rules": Array [
                                                                    "width:12px;",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "select__Controls",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            isOpen={false}
                                                          >
                                                            <div
                                                              className="c24"
                                                            >
                                                              <ChevronDownIcon>
                                                                <Icon19>
                                                                  <icon19__IconWrapper>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "c9",
                                                                            "isStatic": true,
                                                                            "lastClassName": "c10",
                                                                            "rules": Array [
                                                                              "fill:currentColor;display:flex;",
                                                                            ],
                                                                          },
                                                                          "displayName": "icon19__IconWrapper",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "c9",
                                                                          "target": "span",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <span
                                                                        className="c9 c10"
                                                                      >
                                                                        <ChevronDown
                                                                          aria-label="ChevronDown icon"
                                                                          height="18"
                                                                          viewBox="0 0 18 18"
                                                                          width="18"
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-label="ChevronDown icon"
                                                                            height="18"
                                                                            viewBox="0 0 18 18"
                                                                            width="18"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                                              fillRule="evenodd"
                                                                            />
                                                                          </svg>
                                                                        </ChevronDown>
                                                                      </span>
                                                                    </StyledComponent>
                                                                  </icon19__IconWrapper>
                                                                </Icon19>
                                                              </ChevronDownIcon>
                                                            </div>
                                                          </StyledComponent>
                                                        </select__Controls>
                                                      </div>
                                                    </StyledComponent>
                                                  </select__SelectControl>
                                                </div>
                                              </StyledComponent>
                                            </select__LabelSelect>
                                          </div>
                                        </StyledComponent>
                                      </select__SelectWrapper>
                                    </label>
                                  </StyledComponent>
                                </select__SelectLabel>
                              </ThemeProvider>
                            </EnsureDefaultTheme>
                          </Select>
                        </ClickOutside(Select)>
                      </Toggle(Select)>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-12"
                    >
                      <inset-editor__ReviewDataTitle>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "inset-editor__ReviewDataTitle-sc-17lptu9-1",
                                "isStatic": false,
                                "lastClassName": "c25",
                                "rules": Array [
                                  "margin-top:2rem;color:",
                                  [Function],
                                  ";font-size:18px;line-height:27px;text-align:left;",
                                ],
                              },
                              "displayName": "inset-editor__ReviewDataTitle",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "inset-editor__ReviewDataTitle-sc-17lptu9-1",
                              "target": "h2",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <h2
                            className="c25"
                          >
                            Review data
                          </h2>
                        </StyledComponent>
                      </inset-editor__ReviewDataTitle>
                      <ReviewData
                        language="en-US"
                        name="text"
                        onChange={[Function]}
                        value={Array []}
                      >
                        <div>
                          <Button
                            label="Add field"
                            onClick={[Function]}
                            small={true}
                            type="button"
                            weight="secondary"
                          >
                            <EnsureDefaultTheme>
                              <ThemeProvider
                                theme={[Function]}
                              >
                                <Button__ButtonWrapper
                                  onClick={[Function]}
                                  small={true}
                                  type="button"
                                  weight="secondary"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                                          "isStatic": false,
                                          "lastClassName": "c39",
                                          "rules": Array [
                                            "width:",
                                            [Function],
                                            ";height:",
                                            [Function],
                                            ";padding:",
                                            [Function],
                                            ";border:transparent 1px solid;border-radius:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";color:",
                                            [Function],
                                            ";font-size:",
                                            [Function],
                                            ";text-align:",
                                            [Function],
                                            ";line-height:",
                                            [Function],
                                            ";background-color:",
                                            [Function],
                                            ";transition:",
                                            [Function],
                                            ";",
                                            [Function],
                                            ";",
                                            [Function],
                                            ";",
                                            ".c27",
                                            " > svg{margin-bottom:2px;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            "}",
                                            ".c9",
                                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";background-color:",
                                            [Function],
                                            ";",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            ".c27",
                                            " > svg{",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            "}}",
                                            "@media only screen and ",
                                            "(max-width: 49.94em)",
                                            "{",
                                            "
		",
                                            [Function],
                                            "
	",
                                            "}",
                                          ],
                                        },
                                        "displayName": "Button__ButtonWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                    small={true}
                                    type="button"
                                    weight="secondary"
                                  >
                                    <button
                                      className="c26"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <Button__ButtonInner>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "c27",
                                                "isStatic": false,
                                                "lastClassName": "c28",
                                                "rules": Array [
                                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                                  [Function],
                                                  " + span{margin-left:4px;}}",
                                                  ".c9",
                                                  "{+ span{margin-left:4px;}}",
                                                ],
                                              },
                                              "displayName": "Button__ButtonInner",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "c27",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c27 c28"
                                          >
                                            <Button__Label>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Button__Label-j48i5d-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c29",
                                                      "rules": Array [
                                                        "display:flex;+ svg,+ ",
                                                        ".c9",
                                                        "{margin-left:4px;}",
                                                      ],
                                                    },
                                                    "displayName": "Button__Label",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Button__Label-j48i5d-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c29"
                                                >
                                                  Add field
                                                </span>
                                              </StyledComponent>
                                            </Button__Label>
                                          </div>
                                        </StyledComponent>
                                      </Button__ButtonInner>
                                    </button>
                                  </StyledComponent>
                                </Button__ButtonWrapper>
                              </ThemeProvider>
                            </EnsureDefaultTheme>
                          </Button>
                        </div>
                      </ReviewData>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="flex-row__column flex-row__column--fixed"
              >
                <ReviewBox
                  alignment="Center"
                  hide={true}
                  image={null}
                  score={null}
                  text={Array []}
                  title=""
                >
                  <EnsureDefaultTheme>
                    <ThemeProvider
                      theme={[Function]}
                    >
                      <ReviewBox__ReviewBoxWrapper
                        alignment="Center"
                        className="reviewbox-inset"
                        hide={true}
                        image={null}
                        score={null}
                        text={Array []}
                        title=""
                      >
                        <StyledComponent
                          alignment="Center"
                          className="reviewbox-inset"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                                "isStatic": false,
                                "lastClassName": "c30",
                                "rules": Array [
                                  "width:100%;max-width:470px;margin:0 auto;",
                                  ".c31",
                                  "{",
                                  ".c40",
                                  ":hover{text-decoration:none;}}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  "@media only screen and ",
                                  "(max-width: 49.94em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "
	",
                                  "}",
                                  " ",
                                  "@media only screen and ",
                                  "(min-width: 37.37em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "

	",
                                  "}",
                                  " ",
                                  "@media only screen and ",
                                  "(min-width: 50em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "
	",
                                  "}",
                                ],
                              },
                              "displayName": "ReviewBox__ReviewBoxWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                              "target": "section",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hide={true}
                          image={null}
                          score={null}
                          text={Array []}
                          title=""
                        >
                          <section
                            className="reviewbox-inset c30"
                            title=""
                          >
                            <story-type-label-wrapper__Wrapper
                              margin="small"
                              variant="top"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c31",
                                      "isStatic": false,
                                      "lastClassName": "c32",
                                      "rules": Array [
                                        "display:flex;max-width:100%;overflow:hidden;",
                                        [Function],
                                        " ",
                                        [Function],
                                        ":last-child{margin-right:0;}",
                                        ".c41",
                                        "{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}",
                                      ],
                                    },
                                    "displayName": "story-type-label-wrapper__Wrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c31",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                margin="small"
                                variant="top"
                              >
                                <div
                                  className="c31 c32"
                                />
                              </StyledComponent>
                            </story-type-label-wrapper__Wrapper>
                            <ReviewBox__Head>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ReviewBox__Head-aebpua-2",
                                      "isStatic": true,
                                      "lastClassName": "Uixpq",
                                      "rules": Array [],
                                    },
                                    "displayName": "ReviewBox__Head",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ReviewBox__Head-aebpua-2",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className=""
                                />
                              </StyledComponent>
                            </ReviewBox__Head>
                            <ReviewBox__Content>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c33",
                                      "isStatic": false,
                                      "lastClassName": "c34",
                                      "rules": Array [
                                        "position:relative;padding:15px 15px 1px 15px;background-color:",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "ReviewBox__Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c33",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c33 c34"
                                >
                                  <ReviewBox__Title>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c35",
                                            "isStatic": true,
                                            "lastClassName": "c36",
                                            "rules": Array [
                                              "margin-bottom:15px;font-size:24px;line-height:28px;text-align:center;&:last-child{margin-bottom:0;}",
                                            ],
                                          },
                                          "displayName": "ReviewBox__Title",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c35",
                                          "target": "h2",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <h2
                                        className="c35 c36"
                                      />
                                    </StyledComponent>
                                  </ReviewBox__Title>
                                  <ReviewBox__DataWrapper>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c37",
                                            "isStatic": true,
                                            "lastClassName": "jIFghh",
                                            "rules": Array [],
                                          },
                                          "displayName": "ReviewBox__DataWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c37",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c37 "
                                      />
                                    </StyledComponent>
                                  </ReviewBox__DataWrapper>
                                </div>
                              </StyledComponent>
                            </ReviewBox__Content>
                          </section>
                        </StyledComponent>
                      </ReviewBox__ReviewBoxWrapper>
                    </ThemeProvider>
                  </EnsureDefaultTheme>
                </ReviewBox>
              </div>
            </div>
          </StyledComponent>
        </inset-editor__MainSection>
        <div
          className="form-buttons"
        >
          <Button
            className="form-button"
            label="Cancel"
            onClick={[Function]}
            type="button"
            weight="secondary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button"
                  onClick={[Function]}
                  type="button"
                  weight="secondary"
                >
                  <StyledComponent
                    className="form-button"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c39",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c27",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c9",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c27",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    type="button"
                    weight="secondary"
                  >
                    <button
                      className="form-button c38"
                      onClick={[Function]}
                      type="button"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c27",
                                "isStatic": false,
                                "lastClassName": "c28",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c9",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c27",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c27 c28"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c29",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c9",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c29"
                                >
                                  Cancel
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
          <Button
            className="form-button review-inset-editor__save-button"
            disabled={false}
            label="Save review"
            onClick={[Function]}
            type="submit"
            weight="primary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button review-inset-editor__save-button"
                  disabled={false}
                  isDisabled={false}
                  onClick={[Function]}
                  type="submit"
                  weight="primary"
                >
                  <StyledComponent
                    className="form-button review-inset-editor__save-button"
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c39",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c27",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c9",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c27",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isDisabled={false}
                    onClick={[Function]}
                    type="submit"
                    weight="primary"
                  >
                    <button
                      className="form-button review-inset-editor__save-button c39"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c27",
                                "isStatic": false,
                                "lastClassName": "c28",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c9",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c27",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c27 c28"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c29",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c9",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c29"
                                >
                                  Save review
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
          <Button
            className="form-button review-inset-editor__save-and-insert-button"
            disabled={false}
            label="Save and insert box"
            onClick={[Function]}
            type="submit"
            weight="primary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button review-inset-editor__save-and-insert-button"
                  disabled={false}
                  isDisabled={false}
                  onClick={[Function]}
                  type="submit"
                  weight="primary"
                >
                  <StyledComponent
                    className="form-button review-inset-editor__save-and-insert-button"
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c39",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c27",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c9",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c27",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isDisabled={false}
                    onClick={[Function]}
                    type="submit"
                    weight="primary"
                  >
                    <button
                      className="form-button review-inset-editor__save-and-insert-button c39"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c27",
                                "isStatic": false,
                                "lastClassName": "c28",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c9",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c27",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c27 c28"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c29",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c9",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c29"
                                >
                                  Save and insert box
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
        </div>
      </div>
    </ThemeProvider>
  </EnsureDefaultTheme>
</SimpleInsetEditor>
`;

exports[`<ReviewInsetEditor /> doesn't allow you to save without a title 3`] = `
.c32 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 100%;
  overflow: hidden;
  margin-bottom: 5px;
}

.c32:last-child {
  margin-right: 0;
}

.c32 .c41 {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c36 {
  margin-bottom: 15px;
  font-size: 24px;
  line-height: 28px;
  text-align: center;
}

.c36:last-child {
  margin-bottom: 0;
}

.c34 {
  position: relative;
  padding: 15px 15px 1px 15px;
  background-color: #F5F5F5;
}

.c30 {
  width: 100%;
  max-width: 470px;
  margin: 0 auto;
}

.c30 .c31 .c40:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c30 .c33 {
  padding: 15px;
}

.c30 .c33 .c35 {
  margin-bottom: 0;
}

.c30 .c33 .c37 {
  display: none;
}

.c10 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c29 + svg,
.c29 + .c9 {
  margin-left: 4px;
}

.c28 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c28 svg + span {
  margin-left: 4px;
}

.c28 .c9 + span {
  margin-left: 4px;
}

.c26 {
  width: auto;
  height: 34px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 34px;
  border-color: #0A7BC2;
  color: #0A7BC2;
  font-size: 14px;
  text-align: center;
  line-height: 34px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c26 .c27 > svg {
  margin-bottom: 2px;
}

.c26 .c9 {
  margin-bottom: 2px;
}

.c26:hover,
.c26:active,
.c26:focus {
  color: #053d61;
  border-color: #053d61;
  background-color: #fff;
}

.c26:hover .c27 > svg,
.c26:active .c27 > svg,
.c26:focus .c27 > svg {
  stroke: #085c91;
}

.c38 {
  width: auto;
  height: 42px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 21px;
  border-color: #0A7BC2;
  color: #0A7BC2;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c38 .c27 > svg {
  margin-bottom: 2px;
}

.c38 .c9 {
  margin-bottom: 2px;
}

.c38:hover,
.c38:active,
.c38:focus {
  color: #053d61;
  border-color: #053d61;
  background-color: #fff;
}

.c38:hover .c27 > svg,
.c38:active .c27 > svg,
.c38:focus .c27 > svg {
  stroke: #085c91;
}

.c39 {
  width: auto;
  height: 42px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 21px;
  border-color: transparent;
  color: #FFF;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #0A7BC2;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c39 .c27 > svg {
  margin-bottom: 2px;
}

.c39 .c9 {
  margin-bottom: 2px;
}

.c39:hover,
.c39:active,
.c39:focus {
  color: #fff;
  border-color: transparent;
  background-color: #085c91;
}

.c39:hover .c27 > svg,
.c39:active .c27 > svg,
.c39:focus .c27 > svg {
  stroke: #fff;
}

.c8 {
  background-color: #D24A1D;
  border-radius: 3px;
  color: #FFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  padding: 0.1875rem 0.5rem 0.1875rem 0.25rem;
  position: relative;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.c8:before {
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  content: " ";
  height: 0;
  position: absolute;
  width: 0;
}

.c8:before {
  border-bottom: 5px solid #D24A1D;
  left: 8px;
  top: -5px;
}

.c11 {
  font-size: 0.875rem;
  line-height: 1.125rem;
  margin-bottom: 0;
  margin-left: 0.25rem;
}

.c18 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c14.c14 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c3.c3 {
  color: #D24A1D;
  font-size: 16px;
  line-height: 21px;
}

.c1 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c1:hover .c2 {
  color: #222;
}

.c1:focus-within .c2 {
  color: #0A7BC2;
}

.c1 .c7 {
  margin-top: 8px;
}

.c15.c15 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c15.c15.c15:hover,
.c15.c15.c15:active,
.c15.c15.c15:focus {
  color: #222;
}

.c15:hover {
  border-bottom-color: #666;
}

.c15.c15.c15:focus,
.c15.c15.c15:active {
  border-bottom-color: #0A7BC2;
}

.c15:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6.c6 {
  border-bottom: 1px solid #D24A1D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c6.c6.c6:hover,
.c6.c6.c6:active,
.c6.c6.c6:focus {
  color: #222;
}

.c6:hover {
  border-bottom-color: #a53a17;
}

.c6.c6.c6:focus,
.c6.c6.c6:active {
  border-bottom-color: #D24A1D;
}

.c6:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c5 {
  position: relative;
}

.c5:hover {
  border-bottom-color: #666;
}

.c5:hover .c4:focus,
.c5:hover .c5:active {
  border-bottom-color: #0A7BC2;
}

.c5:hover .c4:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c5 .c43 {
  padding: 0;
}

.c5 .c42 {
  top: 9px;
}

.c19 {
  width: 100%;
}

.c23 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c22 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c22 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c22 button:hover,
.c22 button:active,
.c22 button:focus {
  background: transparent;
}

.c21 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c24 {
  width: 12px;
}

.c24 svg {
  color: #000;
}

.c12 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c17 {
  white-space: nowrap;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c13 .c16 {
  padding: 0 10px;
}

.c13 .c16 label {
  padding: 0 10px;
  width: 100%;
}

.c0 {
  padding-bottom: 30px;
}

.c25 {
  margin-top: 2rem;
  color: #222;
  font-size: 18px;
  line-height: 27px;
  text-align: left;
}

<SimpleInsetEditor
  canInsertBox={true}
  imageUploader={[Function]}
  language="en-US"
  onCancel={[Function]}
  onSubmit={[MockFunction]}
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <div
        className="review-inset-editor"
      >
        <h2
          className="modal-title"
        >
          Edit review
        </h2>
        <inset-editor__MainSection
          className="flex-row"
        >
          <StyledComponent
            className="flex-row"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "inset-editor__MainSection-sc-17lptu9-0",
                  "isStatic": true,
                  "lastClassName": "c0",
                  "rules": Array [
                    "padding-bottom:30px;",
                  ],
                },
                "displayName": "inset-editor__MainSection",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "inset-editor__MainSection-sc-17lptu9-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="flex-row c0"
            >
              <div
                className="flex-row__column small-12 large-auto"
              >
                <div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Title
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <Textfield18
                        blogTheme="default"
                        error="Please specify a review title."
                        name="title"
                        onChange={[Function]}
                        value=""
                      >
                        <Theme
                          blog="default"
                          theme={
                            Object {
                              "breakpointBanner": "969px",
                              "breakpointMedium": "53.125em",
                              "color": Object {
                                "alert": "#EEB544",
                                "amazon": "#F5C056",
                                "backgroundLayer": "rgba(0,0,0,0.45)",
                                "backgroundLight": "#E6F2F8",
                                "black": "#000",
                                "blackOverlay": "rgba(0,0,0,0.7)",
                                "bodytext": "#222",
                                "commerce": "#72AD75",
                                "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                "darkgray": "#666",
                                "darksmoke": "#222",
                                "error": "#D24A1D",
                                "facebook": "#1877F2",
                                "foregroundLayer": "rgba(0,0,0,0.4)",
                                "google": "#DB4437",
                                "gray": "#7D7D7D",
                                "instagram": "#C32AA3",
                                "lightgray": "#E5E5E5",
                                "linkedin": "#0077B5",
                                "logo": "#000",
                                "midgray": "#CCC",
                                "primary": "#0A7BC2",
                                "primaryLight": "#0C91E4",
                                "rss": "#7D7D7D",
                                "secondarytext": "#7D7D7D",
                                "success": "#23891F",
                                "twitter": "#1DA1F2",
                                "white": "#FFF",
                                "whiteOverlay": "rgba(255,255,255,0.7)",
                                "whitesmoke": "#F5F5F5",
                                "youtube": "#FF0000",
                              },
                              "columnGutter": "2.25rem",
                              "columnGutter19": Object {
                                "largeUp": "1.5rem",
                                "small19": "1rem",
                                "xlargeUp": "2rem",
                              },
                              "columnPadding": "1.125rem",
                              "columnPadding19": Object {
                                "largeUp": "0.75rem",
                                "small19": "0.5rem",
                                "xlargeUp": "1rem",
                              },
                              "featuredContentWidth": "1024px",
                              "globalNavHeight": "80px",
                              "linkTransition": "0.1s ease-out",
                              "mainContainerWidth": "66.5%",
                              "mainContentMaxWidth": "800px",
                              "pageWidth": "1336px",
                              "postContentMaxWidth": "636px",
                              "scrollbackNavHeight": "60px",
                              "sidebarContainerWidth": "33.5%",
                              "sidebarContentMaxWidth": "360px",
                              "sidebarContentMinWidth": "300px",
                              "slideshowTransitionDuration": "0.2s",
                              "typography": Object {
                                "body": Object {
                                  "fontFamily": "ElizabethSerif, Georgia, serif",
                                  "fontSizes": Object {
                                    "large": "27px",
                                    "medium": "19px",
                                    "small": "15px",
                                    "xlarge": "30px",
                                    "xsmall": "14px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "embiggenedHeadlineSize": "34px",
                                "headline": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "headlineLineHeight": "1.3",
                                "headlineSize": "24px",
                                "permalinkHeadlineLineHeight": "1.2",
                                "permalinkHeadlineSize": Object {
                                  "mediumUp": "2.5rem",
                                  "small": "2rem",
                                  "xxxlargeUp": "3rem",
                                },
                                "primary": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "serif": Object {
                                  "fontFamily": "ElizabethSerif, Georgia, serif",
                                  "fontSizes": Object {
                                    "large": "27px",
                                    "medium": "19px",
                                    "small": "15px",
                                    "xlarge": "30px",
                                    "xsmall": "14px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "tertiary": Object {
                                  "fontFamily": "FiraSans, sans-serif",
                                  "fontSizes": Object {
                                    "large": "29px",
                                    "medium": "21px",
                                    "small": "17px",
                                    "xlarge": "35px",
                                    "xsmall": "15px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "utility": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                              },
                            }
                          }
                        >
                          <ThemeProvider
                            theme={
                              Object {
                                "blog": "default",
                                "breakpointBanner": "969px",
                                "breakpointMedium": "53.125em",
                                "color": Object {
                                  "alert": "#EEB544",
                                  "amazon": "#F5C056",
                                  "backgroundLayer": "rgba(0,0,0,0.45)",
                                  "backgroundLight": "#E6F2F8",
                                  "black": "#000",
                                  "blackOverlay": "rgba(0,0,0,0.7)",
                                  "bodytext": "#222",
                                  "commerce": "#72AD75",
                                  "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                  "darkgray": "#666",
                                  "darksmoke": "#222",
                                  "error": "#D24A1D",
                                  "facebook": "#1877F2",
                                  "foregroundLayer": "rgba(0,0,0,0.4)",
                                  "google": "#DB4437",
                                  "gray": "#7D7D7D",
                                  "instagram": "#C32AA3",
                                  "lightgray": "#E5E5E5",
                                  "linkedin": "#0077B5",
                                  "logo": "#000",
                                  "midgray": "#CCC",
                                  "primary": "#0A7BC2",
                                  "primaryLight": "#0C91E4",
                                  "rss": "#7D7D7D",
                                  "secondarytext": "#7D7D7D",
                                  "success": "#23891F",
                                  "twitter": "#1DA1F2",
                                  "white": "#FFF",
                                  "whiteOverlay": "rgba(255,255,255,0.7)",
                                  "whitesmoke": "#F5F5F5",
                                  "youtube": "#FF0000",
                                },
                                "columnGutter": "2.25rem",
                                "columnGutter19": Object {
                                  "largeUp": "1.5rem",
                                  "small19": "1rem",
                                  "xlargeUp": "2rem",
                                },
                                "columnPadding": "1.125rem",
                                "columnPadding19": Object {
                                  "largeUp": "0.75rem",
                                  "small19": "0.5rem",
                                  "xlargeUp": "1rem",
                                },
                                "featuredContentWidth": "1024px",
                                "globalNavHeight": "80px",
                                "linkTransition": "0.1s ease-out",
                                "mainContainerWidth": "66.5%",
                                "mainContentMaxWidth": "800px",
                                "pageWidth": "1336px",
                                "postContentMaxWidth": "636px",
                                "scrollbackNavHeight": "60px",
                                "sidebarContainerWidth": "33.5%",
                                "sidebarContentMaxWidth": "360px",
                                "sidebarContentMinWidth": "300px",
                                "slideshowTransitionDuration": "0.2s",
                                "typography": Object {
                                  "body": Object {
                                    "fontFamily": "ElizabethSerif, Georgia, serif",
                                    "fontSizes": Object {
                                      "large": "27px",
                                      "medium": "19px",
                                      "small": "15px",
                                      "xlarge": "30px",
                                      "xsmall": "14px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "embiggenedHeadlineSize": "34px",
                                  "headline": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "headlineLineHeight": "1.3",
                                  "headlineSize": "24px",
                                  "permalinkHeadlineLineHeight": "1.2",
                                  "permalinkHeadlineSize": Object {
                                    "mediumUp": "2.5rem",
                                    "small": "2rem",
                                    "xxxlargeUp": "3rem",
                                  },
                                  "primary": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "serif": Object {
                                    "fontFamily": "ElizabethSerif, Georgia, serif",
                                    "fontSizes": Object {
                                      "large": "27px",
                                      "medium": "19px",
                                      "small": "15px",
                                      "xlarge": "30px",
                                      "xsmall": "14px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "tertiary": Object {
                                    "fontFamily": "FiraSans, sans-serif",
                                    "fontSizes": Object {
                                      "large": "29px",
                                      "medium": "21px",
                                      "small": "17px",
                                      "xlarge": "35px",
                                      "xsmall": "15px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "utility": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                },
                              }
                            }
                          >
                            <textfield__KinjaFormFieldWrapper>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                      "isStatic": false,
                                      "lastClassName": "c1",
                                      "rules": Array [
                                        "margin-bottom:32px;flex-basis:100%;&:hover{",
                                        ".c2",
                                        "{color:",
                                        [Function],
                                        ";}}&:focus-within{",
                                        ".c2",
                                        "{color:",
                                        [Function],
                                        ";}}",
                                        [Function],
                                        " ",
                                        ".c7",
                                        "{margin-top:8px;}",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaFormFieldWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c1"
                                >
                                  <textfield__KinjaLabel
                                    error="Please specify a review title."
                                    htmlFor="title"
                                  >
                                    <StyledComponent
                                      error="Please specify a review title."
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c2",
                                            "isStatic": false,
                                            "lastClassName": "c14",
                                            "rules": Array [
                                              "&&{color:",
                                              [Function],
                                              ";font-size:16px;line-height:21px;}",
                                            ],
                                          },
                                          "displayName": "textfield__KinjaLabel",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c2",
                                          "target": "label",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      htmlFor="title"
                                    >
                                      <label
                                        className="c2 c3"
                                        htmlFor="title"
                                      />
                                    </StyledComponent>
                                  </textfield__KinjaLabel>
                                  <textfield__KinjaTextFieldWrapper
                                    hasCustomIcon={false}
                                    status="default"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c4",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "position:relative;&:hover{border-bottom-color:",
                                              [Function],
                                              ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                              [Function],
                                              ";}&:hover &:disabled{border-bottom-color:",
                                              [Function],
                                              ";cursor:not-allowed;}",
                                              ".c43",
                                              "{padding:0;",
                                              [Function],
                                              "}",
                                              ".textfield__KinjaTextField-sc-1a9gghc-2",
                                              ",",
                                              ".c43",
                                              "{",
                                              [Function],
                                              " ",
                                              [Function],
                                              "}",
                                              ".c42",
                                              "{top:9px;}",
                                            ],
                                          },
                                          "displayName": "textfield__KinjaTextFieldWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c4",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      hasCustomIcon={false}
                                      status="default"
                                    >
                                      <div
                                        className="c4 c5"
                                      >
                                        <textfield__KinjaTextField
                                          error="Please specify a review title."
                                          id="title"
                                          name="title"
                                          onChange={[Function]}
                                          status="default"
                                          type="text"
                                          value=""
                                        >
                                          <StyledComponent
                                            error="Please specify a review title."
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                  "isStatic": false,
                                                  "lastClassName": "c15",
                                                  "rules": Array [
                                                    "&&{border-bottom:1px solid ",
                                                    [Function],
                                                    ";color:",
                                                    [Function],
                                                    " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                                    [Function],
                                                    ";}&:hover{border-bottom-color:",
                                                    [Function],
                                                    ";}&&&:focus,&&&:active{border-bottom-color:",
                                                    [Function],
                                                    ";}&:disabled{border-bottom-color:",
                                                    [Function],
                                                    ";cursor:not-allowed;}",
                                                    ";",
                                                  ],
                                                },
                                                "displayName": "textfield__KinjaTextField",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                "target": "input",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            id="title"
                                            name="title"
                                            onChange={[Function]}
                                            status="default"
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="c6"
                                              id="title"
                                              name="title"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </StyledComponent>
                                        </textfield__KinjaTextField>
                                      </div>
                                    </StyledComponent>
                                  </textfield__KinjaTextFieldWrapper>
                                  <feedback__StyledFeedback
                                    arrow="topleft"
                                    color="error"
                                    text="Please specify a review title."
                                  >
                                    <StyledComponent
                                      arrow="topleft"
                                      color="error"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c7",
                                            "isStatic": true,
                                            "lastClassName": "dkcDmi",
                                            "rules": Array [],
                                          },
                                          "displayName": "feedback__StyledFeedback",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c7",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                          Symbol(Symbol.hasInstance): [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      text="Please specify a review title."
                                    >
                                      <Feedback
                                        arrow="topleft"
                                        className="c7 "
                                        color="error"
                                        text="Please specify a review title."
                                      >
                                        <feedback__FeedbackContainer
                                          arrow="topleft"
                                          className="c7 "
                                          color="error"
                                        >
                                          <StyledComponent
                                            arrow="topleft"
                                            className="c7 "
                                            color="error"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "feedback__FeedbackContainer-sc-11pii97-0",
                                                  "isStatic": false,
                                                  "lastClassName": "c8",
                                                  "rules": Array [
                                                    "background-color:",
                                                    [Function],
                                                    ";border-radius:3px;color:",
                                                    [Function],
                                                    ";display:flex;flex-direction:row;padding:0.1875rem 0.5rem 0.1875rem 0.25rem;position:relative;width:fit-content;",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                    " ",
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "feedback__FeedbackContainer",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "feedback__FeedbackContainer-sc-11pii97-0",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="c7 c8"
                                              color="error"
                                            >
                                              <FeedbackIcon
                                                color="error"
                                              >
                                                <ErrorIcon>
                                                  <Icon19>
                                                    <icon19__IconWrapper>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "c9",
                                                              "isStatic": true,
                                                              "lastClassName": "c10",
                                                              "rules": Array [
                                                                "fill:currentColor;display:flex;",
                                                              ],
                                                            },
                                                            "displayName": "icon19__IconWrapper",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "c9",
                                                            "target": "span",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <span
                                                          className="c9 c10"
                                                        >
                                                          <Error
                                                            aria-label="Error icon"
                                                            height="18"
                                                            viewBox="0 0 18 18"
                                                            width="18"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <svg
                                                              aria-label="Error icon"
                                                              height="18"
                                                              viewBox="0 0 18 18"
                                                              width="18"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M9.94 2.6l6.37 10.79c.48.8.03 1.61-.91 1.61H2.6c-.93 0-1.38-.81-.9-1.61L8.05 2.6c.48-.8 1.4-.8 1.88 0zm-1.02.5L2.55 13.9c-.08.14-.1.1.06.1H15.4c.16 0 .14.04.05-.1L9.08 3.1c-.09-.14-.07-.14-.16 0zM9 11a1 1 0 0 1 1 1 1 1 0 0 1-1 1c-.54 0-1-.46-1-1a1 1 0 0 1 1-1zm0-5c.7 0 1 .91 1 1.99C10 9.09 9.7 10 9 10s-1-.93-1-2.01C8 6.92 8.31 6 9 6z"
                                                                fillRule="evenodd"
                                                              />
                                                            </svg>
                                                          </Error>
                                                        </span>
                                                      </StyledComponent>
                                                    </icon19__IconWrapper>
                                                  </Icon19>
                                                </ErrorIcon>
                                              </FeedbackIcon>
                                              <feedback__FeedbackText>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "feedback__FeedbackText-sc-11pii97-1",
                                                        "isStatic": true,
                                                        "lastClassName": "c11",
                                                        "rules": Array [
                                                          "font-size:0.875rem;line-height:1.125rem;margin-bottom:0;margin-left:0.25rem;",
                                                        ],
                                                      },
                                                      "displayName": "feedback__FeedbackText",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "feedback__FeedbackText-sc-11pii97-1",
                                                      "target": "p",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <p
                                                    className="c11"
                                                  >
                                                    Please specify a review title.
                                                  </p>
                                                </StyledComponent>
                                              </feedback__FeedbackText>
                                            </div>
                                          </StyledComponent>
                                        </feedback__FeedbackContainer>
                                      </Feedback>
                                    </StyledComponent>
                                  </feedback__StyledFeedback>
                                </div>
                              </StyledComponent>
                            </textfield__KinjaFormFieldWrapper>
                          </ThemeProvider>
                        </Theme>
                      </Textfield18>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Image
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <ImageUpload
                        description=""
                        imageUploader={[Function]}
                        language="en-US"
                        name="image"
                        onChange={[Function]}
                        onError={[Function]}
                        onUploadStarted={[Function]}
                      >
                        <div>
                          <image-upload__ImageUploadTitle>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
                                    "isStatic": true,
                                    "lastClassName": "c12",
                                    "rules": Array [
                                      "text-align:center;font-weight:400;font-size:1.312rem;",
                                    ],
                                  },
                                  "displayName": "image-upload__ImageUploadTitle",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
                                  "target": "p",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <p
                                className="c12"
                              >
                                <span>
                                  Insert an image from the web
                                </span>
                              </p>
                            </StyledComponent>
                          </image-upload__ImageUploadTitle>
                          <image-upload__ImageInputContainer>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
                                    "isStatic": true,
                                    "lastClassName": "c13",
                                    "rules": Array [
                                      "display:flex;",
                                      ".c16",
                                      "{padding:0 10px;label{padding:0 10px;width:100%;}}",
                                    ],
                                  },
                                  "displayName": "image-upload__ImageInputContainer",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13"
                              >
                                <Textfield18
                                  blogTheme="default"
                                  error=""
                                  label="Paste the URL of the image"
                                  name="imageURL"
                                  onChange={[Function]}
                                  value=""
                                >
                                  <Theme
                                    blog="default"
                                    theme={
                                      Object {
                                        "breakpointBanner": "969px",
                                        "breakpointMedium": "53.125em",
                                        "color": Object {
                                          "alert": "#EEB544",
                                          "amazon": "#F5C056",
                                          "backgroundLayer": "rgba(0,0,0,0.45)",
                                          "backgroundLight": "#E6F2F8",
                                          "black": "#000",
                                          "blackOverlay": "rgba(0,0,0,0.7)",
                                          "bodytext": "#222",
                                          "commerce": "#72AD75",
                                          "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                          "darkgray": "#666",
                                          "darksmoke": "#222",
                                          "error": "#D24A1D",
                                          "facebook": "#1877F2",
                                          "foregroundLayer": "rgba(0,0,0,0.4)",
                                          "google": "#DB4437",
                                          "gray": "#7D7D7D",
                                          "instagram": "#C32AA3",
                                          "lightgray": "#E5E5E5",
                                          "linkedin": "#0077B5",
                                          "logo": "#000",
                                          "midgray": "#CCC",
                                          "primary": "#0A7BC2",
                                          "primaryLight": "#0C91E4",
                                          "rss": "#7D7D7D",
                                          "secondarytext": "#7D7D7D",
                                          "success": "#23891F",
                                          "twitter": "#1DA1F2",
                                          "white": "#FFF",
                                          "whiteOverlay": "rgba(255,255,255,0.7)",
                                          "whitesmoke": "#F5F5F5",
                                          "youtube": "#FF0000",
                                        },
                                        "columnGutter": "2.25rem",
                                        "columnGutter19": Object {
                                          "largeUp": "1.5rem",
                                          "small19": "1rem",
                                          "xlargeUp": "2rem",
                                        },
                                        "columnPadding": "1.125rem",
                                        "columnPadding19": Object {
                                          "largeUp": "0.75rem",
                                          "small19": "0.5rem",
                                          "xlargeUp": "1rem",
                                        },
                                        "featuredContentWidth": "1024px",
                                        "globalNavHeight": "80px",
                                        "linkTransition": "0.1s ease-out",
                                        "mainContainerWidth": "66.5%",
                                        "mainContentMaxWidth": "800px",
                                        "pageWidth": "1336px",
                                        "postContentMaxWidth": "636px",
                                        "scrollbackNavHeight": "60px",
                                        "sidebarContainerWidth": "33.5%",
                                        "sidebarContentMaxWidth": "360px",
                                        "sidebarContentMinWidth": "300px",
                                        "slideshowTransitionDuration": "0.2s",
                                        "typography": Object {
                                          "body": Object {
                                            "fontFamily": "ElizabethSerif, Georgia, serif",
                                            "fontSizes": Object {
                                              "large": "27px",
                                              "medium": "19px",
                                              "small": "15px",
                                              "xlarge": "30px",
                                              "xsmall": "14px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "embiggenedHeadlineSize": "34px",
                                          "headline": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "headlineLineHeight": "1.3",
                                          "headlineSize": "24px",
                                          "permalinkHeadlineLineHeight": "1.2",
                                          "permalinkHeadlineSize": Object {
                                            "mediumUp": "2.5rem",
                                            "small": "2rem",
                                            "xxxlargeUp": "3rem",
                                          },
                                          "primary": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "serif": Object {
                                            "fontFamily": "ElizabethSerif, Georgia, serif",
                                            "fontSizes": Object {
                                              "large": "27px",
                                              "medium": "19px",
                                              "small": "15px",
                                              "xlarge": "30px",
                                              "xsmall": "14px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "tertiary": Object {
                                            "fontFamily": "FiraSans, sans-serif",
                                            "fontSizes": Object {
                                              "large": "29px",
                                              "medium": "21px",
                                              "small": "17px",
                                              "xlarge": "35px",
                                              "xsmall": "15px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "utility": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "blog": "default",
                                          "breakpointBanner": "969px",
                                          "breakpointMedium": "53.125em",
                                          "color": Object {
                                            "alert": "#EEB544",
                                            "amazon": "#F5C056",
                                            "backgroundLayer": "rgba(0,0,0,0.45)",
                                            "backgroundLight": "#E6F2F8",
                                            "black": "#000",
                                            "blackOverlay": "rgba(0,0,0,0.7)",
                                            "bodytext": "#222",
                                            "commerce": "#72AD75",
                                            "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                            "darkgray": "#666",
                                            "darksmoke": "#222",
                                            "error": "#D24A1D",
                                            "facebook": "#1877F2",
                                            "foregroundLayer": "rgba(0,0,0,0.4)",
                                            "google": "#DB4437",
                                            "gray": "#7D7D7D",
                                            "instagram": "#C32AA3",
                                            "lightgray": "#E5E5E5",
                                            "linkedin": "#0077B5",
                                            "logo": "#000",
                                            "midgray": "#CCC",
                                            "primary": "#0A7BC2",
                                            "primaryLight": "#0C91E4",
                                            "rss": "#7D7D7D",
                                            "secondarytext": "#7D7D7D",
                                            "success": "#23891F",
                                            "twitter": "#1DA1F2",
                                            "white": "#FFF",
                                            "whiteOverlay": "rgba(255,255,255,0.7)",
                                            "whitesmoke": "#F5F5F5",
                                            "youtube": "#FF0000",
                                          },
                                          "columnGutter": "2.25rem",
                                          "columnGutter19": Object {
                                            "largeUp": "1.5rem",
                                            "small19": "1rem",
                                            "xlargeUp": "2rem",
                                          },
                                          "columnPadding": "1.125rem",
                                          "columnPadding19": Object {
                                            "largeUp": "0.75rem",
                                            "small19": "0.5rem",
                                            "xlargeUp": "1rem",
                                          },
                                          "featuredContentWidth": "1024px",
                                          "globalNavHeight": "80px",
                                          "linkTransition": "0.1s ease-out",
                                          "mainContainerWidth": "66.5%",
                                          "mainContentMaxWidth": "800px",
                                          "pageWidth": "1336px",
                                          "postContentMaxWidth": "636px",
                                          "scrollbackNavHeight": "60px",
                                          "sidebarContainerWidth": "33.5%",
                                          "sidebarContentMaxWidth": "360px",
                                          "sidebarContentMinWidth": "300px",
                                          "slideshowTransitionDuration": "0.2s",
                                          "typography": Object {
                                            "body": Object {
                                              "fontFamily": "ElizabethSerif, Georgia, serif",
                                              "fontSizes": Object {
                                                "large": "27px",
                                                "medium": "19px",
                                                "small": "15px",
                                                "xlarge": "30px",
                                                "xsmall": "14px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "embiggenedHeadlineSize": "34px",
                                            "headline": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "headlineLineHeight": "1.3",
                                            "headlineSize": "24px",
                                            "permalinkHeadlineLineHeight": "1.2",
                                            "permalinkHeadlineSize": Object {
                                              "mediumUp": "2.5rem",
                                              "small": "2rem",
                                              "xxxlargeUp": "3rem",
                                            },
                                            "primary": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "serif": Object {
                                              "fontFamily": "ElizabethSerif, Georgia, serif",
                                              "fontSizes": Object {
                                                "large": "27px",
                                                "medium": "19px",
                                                "small": "15px",
                                                "xlarge": "30px",
                                                "xsmall": "14px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "tertiary": Object {
                                              "fontFamily": "FiraSans, sans-serif",
                                              "fontSizes": Object {
                                                "large": "29px",
                                                "medium": "21px",
                                                "small": "17px",
                                                "xlarge": "35px",
                                                "xsmall": "15px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "utility": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <textfield__KinjaFormFieldWrapper>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                                "isStatic": false,
                                                "lastClassName": "c1",
                                                "rules": Array [
                                                  "margin-bottom:32px;flex-basis:100%;&:hover{",
                                                  ".c2",
                                                  "{color:",
                                                  [Function],
                                                  ";}}&:focus-within{",
                                                  ".c2",
                                                  "{color:",
                                                  [Function],
                                                  ";}}",
                                                  [Function],
                                                  " ",
                                                  ".c7",
                                                  "{margin-top:8px;}",
                                                ],
                                              },
                                              "displayName": "textfield__KinjaFormFieldWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c1"
                                          >
                                            <textfield__KinjaLabel
                                              error=""
                                              htmlFor="imageURL"
                                            >
                                              <StyledComponent
                                                error=""
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c2",
                                                      "isStatic": false,
                                                      "lastClassName": "c14",
                                                      "rules": Array [
                                                        "&&{color:",
                                                        [Function],
                                                        ";font-size:16px;line-height:21px;}",
                                                      ],
                                                    },
                                                    "displayName": "textfield__KinjaLabel",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c2",
                                                    "target": "label",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                htmlFor="imageURL"
                                              >
                                                <label
                                                  className="c2 c14"
                                                  htmlFor="imageURL"
                                                >
                                                  Paste the URL of the image
                                                </label>
                                              </StyledComponent>
                                            </textfield__KinjaLabel>
                                            <textfield__KinjaTextFieldWrapper
                                              hasCustomIcon={false}
                                              status="default"
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c4",
                                                      "isStatic": false,
                                                      "lastClassName": "c5",
                                                      "rules": Array [
                                                        "position:relative;&:hover{border-bottom-color:",
                                                        [Function],
                                                        ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                                        [Function],
                                                        ";}&:hover &:disabled{border-bottom-color:",
                                                        [Function],
                                                        ";cursor:not-allowed;}",
                                                        ".c43",
                                                        "{padding:0;",
                                                        [Function],
                                                        "}",
                                                        ".textfield__KinjaTextField-sc-1a9gghc-2",
                                                        ",",
                                                        ".c43",
                                                        "{",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        "}",
                                                        ".c42",
                                                        "{top:9px;}",
                                                      ],
                                                    },
                                                    "displayName": "textfield__KinjaTextFieldWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                hasCustomIcon={false}
                                                status="default"
                                              >
                                                <div
                                                  className="c4 c5"
                                                >
                                                  <textfield__KinjaTextField
                                                    error=""
                                                    id="imageURL"
                                                    name="imageURL"
                                                    onChange={[Function]}
                                                    status="default"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <StyledComponent
                                                      error=""
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                            "isStatic": false,
                                                            "lastClassName": "c15",
                                                            "rules": Array [
                                                              "&&{border-bottom:1px solid ",
                                                              [Function],
                                                              ";color:",
                                                              [Function],
                                                              " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                                              [Function],
                                                              ";}&:hover{border-bottom-color:",
                                                              [Function],
                                                              ";}&&&:focus,&&&:active{border-bottom-color:",
                                                              [Function],
                                                              ";}&:disabled{border-bottom-color:",
                                                              [Function],
                                                              ";cursor:not-allowed;}",
                                                              ";",
                                                            ],
                                                          },
                                                          "displayName": "textfield__KinjaTextField",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                          "target": "input",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      id="imageURL"
                                                      name="imageURL"
                                                      onChange={[Function]}
                                                      status="default"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <input
                                                        className="c15"
                                                        id="imageURL"
                                                        name="imageURL"
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                      />
                                                    </StyledComponent>
                                                  </textfield__KinjaTextField>
                                                </div>
                                              </StyledComponent>
                                            </textfield__KinjaTextFieldWrapper>
                                          </div>
                                        </StyledComponent>
                                      </textfield__KinjaFormFieldWrapper>
                                    </ThemeProvider>
                                  </Theme>
                                </Textfield18>
                                <image-upload__ImageFileInput>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "c16",
                                          "isStatic": true,
                                          "lastClassName": "caIkJs",
                                          "rules": Array [],
                                        },
                                        "displayName": "image-upload__ImageFileInput",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "c16",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="c16 "
                                    >
                                      <image-upload__FileInputText>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "image-upload__FileInputText-d8l6nt-1",
                                                "isStatic": true,
                                                "lastClassName": "c17",
                                                "rules": Array [
                                                  "white-space:nowrap;",
                                                ],
                                              },
                                              "displayName": "image-upload__FileInputText",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                                              "target": "p",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <p
                                            className="c17"
                                          >
                                            <span
                                              className="show-for-small-only"
                                            >
                                              Or upload one from your device
                                            </span>
                                            <span
                                              className="show-for-medium-up"
                                            >
                                              Or upload one from your computer
                                            </span>
                                          </p>
                                        </StyledComponent>
                                      </image-upload__FileInputText>
                                      <Filefield
                                        accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                        error={null}
                                        name="fileUpload"
                                        onChange={[Function]}
                                      >
                                        <Field
                                          error={null}
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <field__Wrapper
                                                className="field"
                                              >
                                                <StyledComponent
                                                  className="field"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "field__Wrapper-sc-1k7q01z-0",
                                                        "isStatic": false,
                                                        "lastClassName": "c18",
                                                        "rules": Array [
                                                          "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "field__Wrapper",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                                      "target": "label",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <label
                                                    className="field c18"
                                                  >
                                                    <filefield__Input
                                                      accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                      error={null}
                                                      name="fileUpload"
                                                      onChange={[Function]}
                                                    >
                                                      <StyledComponent
                                                        accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                        error={null}
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [
                                                              Object {
                                                                "type": "file",
                                                              },
                                                            ],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "filefield__Input-pd0ao4-0",
                                                              "isStatic": false,
                                                              "lastClassName": "dLFlOg",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "filefield__Input",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "filefield__Input-pd0ao4-0",
                                                            "target": "input",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        name="fileUpload"
                                                        onChange={[Function]}
                                                      >
                                                        <input
                                                          accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                          className=""
                                                          name="fileUpload"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                      </StyledComponent>
                                                    </filefield__Input>
                                                  </label>
                                                </StyledComponent>
                                              </field__Wrapper>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Field>
                                      </Filefield>
                                    </div>
                                  </StyledComponent>
                                </image-upload__ImageFileInput>
                              </div>
                            </StyledComponent>
                          </image-upload__ImageInputContainer>
                        </div>
                      </ImageUpload>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Rating
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <Toggle(Select)
                        height={200}
                        onChange={[Function]}
                        value=""
                      >
                        <ClickOutside(Select)
                          close={[Function]}
                          handleClickOutside={[Function]}
                          height={200}
                          isOpen={false}
                          onChange={[Function]}
                          toggle={[Function]}
                          value=""
                        >
                          <Select
                            close={[Function]}
                            height={200}
                            insideReference={[Function]}
                            isOpen={false}
                            onChange={[Function]}
                            toggle={[Function]}
                            value=""
                          >
                            <EnsureDefaultTheme>
                              <ThemeProvider
                                theme={[Function]}
                              >
                                <select__SelectLabel>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "select__SelectLabel-sc-17mlv1t-0",
                                          "isStatic": false,
                                          "lastClassName": "c19",
                                          "rules": Array [
                                            "width:100%;",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "select__SelectLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                                        "target": "label",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={[Function]}
                                  >
                                    <label
                                      className="c19"
                                    >
                                      <select__SelectWrapper>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                                                "isStatic": false,
                                                "lastClassName": "c20",
                                                "rules": Array [
                                                  "display:",
                                                  [Function],
                                                  ";",
                                                ],
                                              },
                                              "displayName": "select__SelectWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c20"
                                          >
                                            <select__LabelSelect
                                              onClick={[Function]}
                                              open={false}
                                              role="button"
                                              tabIndex="0"
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                                      "isStatic": false,
                                                      "lastClassName": "c21",
                                                      "rules": Array [
                                                        "position:relative;width:100%;outline:none;cursor:pointer;",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "select__LabelSelect",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                onClick={[Function]}
                                                open={false}
                                                role="button"
                                                tabIndex="0"
                                              >
                                                <div
                                                  className="c21"
                                                  onClick={[Function]}
                                                  open={false}
                                                  role="button"
                                                  tabIndex="0"
                                                >
                                                  <select__SelectControl
                                                    isOpen={false}
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "select__SelectControl-sc-17mlv1t-3",
                                                            "isStatic": false,
                                                            "lastClassName": "c22",
                                                            "rules": Array [
                                                              "align-items:center;background-color:",
                                                              [Function],
                                                              ";border-color:#d9d9d9 ",
                                                              [Function],
                                                              " #b3b3b3;border-radius:4px;border:1px solid ",
                                                              [Function],
                                                              ";color:",
                                                              [Function],
                                                              ";display:flex;height:",
                                                              "36",
                                                              "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                                            ],
                                                          },
                                                          "displayName": "select__SelectControl",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "select__SelectControl-sc-17mlv1t-3",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      isOpen={false}
                                                    >
                                                      <div
                                                        className="c22"
                                                      >
                                                        <select__SelectValue>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "select__SelectValue-sc-17mlv1t-2",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c23",
                                                                  "rules": Array [
                                                                    "color:",
                                                                    [Function],
                                                                    ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                                                  ],
                                                                },
                                                                "displayName": "select__SelectValue",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "select__SelectValue-sc-17mlv1t-2",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <div
                                                              className="c23"
                                                            />
                                                          </StyledComponent>
                                                        </select__SelectValue>
                                                        <select__Controls
                                                          isOpen={false}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "select__Controls-sc-17mlv1t-9",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c24",
                                                                  "rules": Array [
                                                                    "width:12px;",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "select__Controls",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            isOpen={false}
                                                          >
                                                            <div
                                                              className="c24"
                                                            >
                                                              <ChevronDownIcon>
                                                                <Icon19>
                                                                  <icon19__IconWrapper>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "c9",
                                                                            "isStatic": true,
                                                                            "lastClassName": "c10",
                                                                            "rules": Array [
                                                                              "fill:currentColor;display:flex;",
                                                                            ],
                                                                          },
                                                                          "displayName": "icon19__IconWrapper",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "c9",
                                                                          "target": "span",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <span
                                                                        className="c9 c10"
                                                                      >
                                                                        <ChevronDown
                                                                          aria-label="ChevronDown icon"
                                                                          height="18"
                                                                          viewBox="0 0 18 18"
                                                                          width="18"
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-label="ChevronDown icon"
                                                                            height="18"
                                                                            viewBox="0 0 18 18"
                                                                            width="18"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                                              fillRule="evenodd"
                                                                            />
                                                                          </svg>
                                                                        </ChevronDown>
                                                                      </span>
                                                                    </StyledComponent>
                                                                  </icon19__IconWrapper>
                                                                </Icon19>
                                                              </ChevronDownIcon>
                                                            </div>
                                                          </StyledComponent>
                                                        </select__Controls>
                                                      </div>
                                                    </StyledComponent>
                                                  </select__SelectControl>
                                                </div>
                                              </StyledComponent>
                                            </select__LabelSelect>
                                          </div>
                                        </StyledComponent>
                                      </select__SelectWrapper>
                                    </label>
                                  </StyledComponent>
                                </select__SelectLabel>
                              </ThemeProvider>
                            </EnsureDefaultTheme>
                          </Select>
                        </ClickOutside(Select)>
                      </Toggle(Select)>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-12"
                    >
                      <inset-editor__ReviewDataTitle>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "inset-editor__ReviewDataTitle-sc-17lptu9-1",
                                "isStatic": false,
                                "lastClassName": "c25",
                                "rules": Array [
                                  "margin-top:2rem;color:",
                                  [Function],
                                  ";font-size:18px;line-height:27px;text-align:left;",
                                ],
                              },
                              "displayName": "inset-editor__ReviewDataTitle",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "inset-editor__ReviewDataTitle-sc-17lptu9-1",
                              "target": "h2",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <h2
                            className="c25"
                          >
                            Review data
                          </h2>
                        </StyledComponent>
                      </inset-editor__ReviewDataTitle>
                      <ReviewData
                        language="en-US"
                        name="text"
                        onChange={[Function]}
                        value={Array []}
                      >
                        <div>
                          <Button
                            label="Add field"
                            onClick={[Function]}
                            small={true}
                            type="button"
                            weight="secondary"
                          >
                            <EnsureDefaultTheme>
                              <ThemeProvider
                                theme={[Function]}
                              >
                                <Button__ButtonWrapper
                                  onClick={[Function]}
                                  small={true}
                                  type="button"
                                  weight="secondary"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                                          "isStatic": false,
                                          "lastClassName": "c39",
                                          "rules": Array [
                                            "width:",
                                            [Function],
                                            ";height:",
                                            [Function],
                                            ";padding:",
                                            [Function],
                                            ";border:transparent 1px solid;border-radius:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";color:",
                                            [Function],
                                            ";font-size:",
                                            [Function],
                                            ";text-align:",
                                            [Function],
                                            ";line-height:",
                                            [Function],
                                            ";background-color:",
                                            [Function],
                                            ";transition:",
                                            [Function],
                                            ";",
                                            [Function],
                                            ";",
                                            [Function],
                                            ";",
                                            ".c27",
                                            " > svg{margin-bottom:2px;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            "}",
                                            ".c9",
                                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";background-color:",
                                            [Function],
                                            ";",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            ".c27",
                                            " > svg{",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            "}}",
                                            "@media only screen and ",
                                            "(max-width: 49.94em)",
                                            "{",
                                            "
		",
                                            [Function],
                                            "
	",
                                            "}",
                                          ],
                                        },
                                        "displayName": "Button__ButtonWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                    small={true}
                                    type="button"
                                    weight="secondary"
                                  >
                                    <button
                                      className="c26"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <Button__ButtonInner>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "c27",
                                                "isStatic": false,
                                                "lastClassName": "c28",
                                                "rules": Array [
                                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                                  [Function],
                                                  " + span{margin-left:4px;}}",
                                                  ".c9",
                                                  "{+ span{margin-left:4px;}}",
                                                ],
                                              },
                                              "displayName": "Button__ButtonInner",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "c27",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c27 c28"
                                          >
                                            <Button__Label>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Button__Label-j48i5d-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c29",
                                                      "rules": Array [
                                                        "display:flex;+ svg,+ ",
                                                        ".c9",
                                                        "{margin-left:4px;}",
                                                      ],
                                                    },
                                                    "displayName": "Button__Label",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Button__Label-j48i5d-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c29"
                                                >
                                                  Add field
                                                </span>
                                              </StyledComponent>
                                            </Button__Label>
                                          </div>
                                        </StyledComponent>
                                      </Button__ButtonInner>
                                    </button>
                                  </StyledComponent>
                                </Button__ButtonWrapper>
                              </ThemeProvider>
                            </EnsureDefaultTheme>
                          </Button>
                        </div>
                      </ReviewData>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="flex-row__column flex-row__column--fixed"
              >
                <ReviewBox
                  alignment="Center"
                  hide={true}
                  image={null}
                  score={null}
                  text={Array []}
                  title=""
                >
                  <EnsureDefaultTheme>
                    <ThemeProvider
                      theme={[Function]}
                    >
                      <ReviewBox__ReviewBoxWrapper
                        alignment="Center"
                        className="reviewbox-inset"
                        hide={true}
                        image={null}
                        score={null}
                        text={Array []}
                        title=""
                      >
                        <StyledComponent
                          alignment="Center"
                          className="reviewbox-inset"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                                "isStatic": false,
                                "lastClassName": "c30",
                                "rules": Array [
                                  "width:100%;max-width:470px;margin:0 auto;",
                                  ".c31",
                                  "{",
                                  ".c40",
                                  ":hover{text-decoration:none;}}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  "@media only screen and ",
                                  "(max-width: 49.94em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "
	",
                                  "}",
                                  " ",
                                  "@media only screen and ",
                                  "(min-width: 37.37em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "

	",
                                  "}",
                                  " ",
                                  "@media only screen and ",
                                  "(min-width: 50em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "
	",
                                  "}",
                                ],
                              },
                              "displayName": "ReviewBox__ReviewBoxWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                              "target": "section",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hide={true}
                          image={null}
                          score={null}
                          text={Array []}
                          title=""
                        >
                          <section
                            className="reviewbox-inset c30"
                            title=""
                          >
                            <story-type-label-wrapper__Wrapper
                              margin="small"
                              variant="top"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c31",
                                      "isStatic": false,
                                      "lastClassName": "c32",
                                      "rules": Array [
                                        "display:flex;max-width:100%;overflow:hidden;",
                                        [Function],
                                        " ",
                                        [Function],
                                        ":last-child{margin-right:0;}",
                                        ".c41",
                                        "{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}",
                                      ],
                                    },
                                    "displayName": "story-type-label-wrapper__Wrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c31",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                margin="small"
                                variant="top"
                              >
                                <div
                                  className="c31 c32"
                                />
                              </StyledComponent>
                            </story-type-label-wrapper__Wrapper>
                            <ReviewBox__Head>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ReviewBox__Head-aebpua-2",
                                      "isStatic": true,
                                      "lastClassName": "Uixpq",
                                      "rules": Array [],
                                    },
                                    "displayName": "ReviewBox__Head",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ReviewBox__Head-aebpua-2",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className=""
                                />
                              </StyledComponent>
                            </ReviewBox__Head>
                            <ReviewBox__Content>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c33",
                                      "isStatic": false,
                                      "lastClassName": "c34",
                                      "rules": Array [
                                        "position:relative;padding:15px 15px 1px 15px;background-color:",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "ReviewBox__Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c33",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c33 c34"
                                >
                                  <ReviewBox__Title>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c35",
                                            "isStatic": true,
                                            "lastClassName": "c36",
                                            "rules": Array [
                                              "margin-bottom:15px;font-size:24px;line-height:28px;text-align:center;&:last-child{margin-bottom:0;}",
                                            ],
                                          },
                                          "displayName": "ReviewBox__Title",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c35",
                                          "target": "h2",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <h2
                                        className="c35 c36"
                                      />
                                    </StyledComponent>
                                  </ReviewBox__Title>
                                  <ReviewBox__DataWrapper>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c37",
                                            "isStatic": true,
                                            "lastClassName": "jIFghh",
                                            "rules": Array [],
                                          },
                                          "displayName": "ReviewBox__DataWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c37",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c37 "
                                      />
                                    </StyledComponent>
                                  </ReviewBox__DataWrapper>
                                </div>
                              </StyledComponent>
                            </ReviewBox__Content>
                          </section>
                        </StyledComponent>
                      </ReviewBox__ReviewBoxWrapper>
                    </ThemeProvider>
                  </EnsureDefaultTheme>
                </ReviewBox>
              </div>
            </div>
          </StyledComponent>
        </inset-editor__MainSection>
        <div
          className="form-buttons"
        >
          <Button
            className="form-button"
            label="Cancel"
            onClick={[Function]}
            type="button"
            weight="secondary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button"
                  onClick={[Function]}
                  type="button"
                  weight="secondary"
                >
                  <StyledComponent
                    className="form-button"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c39",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c27",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c9",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c27",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    type="button"
                    weight="secondary"
                  >
                    <button
                      className="form-button c38"
                      onClick={[Function]}
                      type="button"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c27",
                                "isStatic": false,
                                "lastClassName": "c28",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c9",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c27",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c27 c28"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c29",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c9",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c29"
                                >
                                  Cancel
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
          <Button
            className="form-button review-inset-editor__save-button"
            disabled={false}
            label="Save review"
            onClick={[Function]}
            type="submit"
            weight="primary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button review-inset-editor__save-button"
                  disabled={false}
                  isDisabled={false}
                  onClick={[Function]}
                  type="submit"
                  weight="primary"
                >
                  <StyledComponent
                    className="form-button review-inset-editor__save-button"
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c39",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c27",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c9",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c27",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isDisabled={false}
                    onClick={[Function]}
                    type="submit"
                    weight="primary"
                  >
                    <button
                      className="form-button review-inset-editor__save-button c39"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c27",
                                "isStatic": false,
                                "lastClassName": "c28",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c9",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c27",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c27 c28"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c29",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c9",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c29"
                                >
                                  Save review
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
          <Button
            className="form-button review-inset-editor__save-and-insert-button"
            disabled={false}
            label="Save and insert box"
            onClick={[Function]}
            type="submit"
            weight="primary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button review-inset-editor__save-and-insert-button"
                  disabled={false}
                  isDisabled={false}
                  onClick={[Function]}
                  type="submit"
                  weight="primary"
                >
                  <StyledComponent
                    className="form-button review-inset-editor__save-and-insert-button"
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c39",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c27",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c9",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c27",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isDisabled={false}
                    onClick={[Function]}
                    type="submit"
                    weight="primary"
                  >
                    <button
                      className="form-button review-inset-editor__save-and-insert-button c39"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c27",
                                "isStatic": false,
                                "lastClassName": "c28",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c9",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c27",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c27 c28"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c29",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c9",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c29"
                                >
                                  Save and insert box
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
        </div>
      </div>
    </ThemeProvider>
  </EnsureDefaultTheme>
</SimpleInsetEditor>
`;

exports[`<ReviewInsetEditor /> shouldn't display \`Save and insert\` button when canInsertBox is false  1`] = `
.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 100%;
  overflow: hidden;
  margin-bottom: 5px;
}

.c27:last-child {
  margin-right: 0;
}

.c27 .c38 {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c31 {
  margin-bottom: 15px;
  font-size: 24px;
  line-height: 28px;
  text-align: center;
}

.c31:last-child {
  margin-bottom: 0;
}

.c29 {
  position: relative;
  padding: 15px 15px 1px 15px;
  background-color: #F5F5F5;
}

.c25 {
  width: 100%;
  max-width: 470px;
  margin: 0 auto;
}

.c25 .c26 .c37:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c25 .c28 {
  padding: 15px;
}

.c25 .c28 .c30 {
  margin-bottom: 0;
}

.c25 .c28 .c32 {
  display: none;
}

.c35 .c26 .c37:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c35 .c28 {
  padding: 15px;
}

.c35 .c28 .c30 {
  margin-bottom: 0;
}

.c35 .c28 .c32 {
  display: none;
}

.c19 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c24 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c24 + svg,
.c24 + .c18 {
  margin-left: 4px;
}

.c23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c23 svg + span {
  margin-left: 4px;
}

.c23 .c18 + span {
  margin-left: 4px;
}

.c21 {
  width: auto;
  height: 34px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 34px;
  border-color: #0A7BC2;
  color: #0A7BC2;
  font-size: 14px;
  text-align: center;
  line-height: 34px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c21 .c22 > svg {
  margin-bottom: 2px;
}

.c21 .c18 {
  margin-bottom: 2px;
}

.c21:hover,
.c21:active,
.c21:focus {
  color: #053d61;
  border-color: #053d61;
  background-color: #fff;
}

.c21:hover .c22 > svg,
.c21:active .c22 > svg,
.c21:focus .c22 > svg {
  stroke: #085c91;
}

.c33 {
  width: auto;
  height: 42px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 21px;
  border-color: #0A7BC2;
  color: #0A7BC2;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c33 .c22 > svg {
  margin-bottom: 2px;
}

.c33 .c18 {
  margin-bottom: 2px;
}

.c33:hover,
.c33:active,
.c33:focus {
  color: #053d61;
  border-color: #053d61;
  background-color: #fff;
}

.c33:hover .c22 > svg,
.c33:active .c22 > svg,
.c33:focus .c22 > svg {
  stroke: #085c91;
}

.c34 {
  width: auto;
  height: 42px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 21px;
  border-color: transparent;
  color: #FFF;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #0A7BC2;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c34 .c22 > svg {
  margin-bottom: 2px;
}

.c34 .c18 {
  margin-bottom: 2px;
}

.c34:hover,
.c34:active,
.c34:focus {
  color: #fff;
  border-color: transparent;
  background-color: #085c91;
}

.c34:hover .c22 > svg,
.c34:active .c22 > svg,
.c34:focus .c22 > svg {
  stroke: #fff;
}

.c36 .c22 > svg {
  margin-bottom: 2px;
  stroke: #FFF;
}

.c36 .c18 {
  margin-bottom: 2px;
}

.c36:hover .c22 > svg,
.c36:active .c22 > svg,
.c36:focus .c22 > svg {
  stroke: #fff;
}

.c11 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c3.c3 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c1 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c1:hover .c2 {
  color: #222;
}

.c1:focus-within .c2 {
  color: #0A7BC2;
}

.c1 .c39 {
  margin-top: 8px;
}

.c6.c6 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c6.c6.c6:hover,
.c6.c6.c6:active,
.c6.c6.c6:focus {
  color: #222;
}

.c6:hover {
  border-bottom-color: #666;
}

.c6.c6.c6:focus,
.c6.c6.c6:active {
  border-bottom-color: #0A7BC2;
}

.c6:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c5 {
  position: relative;
}

.c5:hover {
  border-bottom-color: #666;
}

.c5:hover .c4:focus,
.c5:hover .c5:active {
  border-bottom-color: #0A7BC2;
}

.c5:hover .c4:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c5 .c41 {
  padding: 0;
}

.c5 .c40 {
  top: 9px;
}

.c12 {
  width: 100%;
}

.c16 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c15 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c15 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c15 button:hover,
.c15 button:active,
.c15 button:focus {
  background: transparent;
}

.c14 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c17 {
  width: 12px;
}

.c17 svg {
  color: #000;
}

.c7 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c10 {
  white-space: nowrap;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 .c9 {
  padding: 0 10px;
}

.c8 .c9 label {
  padding: 0 10px;
  width: 100%;
}

.c0 {
  padding-bottom: 30px;
}

.c20 {
  margin-top: 2rem;
  color: #222;
  font-size: 18px;
  line-height: 27px;
  text-align: left;
}

<SimpleInsetEditor
  canInsertBox={false}
  imageUploader={[Function]}
  language="en-US"
  onCancel={[Function]}
  onSubmit={[Function]}
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <div
        className="review-inset-editor"
      >
        <h2
          className="modal-title"
        >
          Edit review
        </h2>
        <inset-editor__MainSection
          className="flex-row"
        >
          <StyledComponent
            className="flex-row"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "inset-editor__MainSection-sc-17lptu9-0",
                  "isStatic": true,
                  "lastClassName": "c0",
                  "rules": Array [
                    "padding-bottom:30px;",
                  ],
                },
                "displayName": "inset-editor__MainSection",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "inset-editor__MainSection-sc-17lptu9-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="flex-row c0"
            >
              <div
                className="flex-row__column small-12 large-auto"
              >
                <div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Title
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <Textfield18
                        blogTheme="default"
                        error=""
                        name="title"
                        onChange={[Function]}
                        value=""
                      >
                        <Theme
                          blog="default"
                          theme={
                            Object {
                              "breakpointBanner": "969px",
                              "breakpointMedium": "53.125em",
                              "color": Object {
                                "alert": "#EEB544",
                                "amazon": "#F5C056",
                                "backgroundLayer": "rgba(0,0,0,0.45)",
                                "backgroundLight": "#E6F2F8",
                                "black": "#000",
                                "blackOverlay": "rgba(0,0,0,0.7)",
                                "bodytext": "#222",
                                "commerce": "#72AD75",
                                "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                "darkgray": "#666",
                                "darksmoke": "#222",
                                "error": "#D24A1D",
                                "facebook": "#1877F2",
                                "foregroundLayer": "rgba(0,0,0,0.4)",
                                "google": "#DB4437",
                                "gray": "#7D7D7D",
                                "instagram": "#C32AA3",
                                "lightgray": "#E5E5E5",
                                "linkedin": "#0077B5",
                                "logo": "#000",
                                "midgray": "#CCC",
                                "primary": "#0A7BC2",
                                "primaryLight": "#0C91E4",
                                "rss": "#7D7D7D",
                                "secondarytext": "#7D7D7D",
                                "success": "#23891F",
                                "twitter": "#1DA1F2",
                                "white": "#FFF",
                                "whiteOverlay": "rgba(255,255,255,0.7)",
                                "whitesmoke": "#F5F5F5",
                                "youtube": "#FF0000",
                              },
                              "columnGutter": "2.25rem",
                              "columnGutter19": Object {
                                "largeUp": "1.5rem",
                                "small19": "1rem",
                                "xlargeUp": "2rem",
                              },
                              "columnPadding": "1.125rem",
                              "columnPadding19": Object {
                                "largeUp": "0.75rem",
                                "small19": "0.5rem",
                                "xlargeUp": "1rem",
                              },
                              "featuredContentWidth": "1024px",
                              "globalNavHeight": "80px",
                              "linkTransition": "0.1s ease-out",
                              "mainContainerWidth": "66.5%",
                              "mainContentMaxWidth": "800px",
                              "pageWidth": "1336px",
                              "postContentMaxWidth": "636px",
                              "scrollbackNavHeight": "60px",
                              "sidebarContainerWidth": "33.5%",
                              "sidebarContentMaxWidth": "360px",
                              "sidebarContentMinWidth": "300px",
                              "slideshowTransitionDuration": "0.2s",
                              "typography": Object {
                                "body": Object {
                                  "fontFamily": "ElizabethSerif, Georgia, serif",
                                  "fontSizes": Object {
                                    "large": "27px",
                                    "medium": "19px",
                                    "small": "15px",
                                    "xlarge": "30px",
                                    "xsmall": "14px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "embiggenedHeadlineSize": "34px",
                                "headline": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "headlineLineHeight": "1.3",
                                "headlineSize": "24px",
                                "permalinkHeadlineLineHeight": "1.2",
                                "permalinkHeadlineSize": Object {
                                  "mediumUp": "2.5rem",
                                  "small": "2rem",
                                  "xxxlargeUp": "3rem",
                                },
                                "primary": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "serif": Object {
                                  "fontFamily": "ElizabethSerif, Georgia, serif",
                                  "fontSizes": Object {
                                    "large": "27px",
                                    "medium": "19px",
                                    "small": "15px",
                                    "xlarge": "30px",
                                    "xsmall": "14px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "tertiary": Object {
                                  "fontFamily": "FiraSans, sans-serif",
                                  "fontSizes": Object {
                                    "large": "29px",
                                    "medium": "21px",
                                    "small": "17px",
                                    "xlarge": "35px",
                                    "xsmall": "15px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                                "utility": Object {
                                  "fontFamily": "ProximaNovaCond, sans-serif",
                                  "fontSizes": Object {
                                    "large": "32px",
                                    "medium": "24px",
                                    "small": "19px",
                                    "xlarge": "37px",
                                    "xsmall": "16px",
                                  },
                                  "lineHeights": Object {
                                    "large": "40px",
                                    "medium": "32px",
                                    "small": "24px",
                                    "xlarge": "44px",
                                    "xsmall": "24px",
                                  },
                                },
                              },
                            }
                          }
                        >
                          <ThemeProvider
                            theme={
                              Object {
                                "blog": "default",
                                "breakpointBanner": "969px",
                                "breakpointMedium": "53.125em",
                                "color": Object {
                                  "alert": "#EEB544",
                                  "amazon": "#F5C056",
                                  "backgroundLayer": "rgba(0,0,0,0.45)",
                                  "backgroundLight": "#E6F2F8",
                                  "black": "#000",
                                  "blackOverlay": "rgba(0,0,0,0.7)",
                                  "bodytext": "#222",
                                  "commerce": "#72AD75",
                                  "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                  "darkgray": "#666",
                                  "darksmoke": "#222",
                                  "error": "#D24A1D",
                                  "facebook": "#1877F2",
                                  "foregroundLayer": "rgba(0,0,0,0.4)",
                                  "google": "#DB4437",
                                  "gray": "#7D7D7D",
                                  "instagram": "#C32AA3",
                                  "lightgray": "#E5E5E5",
                                  "linkedin": "#0077B5",
                                  "logo": "#000",
                                  "midgray": "#CCC",
                                  "primary": "#0A7BC2",
                                  "primaryLight": "#0C91E4",
                                  "rss": "#7D7D7D",
                                  "secondarytext": "#7D7D7D",
                                  "success": "#23891F",
                                  "twitter": "#1DA1F2",
                                  "white": "#FFF",
                                  "whiteOverlay": "rgba(255,255,255,0.7)",
                                  "whitesmoke": "#F5F5F5",
                                  "youtube": "#FF0000",
                                },
                                "columnGutter": "2.25rem",
                                "columnGutter19": Object {
                                  "largeUp": "1.5rem",
                                  "small19": "1rem",
                                  "xlargeUp": "2rem",
                                },
                                "columnPadding": "1.125rem",
                                "columnPadding19": Object {
                                  "largeUp": "0.75rem",
                                  "small19": "0.5rem",
                                  "xlargeUp": "1rem",
                                },
                                "featuredContentWidth": "1024px",
                                "globalNavHeight": "80px",
                                "linkTransition": "0.1s ease-out",
                                "mainContainerWidth": "66.5%",
                                "mainContentMaxWidth": "800px",
                                "pageWidth": "1336px",
                                "postContentMaxWidth": "636px",
                                "scrollbackNavHeight": "60px",
                                "sidebarContainerWidth": "33.5%",
                                "sidebarContentMaxWidth": "360px",
                                "sidebarContentMinWidth": "300px",
                                "slideshowTransitionDuration": "0.2s",
                                "typography": Object {
                                  "body": Object {
                                    "fontFamily": "ElizabethSerif, Georgia, serif",
                                    "fontSizes": Object {
                                      "large": "27px",
                                      "medium": "19px",
                                      "small": "15px",
                                      "xlarge": "30px",
                                      "xsmall": "14px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "embiggenedHeadlineSize": "34px",
                                  "headline": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "headlineLineHeight": "1.3",
                                  "headlineSize": "24px",
                                  "permalinkHeadlineLineHeight": "1.2",
                                  "permalinkHeadlineSize": Object {
                                    "mediumUp": "2.5rem",
                                    "small": "2rem",
                                    "xxxlargeUp": "3rem",
                                  },
                                  "primary": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "serif": Object {
                                    "fontFamily": "ElizabethSerif, Georgia, serif",
                                    "fontSizes": Object {
                                      "large": "27px",
                                      "medium": "19px",
                                      "small": "15px",
                                      "xlarge": "30px",
                                      "xsmall": "14px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "tertiary": Object {
                                    "fontFamily": "FiraSans, sans-serif",
                                    "fontSizes": Object {
                                      "large": "29px",
                                      "medium": "21px",
                                      "small": "17px",
                                      "xlarge": "35px",
                                      "xsmall": "15px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                  "utility": Object {
                                    "fontFamily": "ProximaNovaCond, sans-serif",
                                    "fontSizes": Object {
                                      "large": "32px",
                                      "medium": "24px",
                                      "small": "19px",
                                      "xlarge": "37px",
                                      "xsmall": "16px",
                                    },
                                    "lineHeights": Object {
                                      "large": "40px",
                                      "medium": "32px",
                                      "small": "24px",
                                      "xlarge": "44px",
                                      "xsmall": "24px",
                                    },
                                  },
                                },
                              }
                            }
                          >
                            <textfield__KinjaFormFieldWrapper>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                      "isStatic": false,
                                      "lastClassName": "c1",
                                      "rules": Array [
                                        "margin-bottom:32px;flex-basis:100%;&:hover{",
                                        ".c2",
                                        "{color:",
                                        [Function],
                                        ";}}&:focus-within{",
                                        ".c2",
                                        "{color:",
                                        [Function],
                                        ";}}",
                                        [Function],
                                        " ",
                                        ".c39",
                                        "{margin-top:8px;}",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaFormFieldWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c1"
                                >
                                  <textfield__KinjaLabel
                                    error=""
                                    htmlFor="title"
                                  >
                                    <StyledComponent
                                      error=""
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c2",
                                            "isStatic": false,
                                            "lastClassName": "c3",
                                            "rules": Array [
                                              "&&{color:",
                                              [Function],
                                              ";font-size:16px;line-height:21px;}",
                                            ],
                                          },
                                          "displayName": "textfield__KinjaLabel",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c2",
                                          "target": "label",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      htmlFor="title"
                                    >
                                      <label
                                        className="c2 c3"
                                        htmlFor="title"
                                      />
                                    </StyledComponent>
                                  </textfield__KinjaLabel>
                                  <textfield__KinjaTextFieldWrapper
                                    hasCustomIcon={false}
                                    status="default"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c4",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "position:relative;&:hover{border-bottom-color:",
                                              [Function],
                                              ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                              [Function],
                                              ";}&:hover &:disabled{border-bottom-color:",
                                              [Function],
                                              ";cursor:not-allowed;}",
                                              ".c41",
                                              "{padding:0;",
                                              [Function],
                                              "}",
                                              ".textfield__KinjaTextField-sc-1a9gghc-2",
                                              ",",
                                              ".c41",
                                              "{",
                                              [Function],
                                              " ",
                                              [Function],
                                              "}",
                                              ".c40",
                                              "{top:9px;}",
                                            ],
                                          },
                                          "displayName": "textfield__KinjaTextFieldWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c4",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      hasCustomIcon={false}
                                      status="default"
                                    >
                                      <div
                                        className="c4 c5"
                                      >
                                        <textfield__KinjaTextField
                                          error=""
                                          id="title"
                                          name="title"
                                          onChange={[Function]}
                                          status="default"
                                          type="text"
                                          value=""
                                        >
                                          <StyledComponent
                                            error=""
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                  "isStatic": false,
                                                  "lastClassName": "c6",
                                                  "rules": Array [
                                                    "&&{border-bottom:1px solid ",
                                                    [Function],
                                                    ";color:",
                                                    [Function],
                                                    " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                                    [Function],
                                                    ";}&:hover{border-bottom-color:",
                                                    [Function],
                                                    ";}&&&:focus,&&&:active{border-bottom-color:",
                                                    [Function],
                                                    ";}&:disabled{border-bottom-color:",
                                                    [Function],
                                                    ";cursor:not-allowed;}",
                                                    ";",
                                                  ],
                                                },
                                                "displayName": "textfield__KinjaTextField",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                "target": "input",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            id="title"
                                            name="title"
                                            onChange={[Function]}
                                            status="default"
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="c6"
                                              id="title"
                                              name="title"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </StyledComponent>
                                        </textfield__KinjaTextField>
                                      </div>
                                    </StyledComponent>
                                  </textfield__KinjaTextFieldWrapper>
                                </div>
                              </StyledComponent>
                            </textfield__KinjaFormFieldWrapper>
                          </ThemeProvider>
                        </Theme>
                      </Textfield18>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Image
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <ImageUpload
                        description=""
                        imageUploader={[Function]}
                        language="en-US"
                        name="image"
                        onChange={[Function]}
                        onError={[Function]}
                        onUploadStarted={[Function]}
                      >
                        <div>
                          <image-upload__ImageUploadTitle>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
                                    "isStatic": true,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "text-align:center;font-weight:400;font-size:1.312rem;",
                                    ],
                                  },
                                  "displayName": "image-upload__ImageUploadTitle",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
                                  "target": "p",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <p
                                className="c7"
                              >
                                <span>
                                  Insert an image from the web
                                </span>
                              </p>
                            </StyledComponent>
                          </image-upload__ImageUploadTitle>
                          <image-upload__ImageInputContainer>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
                                    "isStatic": true,
                                    "lastClassName": "c8",
                                    "rules": Array [
                                      "display:flex;",
                                      ".c9",
                                      "{padding:0 10px;label{padding:0 10px;width:100%;}}",
                                    ],
                                  },
                                  "displayName": "image-upload__ImageInputContainer",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c8"
                              >
                                <Textfield18
                                  blogTheme="default"
                                  error=""
                                  label="Paste the URL of the image"
                                  name="imageURL"
                                  onChange={[Function]}
                                  value=""
                                >
                                  <Theme
                                    blog="default"
                                    theme={
                                      Object {
                                        "breakpointBanner": "969px",
                                        "breakpointMedium": "53.125em",
                                        "color": Object {
                                          "alert": "#EEB544",
                                          "amazon": "#F5C056",
                                          "backgroundLayer": "rgba(0,0,0,0.45)",
                                          "backgroundLight": "#E6F2F8",
                                          "black": "#000",
                                          "blackOverlay": "rgba(0,0,0,0.7)",
                                          "bodytext": "#222",
                                          "commerce": "#72AD75",
                                          "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                          "darkgray": "#666",
                                          "darksmoke": "#222",
                                          "error": "#D24A1D",
                                          "facebook": "#1877F2",
                                          "foregroundLayer": "rgba(0,0,0,0.4)",
                                          "google": "#DB4437",
                                          "gray": "#7D7D7D",
                                          "instagram": "#C32AA3",
                                          "lightgray": "#E5E5E5",
                                          "linkedin": "#0077B5",
                                          "logo": "#000",
                                          "midgray": "#CCC",
                                          "primary": "#0A7BC2",
                                          "primaryLight": "#0C91E4",
                                          "rss": "#7D7D7D",
                                          "secondarytext": "#7D7D7D",
                                          "success": "#23891F",
                                          "twitter": "#1DA1F2",
                                          "white": "#FFF",
                                          "whiteOverlay": "rgba(255,255,255,0.7)",
                                          "whitesmoke": "#F5F5F5",
                                          "youtube": "#FF0000",
                                        },
                                        "columnGutter": "2.25rem",
                                        "columnGutter19": Object {
                                          "largeUp": "1.5rem",
                                          "small19": "1rem",
                                          "xlargeUp": "2rem",
                                        },
                                        "columnPadding": "1.125rem",
                                        "columnPadding19": Object {
                                          "largeUp": "0.75rem",
                                          "small19": "0.5rem",
                                          "xlargeUp": "1rem",
                                        },
                                        "featuredContentWidth": "1024px",
                                        "globalNavHeight": "80px",
                                        "linkTransition": "0.1s ease-out",
                                        "mainContainerWidth": "66.5%",
                                        "mainContentMaxWidth": "800px",
                                        "pageWidth": "1336px",
                                        "postContentMaxWidth": "636px",
                                        "scrollbackNavHeight": "60px",
                                        "sidebarContainerWidth": "33.5%",
                                        "sidebarContentMaxWidth": "360px",
                                        "sidebarContentMinWidth": "300px",
                                        "slideshowTransitionDuration": "0.2s",
                                        "typography": Object {
                                          "body": Object {
                                            "fontFamily": "ElizabethSerif, Georgia, serif",
                                            "fontSizes": Object {
                                              "large": "27px",
                                              "medium": "19px",
                                              "small": "15px",
                                              "xlarge": "30px",
                                              "xsmall": "14px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "embiggenedHeadlineSize": "34px",
                                          "headline": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "headlineLineHeight": "1.3",
                                          "headlineSize": "24px",
                                          "permalinkHeadlineLineHeight": "1.2",
                                          "permalinkHeadlineSize": Object {
                                            "mediumUp": "2.5rem",
                                            "small": "2rem",
                                            "xxxlargeUp": "3rem",
                                          },
                                          "primary": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "serif": Object {
                                            "fontFamily": "ElizabethSerif, Georgia, serif",
                                            "fontSizes": Object {
                                              "large": "27px",
                                              "medium": "19px",
                                              "small": "15px",
                                              "xlarge": "30px",
                                              "xsmall": "14px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "tertiary": Object {
                                            "fontFamily": "FiraSans, sans-serif",
                                            "fontSizes": Object {
                                              "large": "29px",
                                              "medium": "21px",
                                              "small": "17px",
                                              "xlarge": "35px",
                                              "xsmall": "15px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                          "utility": Object {
                                            "fontFamily": "ProximaNovaCond, sans-serif",
                                            "fontSizes": Object {
                                              "large": "32px",
                                              "medium": "24px",
                                              "small": "19px",
                                              "xlarge": "37px",
                                              "xsmall": "16px",
                                            },
                                            "lineHeights": Object {
                                              "large": "40px",
                                              "medium": "32px",
                                              "small": "24px",
                                              "xlarge": "44px",
                                              "xsmall": "24px",
                                            },
                                          },
                                        },
                                      }
                                    }
                                  >
                                    <ThemeProvider
                                      theme={
                                        Object {
                                          "blog": "default",
                                          "breakpointBanner": "969px",
                                          "breakpointMedium": "53.125em",
                                          "color": Object {
                                            "alert": "#EEB544",
                                            "amazon": "#F5C056",
                                            "backgroundLayer": "rgba(0,0,0,0.45)",
                                            "backgroundLight": "#E6F2F8",
                                            "black": "#000",
                                            "blackOverlay": "rgba(0,0,0,0.7)",
                                            "bodytext": "#222",
                                            "commerce": "#72AD75",
                                            "darkBlackOverlay": "rgba(0,0,0,0.9)",
                                            "darkgray": "#666",
                                            "darksmoke": "#222",
                                            "error": "#D24A1D",
                                            "facebook": "#1877F2",
                                            "foregroundLayer": "rgba(0,0,0,0.4)",
                                            "google": "#DB4437",
                                            "gray": "#7D7D7D",
                                            "instagram": "#C32AA3",
                                            "lightgray": "#E5E5E5",
                                            "linkedin": "#0077B5",
                                            "logo": "#000",
                                            "midgray": "#CCC",
                                            "primary": "#0A7BC2",
                                            "primaryLight": "#0C91E4",
                                            "rss": "#7D7D7D",
                                            "secondarytext": "#7D7D7D",
                                            "success": "#23891F",
                                            "twitter": "#1DA1F2",
                                            "white": "#FFF",
                                            "whiteOverlay": "rgba(255,255,255,0.7)",
                                            "whitesmoke": "#F5F5F5",
                                            "youtube": "#FF0000",
                                          },
                                          "columnGutter": "2.25rem",
                                          "columnGutter19": Object {
                                            "largeUp": "1.5rem",
                                            "small19": "1rem",
                                            "xlargeUp": "2rem",
                                          },
                                          "columnPadding": "1.125rem",
                                          "columnPadding19": Object {
                                            "largeUp": "0.75rem",
                                            "small19": "0.5rem",
                                            "xlargeUp": "1rem",
                                          },
                                          "featuredContentWidth": "1024px",
                                          "globalNavHeight": "80px",
                                          "linkTransition": "0.1s ease-out",
                                          "mainContainerWidth": "66.5%",
                                          "mainContentMaxWidth": "800px",
                                          "pageWidth": "1336px",
                                          "postContentMaxWidth": "636px",
                                          "scrollbackNavHeight": "60px",
                                          "sidebarContainerWidth": "33.5%",
                                          "sidebarContentMaxWidth": "360px",
                                          "sidebarContentMinWidth": "300px",
                                          "slideshowTransitionDuration": "0.2s",
                                          "typography": Object {
                                            "body": Object {
                                              "fontFamily": "ElizabethSerif, Georgia, serif",
                                              "fontSizes": Object {
                                                "large": "27px",
                                                "medium": "19px",
                                                "small": "15px",
                                                "xlarge": "30px",
                                                "xsmall": "14px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "embiggenedHeadlineSize": "34px",
                                            "headline": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "headlineLineHeight": "1.3",
                                            "headlineSize": "24px",
                                            "permalinkHeadlineLineHeight": "1.2",
                                            "permalinkHeadlineSize": Object {
                                              "mediumUp": "2.5rem",
                                              "small": "2rem",
                                              "xxxlargeUp": "3rem",
                                            },
                                            "primary": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "serif": Object {
                                              "fontFamily": "ElizabethSerif, Georgia, serif",
                                              "fontSizes": Object {
                                                "large": "27px",
                                                "medium": "19px",
                                                "small": "15px",
                                                "xlarge": "30px",
                                                "xsmall": "14px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "tertiary": Object {
                                              "fontFamily": "FiraSans, sans-serif",
                                              "fontSizes": Object {
                                                "large": "29px",
                                                "medium": "21px",
                                                "small": "17px",
                                                "xlarge": "35px",
                                                "xsmall": "15px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                            "utility": Object {
                                              "fontFamily": "ProximaNovaCond, sans-serif",
                                              "fontSizes": Object {
                                                "large": "32px",
                                                "medium": "24px",
                                                "small": "19px",
                                                "xlarge": "37px",
                                                "xsmall": "16px",
                                              },
                                              "lineHeights": Object {
                                                "large": "40px",
                                                "medium": "32px",
                                                "small": "24px",
                                                "xlarge": "44px",
                                                "xsmall": "24px",
                                              },
                                            },
                                          },
                                        }
                                      }
                                    >
                                      <textfield__KinjaFormFieldWrapper>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                                "isStatic": false,
                                                "lastClassName": "c1",
                                                "rules": Array [
                                                  "margin-bottom:32px;flex-basis:100%;&:hover{",
                                                  ".c2",
                                                  "{color:",
                                                  [Function],
                                                  ";}}&:focus-within{",
                                                  ".c2",
                                                  "{color:",
                                                  [Function],
                                                  ";}}",
                                                  [Function],
                                                  " ",
                                                  ".c39",
                                                  "{margin-top:8px;}",
                                                ],
                                              },
                                              "displayName": "textfield__KinjaFormFieldWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c1"
                                          >
                                            <textfield__KinjaLabel
                                              error=""
                                              htmlFor="imageURL"
                                            >
                                              <StyledComponent
                                                error=""
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c2",
                                                      "isStatic": false,
                                                      "lastClassName": "c3",
                                                      "rules": Array [
                                                        "&&{color:",
                                                        [Function],
                                                        ";font-size:16px;line-height:21px;}",
                                                      ],
                                                    },
                                                    "displayName": "textfield__KinjaLabel",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c2",
                                                    "target": "label",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                htmlFor="imageURL"
                                              >
                                                <label
                                                  className="c2 c3"
                                                  htmlFor="imageURL"
                                                >
                                                  Paste the URL of the image
                                                </label>
                                              </StyledComponent>
                                            </textfield__KinjaLabel>
                                            <textfield__KinjaTextFieldWrapper
                                              hasCustomIcon={false}
                                              status="default"
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c4",
                                                      "isStatic": false,
                                                      "lastClassName": "c5",
                                                      "rules": Array [
                                                        "position:relative;&:hover{border-bottom-color:",
                                                        [Function],
                                                        ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                                        [Function],
                                                        ";}&:hover &:disabled{border-bottom-color:",
                                                        [Function],
                                                        ";cursor:not-allowed;}",
                                                        ".c41",
                                                        "{padding:0;",
                                                        [Function],
                                                        "}",
                                                        ".textfield__KinjaTextField-sc-1a9gghc-2",
                                                        ",",
                                                        ".c41",
                                                        "{",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        "}",
                                                        ".c40",
                                                        "{top:9px;}",
                                                      ],
                                                    },
                                                    "displayName": "textfield__KinjaTextFieldWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                hasCustomIcon={false}
                                                status="default"
                                              >
                                                <div
                                                  className="c4 c5"
                                                >
                                                  <textfield__KinjaTextField
                                                    error=""
                                                    id="imageURL"
                                                    name="imageURL"
                                                    onChange={[Function]}
                                                    status="default"
                                                    type="text"
                                                    value=""
                                                  >
                                                    <StyledComponent
                                                      error=""
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                            "isStatic": false,
                                                            "lastClassName": "c6",
                                                            "rules": Array [
                                                              "&&{border-bottom:1px solid ",
                                                              [Function],
                                                              ";color:",
                                                              [Function],
                                                              " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                                              [Function],
                                                              ";}&:hover{border-bottom-color:",
                                                              [Function],
                                                              ";}&&&:focus,&&&:active{border-bottom-color:",
                                                              [Function],
                                                              ";}&:disabled{border-bottom-color:",
                                                              [Function],
                                                              ";cursor:not-allowed;}",
                                                              ";",
                                                            ],
                                                          },
                                                          "displayName": "textfield__KinjaTextField",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                                          "target": "input",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      id="imageURL"
                                                      name="imageURL"
                                                      onChange={[Function]}
                                                      status="default"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <input
                                                        className="c6"
                                                        id="imageURL"
                                                        name="imageURL"
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                      />
                                                    </StyledComponent>
                                                  </textfield__KinjaTextField>
                                                </div>
                                              </StyledComponent>
                                            </textfield__KinjaTextFieldWrapper>
                                          </div>
                                        </StyledComponent>
                                      </textfield__KinjaFormFieldWrapper>
                                    </ThemeProvider>
                                  </Theme>
                                </Textfield18>
                                <image-upload__ImageFileInput>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "c9",
                                          "isStatic": true,
                                          "lastClassName": "caIkJs",
                                          "rules": Array [],
                                        },
                                        "displayName": "image-upload__ImageFileInput",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "c9",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <div
                                      className="c9 "
                                    >
                                      <image-upload__FileInputText>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "image-upload__FileInputText-d8l6nt-1",
                                                "isStatic": true,
                                                "lastClassName": "c10",
                                                "rules": Array [
                                                  "white-space:nowrap;",
                                                ],
                                              },
                                              "displayName": "image-upload__FileInputText",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                                              "target": "p",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <p
                                            className="c10"
                                          >
                                            <span
                                              className="show-for-small-only"
                                            >
                                              Or upload one from your device
                                            </span>
                                            <span
                                              className="show-for-medium-up"
                                            >
                                              Or upload one from your computer
                                            </span>
                                          </p>
                                        </StyledComponent>
                                      </image-upload__FileInputText>
                                      <Filefield
                                        accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                        error={null}
                                        name="fileUpload"
                                        onChange={[Function]}
                                      >
                                        <Field
                                          error={null}
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <field__Wrapper
                                                className="field"
                                              >
                                                <StyledComponent
                                                  className="field"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "field__Wrapper-sc-1k7q01z-0",
                                                        "isStatic": false,
                                                        "lastClassName": "c11",
                                                        "rules": Array [
                                                          "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "field__Wrapper",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                                      "target": "label",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <label
                                                    className="field c11"
                                                  >
                                                    <filefield__Input
                                                      accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                      error={null}
                                                      name="fileUpload"
                                                      onChange={[Function]}
                                                    >
                                                      <StyledComponent
                                                        accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                        error={null}
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [
                                                              Object {
                                                                "type": "file",
                                                              },
                                                            ],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "filefield__Input-pd0ao4-0",
                                                              "isStatic": false,
                                                              "lastClassName": "dLFlOg",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "filefield__Input",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "filefield__Input-pd0ao4-0",
                                                            "target": "input",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        name="fileUpload"
                                                        onChange={[Function]}
                                                      >
                                                        <input
                                                          accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                                          className=""
                                                          name="fileUpload"
                                                          onChange={[Function]}
                                                          type="file"
                                                        />
                                                      </StyledComponent>
                                                    </filefield__Input>
                                                  </label>
                                                </StyledComponent>
                                              </field__Wrapper>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Field>
                                      </Filefield>
                                    </div>
                                  </StyledComponent>
                                </image-upload__ImageFileInput>
                              </div>
                            </StyledComponent>
                          </image-upload__ImageInputContainer>
                        </div>
                      </ImageUpload>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-4"
                    >
                      <h3
                        className="form-group_label"
                      >
                        Rating
                      </h3>
                    </div>
                    <div
                      className="flex-row__column small-8"
                    >
                      <Toggle(Select)
                        height={200}
                        onChange={[Function]}
                        value=""
                      >
                        <ClickOutside(Select)
                          close={[Function]}
                          handleClickOutside={[Function]}
                          height={200}
                          isOpen={false}
                          onChange={[Function]}
                          toggle={[Function]}
                          value=""
                        >
                          <Select
                            close={[Function]}
                            height={200}
                            insideReference={[Function]}
                            isOpen={false}
                            onChange={[Function]}
                            toggle={[Function]}
                            value=""
                          >
                            <EnsureDefaultTheme>
                              <ThemeProvider
                                theme={[Function]}
                              >
                                <select__SelectLabel>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "select__SelectLabel-sc-17mlv1t-0",
                                          "isStatic": false,
                                          "lastClassName": "c12",
                                          "rules": Array [
                                            "width:100%;",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "select__SelectLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                                        "target": "label",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={[Function]}
                                  >
                                    <label
                                      className="c12"
                                    >
                                      <select__SelectWrapper>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                                                "isStatic": false,
                                                "lastClassName": "c13",
                                                "rules": Array [
                                                  "display:",
                                                  [Function],
                                                  ";",
                                                ],
                                              },
                                              "displayName": "select__SelectWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c13"
                                          >
                                            <select__LabelSelect
                                              onClick={[Function]}
                                              open={false}
                                              role="button"
                                              tabIndex="0"
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                                      "isStatic": false,
                                                      "lastClassName": "c14",
                                                      "rules": Array [
                                                        "position:relative;width:100%;outline:none;cursor:pointer;",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "select__LabelSelect",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                onClick={[Function]}
                                                open={false}
                                                role="button"
                                                tabIndex="0"
                                              >
                                                <div
                                                  className="c14"
                                                  onClick={[Function]}
                                                  open={false}
                                                  role="button"
                                                  tabIndex="0"
                                                >
                                                  <select__SelectControl
                                                    isOpen={false}
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "select__SelectControl-sc-17mlv1t-3",
                                                            "isStatic": false,
                                                            "lastClassName": "c15",
                                                            "rules": Array [
                                                              "align-items:center;background-color:",
                                                              [Function],
                                                              ";border-color:#d9d9d9 ",
                                                              [Function],
                                                              " #b3b3b3;border-radius:4px;border:1px solid ",
                                                              [Function],
                                                              ";color:",
                                                              [Function],
                                                              ";display:flex;height:",
                                                              "36",
                                                              "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                                            ],
                                                          },
                                                          "displayName": "select__SelectControl",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "select__SelectControl-sc-17mlv1t-3",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      isOpen={false}
                                                    >
                                                      <div
                                                        className="c15"
                                                      >
                                                        <select__SelectValue>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "select__SelectValue-sc-17mlv1t-2",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c16",
                                                                  "rules": Array [
                                                                    "color:",
                                                                    [Function],
                                                                    ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                                                  ],
                                                                },
                                                                "displayName": "select__SelectValue",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "select__SelectValue-sc-17mlv1t-2",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <div
                                                              className="c16"
                                                            />
                                                          </StyledComponent>
                                                        </select__SelectValue>
                                                        <select__Controls
                                                          isOpen={false}
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "select__Controls-sc-17mlv1t-9",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c17",
                                                                  "rules": Array [
                                                                    "width:12px;",
                                                                    [Function],
                                                                    " ",
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "select__Controls",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            isOpen={false}
                                                          >
                                                            <div
                                                              className="c17"
                                                            >
                                                              <ChevronDownIcon>
                                                                <Icon19>
                                                                  <icon19__IconWrapper>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "c18",
                                                                            "isStatic": true,
                                                                            "lastClassName": "c19",
                                                                            "rules": Array [
                                                                              "fill:currentColor;display:flex;",
                                                                            ],
                                                                          },
                                                                          "displayName": "icon19__IconWrapper",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "c18",
                                                                          "target": "span",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <span
                                                                        className="c18 c19"
                                                                      >
                                                                        <ChevronDown
                                                                          aria-label="ChevronDown icon"
                                                                          height="18"
                                                                          viewBox="0 0 18 18"
                                                                          width="18"
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <svg
                                                                            aria-label="ChevronDown icon"
                                                                            height="18"
                                                                            viewBox="0 0 18 18"
                                                                            width="18"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                                              fillRule="evenodd"
                                                                            />
                                                                          </svg>
                                                                        </ChevronDown>
                                                                      </span>
                                                                    </StyledComponent>
                                                                  </icon19__IconWrapper>
                                                                </Icon19>
                                                              </ChevronDownIcon>
                                                            </div>
                                                          </StyledComponent>
                                                        </select__Controls>
                                                      </div>
                                                    </StyledComponent>
                                                  </select__SelectControl>
                                                </div>
                                              </StyledComponent>
                                            </select__LabelSelect>
                                          </div>
                                        </StyledComponent>
                                      </select__SelectWrapper>
                                    </label>
                                  </StyledComponent>
                                </select__SelectLabel>
                              </ThemeProvider>
                            </EnsureDefaultTheme>
                          </Select>
                        </ClickOutside(Select)>
                      </Toggle(Select)>
                    </div>
                  </div>
                  <div
                    className="form-group flex-row"
                  >
                    <div
                      className="flex-row__column small-12"
                    >
                      <inset-editor__ReviewDataTitle>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "inset-editor__ReviewDataTitle-sc-17lptu9-1",
                                "isStatic": false,
                                "lastClassName": "c20",
                                "rules": Array [
                                  "margin-top:2rem;color:",
                                  [Function],
                                  ";font-size:18px;line-height:27px;text-align:left;",
                                ],
                              },
                              "displayName": "inset-editor__ReviewDataTitle",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "inset-editor__ReviewDataTitle-sc-17lptu9-1",
                              "target": "h2",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <h2
                            className="c20"
                          >
                            Review data
                          </h2>
                        </StyledComponent>
                      </inset-editor__ReviewDataTitle>
                      <ReviewData
                        language="en-US"
                        name="text"
                        onChange={[Function]}
                        value={Array []}
                      >
                        <div>
                          <Button
                            label="Add field"
                            onClick={[Function]}
                            small={true}
                            type="button"
                            weight="secondary"
                          >
                            <EnsureDefaultTheme>
                              <ThemeProvider
                                theme={[Function]}
                              >
                                <Button__ButtonWrapper
                                  onClick={[Function]}
                                  small={true}
                                  type="button"
                                  weight="secondary"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                                          "isStatic": false,
                                          "lastClassName": "c34",
                                          "rules": Array [
                                            "width:",
                                            [Function],
                                            ";height:",
                                            [Function],
                                            ";padding:",
                                            [Function],
                                            ";border:transparent 1px solid;border-radius:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";color:",
                                            [Function],
                                            ";font-size:",
                                            [Function],
                                            ";text-align:",
                                            [Function],
                                            ";line-height:",
                                            [Function],
                                            ";background-color:",
                                            [Function],
                                            ";transition:",
                                            [Function],
                                            ";",
                                            [Function],
                                            ";",
                                            [Function],
                                            ";",
                                            ".c22",
                                            " > svg{margin-bottom:2px;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            "}",
                                            ".c18",
                                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";background-color:",
                                            [Function],
                                            ";",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            ".c22",
                                            " > svg{",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            "}}",
                                            "@media only screen and ",
                                            "(max-width: 49.94em)",
                                            "{",
                                            "
		",
                                            [Function],
                                            "
	",
                                            "}",
                                          ],
                                        },
                                        "displayName": "Button__ButtonWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                    small={true}
                                    type="button"
                                    weight="secondary"
                                  >
                                    <button
                                      className="c21"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <Button__ButtonInner>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "c22",
                                                "isStatic": false,
                                                "lastClassName": "c23",
                                                "rules": Array [
                                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                                  [Function],
                                                  " + span{margin-left:4px;}}",
                                                  ".c18",
                                                  "{+ span{margin-left:4px;}}",
                                                ],
                                              },
                                              "displayName": "Button__ButtonInner",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "c22",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c22 c23"
                                          >
                                            <Button__Label>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Button__Label-j48i5d-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c24",
                                                      "rules": Array [
                                                        "display:flex;+ svg,+ ",
                                                        ".c18",
                                                        "{margin-left:4px;}",
                                                      ],
                                                    },
                                                    "displayName": "Button__Label",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Button__Label-j48i5d-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c24"
                                                >
                                                  Add field
                                                </span>
                                              </StyledComponent>
                                            </Button__Label>
                                          </div>
                                        </StyledComponent>
                                      </Button__ButtonInner>
                                    </button>
                                  </StyledComponent>
                                </Button__ButtonWrapper>
                              </ThemeProvider>
                            </EnsureDefaultTheme>
                          </Button>
                        </div>
                      </ReviewData>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="flex-row__column flex-row__column--fixed"
              >
                <ReviewBox
                  alignment="Center"
                  hide={true}
                  image={null}
                  score={null}
                  text={Array []}
                  title=""
                >
                  <EnsureDefaultTheme>
                    <ThemeProvider
                      theme={[Function]}
                    >
                      <ReviewBox__ReviewBoxWrapper
                        alignment="Center"
                        className="reviewbox-inset"
                        hide={true}
                        image={null}
                        score={null}
                        text={Array []}
                        title=""
                      >
                        <StyledComponent
                          alignment="Center"
                          className="reviewbox-inset"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                                "isStatic": false,
                                "lastClassName": "c25",
                                "rules": Array [
                                  "width:100%;max-width:470px;margin:0 auto;",
                                  ".c26",
                                  "{",
                                  ".c37",
                                  ":hover{text-decoration:none;}}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  "@media only screen and ",
                                  "(max-width: 49.94em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "
	",
                                  "}",
                                  " ",
                                  "@media only screen and ",
                                  "(min-width: 37.37em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "

	",
                                  "}",
                                  " ",
                                  "@media only screen and ",
                                  "(min-width: 50em)",
                                  "{",
                                  "
		",
                                  [Function],
                                  "
	",
                                  "}",
                                ],
                              },
                              "displayName": "ReviewBox__ReviewBoxWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ReviewBox__ReviewBoxWrapper-aebpua-12",
                              "target": "section",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hide={true}
                          image={null}
                          score={null}
                          text={Array []}
                          title=""
                        >
                          <section
                            className="reviewbox-inset c25"
                            title=""
                          >
                            <story-type-label-wrapper__Wrapper
                              margin="small"
                              variant="top"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c26",
                                      "isStatic": false,
                                      "lastClassName": "c27",
                                      "rules": Array [
                                        "display:flex;max-width:100%;overflow:hidden;",
                                        [Function],
                                        " ",
                                        [Function],
                                        ":last-child{margin-right:0;}",
                                        ".c38",
                                        "{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}",
                                      ],
                                    },
                                    "displayName": "story-type-label-wrapper__Wrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c26",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                margin="small"
                                variant="top"
                              >
                                <div
                                  className="c26 c27"
                                />
                              </StyledComponent>
                            </story-type-label-wrapper__Wrapper>
                            <ReviewBox__Head>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ReviewBox__Head-aebpua-2",
                                      "isStatic": true,
                                      "lastClassName": "Uixpq",
                                      "rules": Array [],
                                    },
                                    "displayName": "ReviewBox__Head",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ReviewBox__Head-aebpua-2",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className=""
                                />
                              </StyledComponent>
                            </ReviewBox__Head>
                            <ReviewBox__Content>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c28",
                                      "isStatic": false,
                                      "lastClassName": "c29",
                                      "rules": Array [
                                        "position:relative;padding:15px 15px 1px 15px;background-color:",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "ReviewBox__Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c28",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c28 c29"
                                >
                                  <ReviewBox__Title>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c30",
                                            "isStatic": true,
                                            "lastClassName": "c31",
                                            "rules": Array [
                                              "margin-bottom:15px;font-size:24px;line-height:28px;text-align:center;&:last-child{margin-bottom:0;}",
                                            ],
                                          },
                                          "displayName": "ReviewBox__Title",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c30",
                                          "target": "h2",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <h2
                                        className="c30 c31"
                                      />
                                    </StyledComponent>
                                  </ReviewBox__Title>
                                  <ReviewBox__DataWrapper>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c32",
                                            "isStatic": true,
                                            "lastClassName": "jIFghh",
                                            "rules": Array [],
                                          },
                                          "displayName": "ReviewBox__DataWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c32",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c32 "
                                      />
                                    </StyledComponent>
                                  </ReviewBox__DataWrapper>
                                </div>
                              </StyledComponent>
                            </ReviewBox__Content>
                          </section>
                        </StyledComponent>
                      </ReviewBox__ReviewBoxWrapper>
                    </ThemeProvider>
                  </EnsureDefaultTheme>
                </ReviewBox>
              </div>
            </div>
          </StyledComponent>
        </inset-editor__MainSection>
        <div
          className="form-buttons"
        >
          <Button
            className="form-button"
            label="Cancel"
            onClick={[Function]}
            type="button"
            weight="secondary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button"
                  onClick={[Function]}
                  type="button"
                  weight="secondary"
                >
                  <StyledComponent
                    className="form-button"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c34",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c22",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c18",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c22",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    type="button"
                    weight="secondary"
                  >
                    <button
                      className="form-button c33"
                      onClick={[Function]}
                      type="button"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c22",
                                "isStatic": false,
                                "lastClassName": "c23",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c18",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c22",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c22 c23"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c24",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c18",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c24"
                                >
                                  Cancel
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
          <Button
            className="form-button review-inset-editor__save-button"
            disabled={false}
            label="Save review"
            onClick={[Function]}
            type="submit"
            weight="primary"
          >
            <EnsureDefaultTheme>
              <ThemeProvider
                theme={[Function]}
              >
                <Button__ButtonWrapper
                  className="form-button review-inset-editor__save-button"
                  disabled={false}
                  isDisabled={false}
                  onClick={[Function]}
                  type="submit"
                  weight="primary"
                >
                  <StyledComponent
                    className="form-button review-inset-editor__save-button"
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button__ButtonWrapper-j48i5d-2",
                          "isStatic": false,
                          "lastClassName": "c34",
                          "rules": Array [
                            "width:",
                            [Function],
                            ";height:",
                            [Function],
                            ";padding:",
                            [Function],
                            ";border:transparent 1px solid;border-radius:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";color:",
                            [Function],
                            ";font-size:",
                            [Function],
                            ";text-align:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";transition:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            ".c22",
                            " > svg{margin-bottom:2px;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}",
                            ".c18",
                            "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                            [Function],
                            ";border-color:",
                            [Function],
                            ";background-color:",
                            [Function],
                            ";",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            ".c22",
                            " > svg{",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                            "}}",
                            "@media only screen and ",
                            "(max-width: 49.94em)",
                            "{",
                            "
		",
                            [Function],
                            "
	",
                            "}",
                          ],
                        },
                        "displayName": "Button__ButtonWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isDisabled={false}
                    onClick={[Function]}
                    type="submit"
                    weight="primary"
                  >
                    <button
                      className="form-button review-inset-editor__save-button c34"
                      disabled={false}
                      onClick={[Function]}
                      type="submit"
                    >
                      <Button__ButtonInner>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c22",
                                "isStatic": false,
                                "lastClassName": "c23",
                                "rules": Array [
                                  "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                  [Function],
                                  " + span{margin-left:4px;}}",
                                  ".c18",
                                  "{+ span{margin-left:4px;}}",
                                ],
                              },
                              "displayName": "Button__ButtonInner",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c22",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c22 c23"
                          >
                            <Button__Label>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__Label-j48i5d-0",
                                      "isStatic": true,
                                      "lastClassName": "c24",
                                      "rules": Array [
                                        "display:flex;+ svg,+ ",
                                        ".c18",
                                        "{margin-left:4px;}",
                                      ],
                                    },
                                    "displayName": "Button__Label",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__Label-j48i5d-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c24"
                                >
                                  Save review
                                </span>
                              </StyledComponent>
                            </Button__Label>
                          </div>
                        </StyledComponent>
                      </Button__ButtonInner>
                    </button>
                  </StyledComponent>
                </Button__ButtonWrapper>
              </ThemeProvider>
            </EnsureDefaultTheme>
          </Button>
        </div>
      </div>
    </ThemeProvider>
  </EnsureDefaultTheme>
</SimpleInsetEditor>
`;
