// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ItemGroup /> should call \`onChange\` with the value 1`] = `
.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 + svg,
.c3 + .c4 {
  margin-left: 4px;
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c2 svg + span {
  margin-left: 4px;
}

.c2 .c4 + span {
  margin-left: 4px;
}

.c0 {
  width: auto;
  height: 34px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 34px;
  border-color: transparent;
  color: #FFF;
  font-size: 14px;
  text-align: center;
  line-height: 34px;
  background-color: #0A7BC2;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c0 .c1 > svg {
  margin-bottom: 2px;
}

.c0 .c4 {
  margin-bottom: 2px;
}

.c0:hover,
.c0:active,
.c0:focus {
  color: #fff;
  border-color: transparent;
  background-color: #085c91;
}

.c0:hover .c1 > svg,
.c0:active .c1 > svg,
.c0:focus .c1 > svg {
  stroke: #fff;
}

<ItemGroup
  childrenProps={
    Object {
      "small": true,
    }
  }
  onChange={[MockFunction]}
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <item-group__ItemGroupWrapper
        childrenProps={
          Object {
            "small": true,
          }
        }
        onChange={[MockFunction]}
      >
        <StyledComponent
          childrenProps={
            Object {
              "small": true,
            }
          }
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "item-group__ItemGroupWrapper-j27ql3-0-div",
                "isStatic": true,
                "lastClassName": "jpgIZN",
                "rules": Array [],
              },
              "displayName": "item-group__ItemGroupWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "item-group__ItemGroupWrapper-j27ql3-0-div",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          onChange={[MockFunction]}
        >
          <div
            className="-div "
            onChange={[MockFunction]}
          >
            <Button
              key=".$key-0"
              label="Dolores"
              onClick={[Function]}
              selected={true}
              small={true}
              value="dolores"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={true}
                    small={true}
                    value="dolores"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={true}
                      small={true}
                      value="dolores"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={true}
                        value="dolores"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Dolores
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
            <Button
              key=".$key-1"
              label="Ford"
              onClick={[Function]}
              selected={false}
              small={true}
              value="ford"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={false}
                    small={true}
                    value="ford"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={false}
                      small={true}
                      value="ford"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={false}
                        value="ford"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Ford
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
            <Button
              key=".$key-2"
              label="Bernard"
              onClick={[Function]}
              selected={false}
              small={true}
              value="bernard"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={false}
                    small={true}
                    value="bernard"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={false}
                      small={true}
                      value="bernard"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={false}
                        value="bernard"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Bernard
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
          </div>
        </StyledComponent>
      </item-group__ItemGroupWrapper>
    </ThemeProvider>
  </EnsureDefaultTheme>
</ItemGroup>
`;

exports[`<ItemGroup /> should not call \`onChange\` 1`] = `
.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 + svg,
.c3 + .c4 {
  margin-left: 4px;
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c2 svg + span {
  margin-left: 4px;
}

.c2 .c4 + span {
  margin-left: 4px;
}

.c0 {
  width: auto;
  height: 34px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 34px;
  border-color: transparent;
  color: #FFF;
  font-size: 14px;
  text-align: center;
  line-height: 34px;
  background-color: #0A7BC2;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c0 .c1 > svg {
  margin-bottom: 2px;
}

.c0 .c4 {
  margin-bottom: 2px;
}

.c0:hover,
.c0:active,
.c0:focus {
  color: #fff;
  border-color: transparent;
  background-color: #085c91;
}

.c0:hover .c1 > svg,
.c0:active .c1 > svg,
.c0:focus .c1 > svg {
  stroke: #fff;
}

<ItemGroup
  childrenProps={
    Object {
      "small": true,
    }
  }
  onChange={[MockFunction]}
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <item-group__ItemGroupWrapper
        childrenProps={
          Object {
            "small": true,
          }
        }
        onChange={[MockFunction]}
      >
        <StyledComponent
          childrenProps={
            Object {
              "small": true,
            }
          }
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "item-group__ItemGroupWrapper-j27ql3-0-div",
                "isStatic": true,
                "lastClassName": "jpgIZN",
                "rules": Array [],
              },
              "displayName": "item-group__ItemGroupWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "item-group__ItemGroupWrapper-j27ql3-0-div",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          onChange={[MockFunction]}
        >
          <div
            className="-div "
            onChange={[MockFunction]}
          >
            <Button
              key=".$key-0"
              label="Dolores"
              onClick={[Function]}
              selected={true}
              small={true}
              value="dolores"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={true}
                    small={true}
                    value="dolores"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={true}
                      small={true}
                      value="dolores"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={true}
                        value="dolores"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Dolores
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
            <Button
              key=".$key-1"
              label="Ford"
              onClick={[Function]}
              selected={false}
              small={true}
              value="ford"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={false}
                    small={true}
                    value="ford"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={false}
                      small={true}
                      value="ford"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={false}
                        value="ford"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Ford
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
            <Button
              key=".$key-2"
              label="Bernard"
              onClick={[Function]}
              selected={false}
              small={true}
              value="bernard"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={false}
                    small={true}
                    value="bernard"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={false}
                      small={true}
                      value="bernard"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={false}
                        value="bernard"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Bernard
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
          </div>
        </StyledComponent>
      </item-group__ItemGroupWrapper>
    </ThemeProvider>
  </EnsureDefaultTheme>
</ItemGroup>
`;

exports[`<ItemGroup /> should pass \`childrenProps\` to the children 1`] = `
.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 + svg,
.c3 + .c4 {
  margin-left: 4px;
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c2 svg + span {
  margin-left: 4px;
}

.c2 .c4 + span {
  margin-left: 4px;
}

.c0 {
  width: auto;
  height: 34px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 34px;
  border-color: transparent;
  color: #FFF;
  font-size: 14px;
  text-align: center;
  line-height: 34px;
  background-color: #0A7BC2;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c0 .c1 > svg {
  margin-bottom: 2px;
}

.c0 .c4 {
  margin-bottom: 2px;
}

.c0:hover,
.c0:active,
.c0:focus {
  color: #fff;
  border-color: transparent;
  background-color: #085c91;
}

.c0:hover .c1 > svg,
.c0:active .c1 > svg,
.c0:focus .c1 > svg {
  stroke: #fff;
}

<ItemGroup
  childrenProps={
    Object {
      "small": true,
    }
  }
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <item-group__ItemGroupWrapper
        childrenProps={
          Object {
            "small": true,
          }
        }
      >
        <StyledComponent
          childrenProps={
            Object {
              "small": true,
            }
          }
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "item-group__ItemGroupWrapper-j27ql3-0-div",
                "isStatic": true,
                "lastClassName": "jpgIZN",
                "rules": Array [],
              },
              "displayName": "item-group__ItemGroupWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "item-group__ItemGroupWrapper-j27ql3-0-div",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="-div "
          >
            <Button
              key=".$key-0"
              label="Dolores"
              onClick={[Function]}
              selected={true}
              small={true}
              value="dolores"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={true}
                    small={true}
                    value="dolores"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={true}
                      small={true}
                      value="dolores"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={true}
                        value="dolores"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Dolores
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
            <Button
              key=".$key-1"
              label="Ford"
              onClick={[Function]}
              selected={false}
              small={true}
              value="ford"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={false}
                    small={true}
                    value="ford"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={false}
                      small={true}
                      value="ford"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={false}
                        value="ford"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Ford
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
            <Button
              key=".$key-2"
              label="Bernard"
              onClick={[Function]}
              selected={false}
              small={true}
              value="bernard"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={false}
                    small={true}
                    value="bernard"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={false}
                      small={true}
                      value="bernard"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={false}
                        value="bernard"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Bernard
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
          </div>
        </StyledComponent>
      </item-group__ItemGroupWrapper>
    </ThemeProvider>
  </EnsureDefaultTheme>
</ItemGroup>
`;

exports[`<ItemGroup /> should render Button component 1`] = `
<EnsureDefaultTheme>
  <Button__ButtonWrapper
    weight="primary"
  >
    <Button__ButtonInner>
      <Button__Label>
        Dolores
      </Button__Label>
    </Button__ButtonInner>
  </Button__ButtonWrapper>
</EnsureDefaultTheme>
`;

exports[`<ItemGroup /> should update the state when one of the children is clicked 1`] = `
.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 + svg,
.c3 + .c4 {
  margin-left: 4px;
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c2 svg + span {
  margin-left: 4px;
}

.c2 .c4 + span {
  margin-left: 4px;
}

.c0 {
  width: auto;
  height: 34px;
  padding: 0 2rem;
  border: transparent 1px solid;
  border-radius: 34px;
  border-color: transparent;
  color: #FFF;
  font-size: 14px;
  text-align: center;
  line-height: 34px;
  background-color: #0A7BC2;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c0 .c1 > svg {
  margin-bottom: 2px;
}

.c0 .c4 {
  margin-bottom: 2px;
}

.c0:hover,
.c0:active,
.c0:focus {
  color: #fff;
  border-color: transparent;
  background-color: #085c91;
}

.c0:hover .c1 > svg,
.c0:active .c1 > svg,
.c0:focus .c1 > svg {
  stroke: #fff;
}

<ItemGroup
  childrenProps={
    Object {
      "small": true,
    }
  }
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <item-group__ItemGroupWrapper
        childrenProps={
          Object {
            "small": true,
          }
        }
      >
        <StyledComponent
          childrenProps={
            Object {
              "small": true,
            }
          }
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "item-group__ItemGroupWrapper-j27ql3-0-div",
                "isStatic": true,
                "lastClassName": "jpgIZN",
                "rules": Array [],
              },
              "displayName": "item-group__ItemGroupWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "item-group__ItemGroupWrapper-j27ql3-0-div",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="-div "
          >
            <Button
              key=".$key-0"
              label="Dolores"
              onClick={[Function]}
              selected={true}
              small={true}
              value="dolores"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={true}
                    small={true}
                    value="dolores"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={true}
                      small={true}
                      value="dolores"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={true}
                        value="dolores"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Dolores
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
            <Button
              key=".$key-1"
              label="Ford"
              onClick={[Function]}
              selected={false}
              small={true}
              value="ford"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={false}
                    small={true}
                    value="ford"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={false}
                      small={true}
                      value="ford"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={false}
                        value="ford"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Ford
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
            <Button
              key=".$key-2"
              label="Bernard"
              onClick={[Function]}
              selected={false}
              small={true}
              value="bernard"
            >
              <EnsureDefaultTheme>
                <ThemeProvider
                  theme={[Function]}
                >
                  <Button__ButtonWrapper
                    onClick={[Function]}
                    selected={false}
                    small={true}
                    value="bernard"
                    weight="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button__ButtonWrapper-j48i5d-2",
                            "isStatic": false,
                            "lastClassName": "c0",
                            "rules": Array [
                              "width:",
                              [Function],
                              ";height:",
                              [Function],
                              ";padding:",
                              [Function],
                              ";border:transparent 1px solid;border-radius:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";color:",
                              [Function],
                              ";font-size:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";line-height:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";transition:",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              [Function],
                              ";",
                              ".c1",
                              " > svg{margin-bottom:2px;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}",
                              ".c4",
                              "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                              [Function],
                              ";border-color:",
                              [Function],
                              ";background-color:",
                              [Function],
                              ";",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              ".c1",
                              " > svg{",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                              "}}",
                              "@media only screen and ",
                              "(max-width: 49.94em)",
                              "{",
                              "
		",
                              [Function],
                              "
	",
                              "}",
                            ],
                          },
                          "displayName": "Button__ButtonWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                      selected={false}
                      small={true}
                      value="bernard"
                      weight="primary"
                    >
                      <button
                        className="c0"
                        onClick={[Function]}
                        selected={false}
                        value="bernard"
                      >
                        <Button__ButtonInner>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c1",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                    [Function],
                                    " + span{margin-left:4px;}}",
                                    ".c4",
                                    "{+ span{margin-left:4px;}}",
                                  ],
                                },
                                "displayName": "Button__ButtonInner",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c1",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1 c2"
                            >
                              <Button__Label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__Label-j48i5d-0",
                                        "isStatic": true,
                                        "lastClassName": "c3",
                                        "rules": Array [
                                          "display:flex;+ svg,+ ",
                                          ".c4",
                                          "{margin-left:4px;}",
                                        ],
                                      },
                                      "displayName": "Button__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__Label-j48i5d-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c3"
                                  >
                                    Bernard
                                  </span>
                                </StyledComponent>
                              </Button__Label>
                            </div>
                          </StyledComponent>
                        </Button__ButtonInner>
                      </button>
                    </StyledComponent>
                  </Button__ButtonWrapper>
                </ThemeProvider>
              </EnsureDefaultTheme>
            </Button>
          </div>
        </StyledComponent>
      </item-group__ItemGroupWrapper>
    </ThemeProvider>
  </EnsureDefaultTheme>
</ItemGroup>
`;
