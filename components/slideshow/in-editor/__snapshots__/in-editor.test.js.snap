// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SlideshowInEditor /> should render by default 1`] = `
.c12 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c14 {
  padding-top: 1.125rem;
  min-height: 57px;
}

.c7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  overflow: hidden;
  background: #000;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  overflow: hidden;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 100%;
}

.c9 img {
  max-width: 100%;
  max-height: 100%;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  object-fit: contain;
}

.c6 {
  width: 100%;
  padding-bottom: 66.6666%;
  position: relative;
  padding-bottom: 56.25%;
}

.c4 {
  -webkit-transition-timing-function: cubic-bezier(0.25,0.1,0.25,1);
  transition-timing-function: cubic-bezier(0.25,0.1,0.25,1);
  width: 100%;
  position: relative;
  -webkit-flex: 0 0 100%;
  -ms-flex: 0 0 100%;
  flex: 0 0 100%;
}

.c8 {
  background-size: cover;
  background-position: center center;
  -webkit-filter: blur(30px);
  filter: blur(30px);
  position: absolute;
  width: 120%;
  height: 120%;
  opacity: 0.6;
  background-image: url(https://i.kinja-img.com/gawker-media/image/upload/id.jpg);
}

.c19 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c19 svg + span {
  margin-left: 4px;
}

.c19 .c11 + span {
  margin-left: 4px;
}

.c17 {
  width: 42px;
  height: 42px;
  padding: 0;
  border: transparent 1px solid;
  border-radius: 50%;
  border-color: #7D7D7D;
  color: #666;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c17 .c18 > svg {
  margin-bottom: 2px;
  stroke: #666;
}

.c17 .c11 {
  margin-bottom: 2px;
}

.c17:hover,
.c17:active,
.c17:focus {
  color: #333;
  border-color: #4a4a4a;
  background-color: #fff;
}

.c17:hover .c18 > svg,
.c17:active .c18 > svg,
.c17:focus .c18 > svg {
  stroke: #4d4d4d;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0 18px 15px;
  max-width: 636px;
  margin: 0 auto;
  font-size: 16px;
  line-height: 21px;
  font-weight: normal;
  color: #7D7D7D;
}

.c23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c23 svg {
  margin-right: 4px;
}

.c16 {
  display: none;
  position: absolute;
  top: 20px;
  margin-top: 66.6666%;
  left: 20px;
}

.c16 svg {
  color: #7D7D7D;
  opacity: 0.6;
}

.c21 {
  display: none;
  position: absolute;
  top: 20px;
  margin-top: 66.6666%;
  right: 20px;
}

.c21 svg {
  color: #7D7D7D;
  opacity: 0.3;
}

.c2 {
  margin-bottom: 20px;
  position: relative;
  overflow: hidden;
  background-color: #F5F5F5;
  font-family: ProximaNovaCond,sans-serif;
}

.c2 .c15,
.c2 .c20 {
  margin-top: 56.25%;
}

.c0 .c1 .c3 .c13 {
  min-height: 56px;
  outline: none;
  margin: 0 82px;
  padding: 18px 0;
}

.c0 .c1 .c3 .c13:focus {
  outline: none;
}

.c0 .c1 .c3 .popup-attribution {
  color: #666;
  margin: 0 82px 8px;
}

.c0 .c1 .c3 .popup-attribution span {
  color: #222;
}

.c0 .c1 .inline-toolbar {
  position: absolute;
  top: 10px;
  left: 10px;
  display: none;
}

.c0 .c1 .inline-toolbar li {
  list-style-type: none;
  line-height: 24px;
  padding: 0;
  margin: 0;
}

.c0 .c1 .inline-toolbar li a {
  box-shadow: none;
}

.c0 .c1 .inline-toolbar li::before {
  display: none;
}

.c0 .c1:hover .inline-toolbar {
  display: block;
}

.c10 svg {
  color: #000;
}

@media only screen and (max-width:49.94em) {
  .c7 {
    background: #222;
    pointer-events: none;
  }
}

@media only screen and (min-width:50em) {
  .c7 {
    cursor: pointer;
  }

  .c7:hover .slide__SlideFullscreenIndicator-sc-7y2kxp-2 {
    opacity: 1;
  }
}

@media only screen and (orientation:landscape) {
  .c4 {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
}

@media only screen and (max-width:49.94em) {
  .c8 {
    display: none;
  }
}

@media only screen and (min-width:50em) {
  .c22 {
    padding: 0 0 15px;
    margin: 0 82px;
  }
}

@media only screen and (min-width:50em) {
  .c16 {
    display: inherit;
  }
}

@media only screen and (min-width:50em) {
  .c21 {
    display: inherit;
  }
}

@media only screen and (max-width:37.31em) {
  .c2.wiggle .c3:first-child .c5,
  .c2.wiggle .c3:first-child .c13 {
    -webkit-animation: gxBbuN 0.6s ease-in-out both;
    animation: gxBbuN 0.6s ease-in-out both;
  }
}

<SlideshowInEditor
  aspectRatio="Wide"
  slides={
    Array [
      Object {
        "alignment": "Bleed",
        "altText": null,
        "attribution": Array [],
        "caption": Array [
          Object {
            "styles": Array [],
            "type": "Text",
            "value": "caption",
          },
        ],
        "format": "jpg",
        "height": 600,
        "id": "id",
        "lightbox": true,
        "syndicationRights": false,
        "type": "Image",
        "width": 900,
      },
    ]
  }
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <in-editor__SlideshowInset
        className="slideshow-inset js_slideshow"
        contentEditable={false}
        data-aspect="Wide"
        data-current-slide-index="0"
        data-slides="[{\\"type\\":\\"Image\\",\\"id\\":\\"id\\",\\"format\\":\\"jpg\\",\\"width\\":900,\\"height\\":600,\\"alignment\\":\\"Bleed\\",\\"lightbox\\":true,\\"caption\\":[{\\"type\\":\\"Text\\",\\"value\\":\\"caption\\",\\"styles\\":[]}],\\"attribution\\":[],\\"syndicationRights\\":false,\\"altText\\":null}]"
      >
        <StyledComponent
          className="slideshow-inset js_slideshow"
          contentEditable={false}
          data-aspect="Wide"
          data-current-slide-index="0"
          data-slides="[{\\"type\\":\\"Image\\",\\"id\\":\\"id\\",\\"format\\":\\"jpg\\",\\"width\\":900,\\"height\\":600,\\"alignment\\":\\"Bleed\\",\\"lightbox\\":true,\\"caption\\":[{\\"type\\":\\"Text\\",\\"value\\":\\"caption\\",\\"styles\\":[]}],\\"attribution\\":[],\\"syndicationRights\\":false,\\"altText\\":null}]"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "in-editor__SlideshowInset-sc-1f4lkah-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  ".c1",
                  "{",
                  ".c3",
                  "{",
                  ".c13",
                  "{min-height:56px;outline:none;margin:0 82px;padding:18px 0;&:focus{outline:none;}}.popup-attribution{color:",
                  [Function],
                  ";margin:0 82px 8px;span{color:",
                  [Function],
                  ";}}}.inline-toolbar{position:absolute;top:10px;left:10px;display:none;li{list-style-type:none;line-height:24px;padding:0;margin:0;a{box-shadow:none;}&::before{display:none;}}}&:hover{.inline-toolbar{display:block;}}}",
                ],
              },
              "displayName": "in-editor__SlideshowInset",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "in-editor__SlideshowInset-sc-1f4lkah-0",
              "target": "aside",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <aside
            className="slideshow-inset js_slideshow c0"
            contentEditable={false}
            data-aspect="Wide"
            data-current-slide-index="0"
            data-slides="[{\\"type\\":\\"Image\\",\\"id\\":\\"id\\",\\"format\\":\\"jpg\\",\\"width\\":900,\\"height\\":600,\\"alignment\\":\\"Bleed\\",\\"lightbox\\":true,\\"caption\\":[{\\"type\\":\\"Text\\",\\"value\\":\\"caption\\",\\"styles\\":[]}],\\"attribution\\":[],\\"syndicationRights\\":false,\\"altText\\":null}]"
          >
            <slideshow__SlideShowContainer
              className="js_kinja-slideshow"
              wide={true}
            >
              <StyledComponent
                className="js_kinja-slideshow"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "c1",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "margin-bottom:20px;position:relative;overflow:hidden;background-color:",
                        [Function],
                        ";font-family:",
                        [Function],
                        ";",
                        "@media only screen and ",
                        "(max-width: 37.31em)",
                        "{",
                        "
		&.wiggle {
			",
                        ".c3",
                        ":first-child {
				",
                        ".c5",
                        ",
				",
                        ".c13",
                        " {
					animation: ",
                        Keyframes {
                          "id": "sc-keyframes-gxBbuN",
                          "inject": [Function],
                          "name": "gxBbuN",
                          "rules": Array [
                            "@-webkit-keyframes gxBbuN{50%{-webkit-transform:translate3d(-10%,0,0);-ms-transform:translate3d(-10%,0,0);transform:translate3d(-10%,0,0);}80%{-webkit-transform:translate3d(0%,0,0);-ms-transform:translate3d(0%,0,0);transform:translate3d(0%,0,0);}}",
                            "@keyframes gxBbuN{50%{-webkit-transform:translate3d(-10%,0,0);-ms-transform:translate3d(-10%,0,0);transform:translate3d(-10%,0,0);}80%{-webkit-transform:translate3d(0%,0,0);-ms-transform:translate3d(0%,0,0);transform:translate3d(0%,0,0);}}",
                          ],
                          "toString": [Function],
                        },
                        " 0.6s ease-in-out both;
				}
			}
		}
	",
                        "}",
                        " ",
                        [Function],
                        " ",
                        [Function],
                      ],
                    },
                    "displayName": "slideshow__SlideShowContainer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "c1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                wide={true}
              >
                <div
                  className="js_kinja-slideshow c1 c2"
                >
                  <slide__KinjaSlide
                    className="js_slide"
                  >
                    <StyledComponent
                      className="js_slide"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": true,
                            "lastClassName": "c4",
                            "rules": Array [
                              "transition-timing-function:cubic-bezier(0.25,0.1,0.25,1);width:100%;position:relative;flex:0 0 100%;@media only screen and (orientation:landscape){justify-content:flex-start;}",
                            ],
                          },
                          "displayName": "slide__KinjaSlide",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="js_slide c3 c4"
                      >
                        <slide__SlideContainer
                          wide={true}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c5",
                                  "isStatic": false,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "width:100%;padding-bottom:66.6666%;position:relative;",
                                    [Function],
                                  ],
                                },
                                "displayName": "slide__SlideContainer",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c5",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            wide={true}
                          >
                            <div
                              className="c5 c6"
                            >
                              <slide__SlideImageContainer>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "slide__SlideImageContainer-sc-7y2kxp-3",
                                        "isStatic": false,
                                        "lastClassName": "c7",
                                        "rules": Array [
                                          "align-items:center;box-sizing:border-box;position:absolute;left:0;top:0;right:0;bottom:0;display:flex;justify-content:center;overflow:hidden;background:",
                                          [Function],
                                          ";user-select:none;",
                                          "@media only screen and ",
                                          "(max-width: 49.94em)",
                                          "{",
                                          "
		background: ",
                                          [Function],
                                          ";
		pointer-events: none;
	",
                                          "}",
                                          " ",
                                          "@media only screen and ",
                                          "(min-width: 50em)",
                                          "{",
                                          "
		cursor: pointer;
		&:hover ",
                                          ".slide__SlideFullscreenIndicator-sc-7y2kxp-2",
                                          " {
			opacity: 1;
		}
	",
                                          "}",
                                        ],
                                      },
                                      "displayName": "slide__SlideImageContainer",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "slide__SlideImageContainer-sc-7y2kxp-3",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="c7"
                                  >
                                    <slide__SlideBlurBackground
                                      hidden={false}
                                      loaded={true}
                                      url="https://i.kinja-img.com/gawker-media/image/upload/id.jpg"
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "slide__SlideBlurBackground-sc-7y2kxp-8",
                                              "isStatic": false,
                                              "lastClassName": "c8",
                                              "rules": Array [
                                                "background-size:cover;background-position:center center;filter:blur(30px);position:absolute;width:120%;height:120%;opacity:0.6;",
                                                [Function],
                                                " ",
                                                [Function],
                                                " ",
                                                "@media only screen and ",
                                                "(max-width: 49.94em)",
                                                "{",
                                                "
		display: none;
	",
                                                "}",
                                              ],
                                            },
                                            "displayName": "slide__SlideBlurBackground",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "slide__SlideBlurBackground-sc-7y2kxp-8",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        hidden={false}
                                        loaded={true}
                                        url="https://i.kinja-img.com/gawker-media/image/upload/id.jpg"
                                      >
                                        <div
                                          className="c8"
                                          hidden={false}
                                        />
                                      </StyledComponent>
                                    </slide__SlideBlurBackground>
                                    <slide__SlideImage>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "slide__SlideImage-sc-7y2kxp-4",
                                              "isStatic": false,
                                              "lastClassName": "c9",
                                              "rules": Array [
                                                "align-items:center;box-sizing:border-box;position:absolute;left:0;top:0;right:0;bottom:0;display:flex;justify-content:center;overflow:hidden;user-select:none;width:100%;img{max-width:100%;max-height:100%;align-self:center;position:relative;user-select:none;object-fit:contain;}",
                                                [Function],
                                              ],
                                            },
                                            "displayName": "slide__SlideImage",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "slide__SlideImage-sc-7y2kxp-4",
                                            "target": "picture",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <picture
                                          className="c9"
                                        >
                                          <img
                                            data-chomp-id="id"
                                            data-format="jpg"
                                            src="https://i.kinja-img.com/gawker-media/image/upload/id.jpg"
                                          />
                                        </picture>
                                      </StyledComponent>
                                    </slide__SlideImage>
                                  </div>
                                </StyledComponent>
                              </slide__SlideImageContainer>
                              <in-editor__ListElement
                                className="editor-inline-toolbar inline-toolbar active"
                              >
                                <StyledComponent
                                  className="editor-inline-toolbar inline-toolbar active"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "in-editor__ListElement-sc-1f4lkah-2",
                                        "isStatic": false,
                                        "lastClassName": "c10",
                                        "rules": Array [
                                          "svg{color:",
                                          [Function],
                                          ";}",
                                        ],
                                      },
                                      "displayName": "in-editor__ListElement",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "in-editor__ListElement-sc-1f4lkah-2",
                                      "target": "ul",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <ul
                                    className="editor-inline-toolbar inline-toolbar active c10"
                                  >
                                    <li>
                                      <a
                                        className="js_crop"
                                        href="javascript:;"
                                        role="button"
                                        title="Crop image"
                                      >
                                        <CropIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c11",
                                                      "isStatic": true,
                                                      "lastClassName": "c12",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c11",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c11 c12"
                                                >
                                                  <Crop
                                                    aria-label="Crop icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="Crop icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M4.5.5c.28 0 .5.22.5.5v11.3L12.3 5H6a.5.5 0 1 1 0-1h6.5c.83 0 1.5.69 1.5 1.51V12a.5.5 0 0 1-1 0V5.71l-7.3 7.3H17a.5.5 0 1 1 0 1h-3V17a.5.5 0 0 1-1 0v-3H5.5A1.5 1.5 0 0 1 4 12.5V5H1a.5.5 0 1 1 0-1h3V1c0-.28.22-.5.5-.5z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </Crop>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </CropIcon>
                                      </a>
                                    </li>
                                    <li>
                                      <a
                                        className="js_remove-image"
                                        href="javascript:;"
                                        role="button"
                                        title="Delete image"
                                      >
                                        <TrashcanIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c11",
                                                      "isStatic": true,
                                                      "lastClassName": "c12",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c11",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c11 c12"
                                                >
                                                  <Trashcan
                                                    aria-label="Trashcan icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="Trashcan icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M6 8.5a.5.5 0 0 1 1 0v5a.5.5 0 1 1-1 0v-5zm5 0a.5.5 0 1 1 1 0v5a.5.5 0 1 1-1 0v-5zm-2.5 0a.5.5 0 0 1 1 0v5a.5.5 0 1 1-1 0v-5zM4 6v8.5c0 .83.67 1.5 1.5 1.5h7c.83 0 1.5-.68 1.5-1.5V6H4zm8-2.5c0-.83-.67-1.5-1.5-1.5h-3C6.68 2 6 2.67 6 3.5V5H5V3.5A2.5 2.5 0 0 1 7.5 1h3A2.5 2.5 0 0 1 13 3.5V5h3.5a.5.5 0 1 1 0 1H15v8.5a2.5 2.5 0 0 1-2.5 2.5h-7A2.5 2.5 0 0 1 3 14.5V6H1.5a.5.5 0 0 1 0-1H12V3.5z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </Trashcan>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </TrashcanIcon>
                                      </a>
                                    </li>
                                  </ul>
                                </StyledComponent>
                              </in-editor__ListElement>
                            </div>
                          </StyledComponent>
                        </slide__SlideContainer>
                        <slide__SlideCaption
                          className="js_caption"
                          contentEditable={true}
                          suppressContentEditableWarning={true}
                        >
                          <StyledComponent
                            className="js_caption"
                            contentEditable={true}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c13",
                                  "isStatic": false,
                                  "lastClassName": "c14",
                                  "rules": Array [
                                    "padding-top:",
                                    [Function],
                                    ";min-height:57px;",
                                  ],
                                },
                                "displayName": "slide__SlideCaption",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c13",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            suppressContentEditableWarning={true}
                          >
                            <div
                              className="js_caption c13 c14"
                              contentEditable={true}
                              suppressContentEditableWarning={true}
                            >
                              <WithKinjaMeta
                                nodes={
                                  Array [
                                    TextNode {
                                      "styles": Array [],
                                      "type": "Text",
                                      "value": "caption",
                                    },
                                  ]
                                }
                              >
                                <WithPlatform
                                  kinjaMeta={
                                    Object {
                                      "config": Object {},
                                    }
                                  }
                                  nodes={
                                    Array [
                                      TextNode {
                                        "styles": Array [],
                                        "type": "Text",
                                        "value": "caption",
                                      },
                                    ]
                                  }
                                >
                                  <InlineNodes
                                    kinjaMeta={
                                      Object {
                                        "config": Object {},
                                      }
                                    }
                                    nodes={
                                      Array [
                                        TextNode {
                                          "styles": Array [],
                                          "type": "Text",
                                          "value": "caption",
                                        },
                                      ]
                                    }
                                    platform="web"
                                  >
                                    <EnsureDefaultTheme>
                                      <ThemeProvider
                                        theme={[Function]}
                                      >
                                        caption
                                      </ThemeProvider>
                                    </EnsureDefaultTheme>
                                  </InlineNodes>
                                </WithPlatform>
                              </WithKinjaMeta>
                            </div>
                          </StyledComponent>
                        </slide__SlideCaption>
                      </div>
                    </StyledComponent>
                  </slide__KinjaSlide>
                  <slideshow__SlideshowNavigateLeft
                    className="button js_page-left"
                    icon={<ArrowLeftIcon />}
                    sort="circle"
                    weight="tertiary"
                  >
                    <StyledComponent
                      className="button js_page-left"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c15",
                            "isStatic": false,
                            "lastClassName": "c16",
                            "rules": Array [
                              "display:none;position:absolute;top:20px;margin-top:66.6666%;left:20px;",
                              [Function],
                              " ",
                              "@media only screen and ",
                              "(min-width: 50em)",
                              "{",
                              "
		display: inherit;
	",
                              "}",
                              " svg{color:",
                              [Function],
                              ";opacity:",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "slideshow__SlideshowNavigateLeft",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c15",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                      icon={<ArrowLeftIcon />}
                      sort="circle"
                      weight="tertiary"
                    >
                      <Button
                        className="button js_page-left c15 c16"
                        icon={<ArrowLeftIcon />}
                        sort="circle"
                        weight="tertiary"
                      >
                        <EnsureDefaultTheme>
                          <ThemeProvider
                            theme={[Function]}
                          >
                            <Button__ButtonWrapper
                              className="button js_page-left c15 c16"
                              sort="circle"
                              weight="tertiary"
                            >
                              <StyledComponent
                                className="button js_page-left c15 c16"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__ButtonWrapper-j48i5d-2",
                                      "isStatic": false,
                                      "lastClassName": "c17",
                                      "rules": Array [
                                        "width:",
                                        [Function],
                                        ";height:",
                                        [Function],
                                        ";padding:",
                                        [Function],
                                        ";border:transparent 1px solid;border-radius:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";font-size:",
                                        [Function],
                                        ";text-align:",
                                        [Function],
                                        ";line-height:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";transition:",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        ".c18",
                                        " > svg{margin-bottom:2px;",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}",
                                        ".c11",
                                        "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        ".c18",
                                        " > svg{",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}}",
                                        "@media only screen and ",
                                        "(max-width: 49.94em)",
                                        "{",
                                        "
		",
                                        [Function],
                                        "
	",
                                        "}",
                                      ],
                                    },
                                    "displayName": "Button__ButtonWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                sort="circle"
                                weight="tertiary"
                              >
                                <button
                                  className="button js_page-left c15 c16 c17"
                                >
                                  <Button__ButtonInner>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c18",
                                            "isStatic": false,
                                            "lastClassName": "c19",
                                            "rules": Array [
                                              "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                              [Function],
                                              " + span{margin-left:4px;}}",
                                              ".c11",
                                              "{+ span{margin-left:4px;}}",
                                            ],
                                          },
                                          "displayName": "Button__ButtonInner",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c18",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c18 c19"
                                      >
                                        <ArrowLeftIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c11",
                                                      "isStatic": true,
                                                      "lastClassName": "c12",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c11",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c11 c12"
                                                >
                                                  <ArrowLeft
                                                    aria-label="Arrow-left icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="Arrow-left icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M9.85 3.15c.2.2.2.5 0 .7L4.71 9H15.5a.5.5 0 1 1 0 1H4.7l5.15 5.15a.5.5 0 0 1-.7.7l-6-6h-.02a.5.5 0 0 1-.03-.05l.05.05A.5.5 0 0 1 3 9.5v-.01a.5.5 0 0 1 0-.06v.07a.5.5 0 0 1 .15-.35l6-6c.2-.2.5-.2.7 0z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ArrowLeft>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ArrowLeftIcon>
                                      </div>
                                    </StyledComponent>
                                  </Button__ButtonInner>
                                </button>
                              </StyledComponent>
                            </Button__ButtonWrapper>
                          </ThemeProvider>
                        </EnsureDefaultTheme>
                      </Button>
                    </StyledComponent>
                  </slideshow__SlideshowNavigateLeft>
                  <slideshow__SlideshowNavigateRight
                    className="button js_page-right"
                    icon={<ArrowRightIcon />}
                    sort="circle"
                    weight="tertiary"
                  >
                    <StyledComponent
                      className="button js_page-right"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c20",
                            "isStatic": false,
                            "lastClassName": "c21",
                            "rules": Array [
                              "display:none;position:absolute;top:20px;margin-top:66.6666%;right:20px;",
                              "@media only screen and ",
                              "(min-width: 50em)",
                              "{",
                              "
		display: inherit;
	",
                              "}",
                              " svg{color:",
                              [Function],
                              ";opacity:",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "slideshow__SlideshowNavigateRight",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c20",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                      icon={<ArrowRightIcon />}
                      sort="circle"
                      weight="tertiary"
                    >
                      <Button
                        className="button js_page-right c20 c21"
                        icon={<ArrowRightIcon />}
                        sort="circle"
                        weight="tertiary"
                      >
                        <EnsureDefaultTheme>
                          <ThemeProvider
                            theme={[Function]}
                          >
                            <Button__ButtonWrapper
                              className="button js_page-right c20 c21"
                              sort="circle"
                              weight="tertiary"
                            >
                              <StyledComponent
                                className="button js_page-right c20 c21"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__ButtonWrapper-j48i5d-2",
                                      "isStatic": false,
                                      "lastClassName": "c17",
                                      "rules": Array [
                                        "width:",
                                        [Function],
                                        ";height:",
                                        [Function],
                                        ";padding:",
                                        [Function],
                                        ";border:transparent 1px solid;border-radius:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";font-size:",
                                        [Function],
                                        ";text-align:",
                                        [Function],
                                        ";line-height:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";transition:",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        ".c18",
                                        " > svg{margin-bottom:2px;",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}",
                                        ".c11",
                                        "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        ".c18",
                                        " > svg{",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}}",
                                        "@media only screen and ",
                                        "(max-width: 49.94em)",
                                        "{",
                                        "
		",
                                        [Function],
                                        "
	",
                                        "}",
                                      ],
                                    },
                                    "displayName": "Button__ButtonWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                sort="circle"
                                weight="tertiary"
                              >
                                <button
                                  className="button js_page-right c20 c21 c17"
                                >
                                  <Button__ButtonInner>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c18",
                                            "isStatic": false,
                                            "lastClassName": "c19",
                                            "rules": Array [
                                              "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                              [Function],
                                              " + span{margin-left:4px;}}",
                                              ".c11",
                                              "{+ span{margin-left:4px;}}",
                                            ],
                                          },
                                          "displayName": "Button__ButtonInner",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c18",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c18 c19"
                                      >
                                        <ArrowRightIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c11",
                                                      "isStatic": true,
                                                      "lastClassName": "c12",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c11",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c11 c12"
                                                >
                                                  <ArrowRight
                                                    aria-label="Arrow-right icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="Arrow-right icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M8.15 3.15a.5.5 0 0 0 0 .7L13.29 9H2.5a.5.5 0 1 0 0 1h10.8l-5.15 5.15a.5.5 0 0 0 .7.7l6-6h.02a.5.5 0 0 0 .03-.05l-.05.05A.5.5 0 0 0 15 9.5v-.01a.5.5 0 0 0 0-.06v.07a.5.5 0 0 0-.15-.35l-6-6a.5.5 0 0 0-.7 0z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ArrowRight>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ArrowRightIcon>
                                      </div>
                                    </StyledComponent>
                                  </Button__ButtonInner>
                                </button>
                              </StyledComponent>
                            </Button__ButtonWrapper>
                          </ThemeProvider>
                        </EnsureDefaultTheme>
                      </Button>
                    </StyledComponent>
                  </slideshow__SlideshowNavigateRight>
                  <slideshow__SlideshowIndex>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "slideshow__SlideshowIndex-sc-81stkc-6",
                            "isStatic": false,
                            "lastClassName": "c22",
                            "rules": Array [
                              "display:flex;justify-content:space-between;padding:0 18px 15px;max-width:",
                              [Function],
                              ";margin:0 auto;font-size:16px;line-height:21px;font-weight:normal;color:",
                              [Function],
                              ";",
                              "@media only screen and ",
                              "(min-width: 50em)",
                              "{",
                              "
		padding: 0 0 15px;
		margin: 0 82px;
	",
                              "}",
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "slideshow__SlideshowIndex",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "slideshow__SlideshowIndex-sc-81stkc-6",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c22"
                      >
                        <slideshow__SlideshowIndexPaging>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "slideshow__SlideshowIndexPaging-sc-81stkc-7",
                                  "isStatic": true,
                                  "lastClassName": "c23",
                                  "rules": Array [
                                    "display:flex;align-items:center;svg{margin-right:4px;}",
                                  ],
                                },
                                "displayName": "slideshow__SlideshowIndexPaging",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "slideshow__SlideshowIndexPaging-sc-81stkc-7",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c23"
                            >
                              <SlideshowIcon>
                                <Icon19>
                                  <icon19__IconWrapper>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c11",
                                            "isStatic": true,
                                            "lastClassName": "c12",
                                            "rules": Array [
                                              "fill:currentColor;display:flex;",
                                            ],
                                          },
                                          "displayName": "icon19__IconWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c11",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c11 c12"
                                      >
                                        <Slideshow
                                          aria-label="Slideshow icon"
                                          height="18"
                                          viewBox="0 0 18 18"
                                          width="18"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <svg
                                            aria-label="Slideshow icon"
                                            height="18"
                                            viewBox="0 0 18 18"
                                            width="18"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M12.5 4A2.5 2.5 0 0 1 15 6.5v8a2.5 2.5 0 0 1-2.5 2.5h-10A2.5 2.5 0 0 1 0 14.5v-8A2.5 2.5 0 0 1 2.5 4h10zM4.7 9.92l-3.4 5.41a.5.5 0 0 1-.03.04c.27.38.72.63 1.23.63h9.98c.35 0 .68-.12.93-.32l-3.36-3.44-1.83 1.86a.5.5 0 0 1-.77-.07L4.71 9.92zM12.49 5H2.51A1.5 1.5 0 0 0 1 6.5v7.44l3.27-5.2a.5.5 0 0 1 .78-.1l.06.08 2.84 4.24 1.76-1.79c.2-.2.52-.2.71 0l3.55 3.64c.02-.1.03-.21.03-.32V6.51C14 5.68 13.32 5 12.5 5zm3-4A2.5 2.5 0 0 1 18 3.5v8c0 1.27-1.01 2.5-2 2.5v-1c.39 0 1-.75 1-1.5v-8c0-.82-.68-1.5-1.5-1.5h-10C4.66 2 4 2.48 4 3H3c0-1.14 1.15-2 2.5-2zM10 6a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm0 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"
                                              fillRule="evenodd"
                                            />
                                          </svg>
                                        </Slideshow>
                                      </span>
                                    </StyledComponent>
                                  </icon19__IconWrapper>
                                </Icon19>
                              </SlideshowIcon>
                               
                              1
                               / 
                              1
                            </div>
                          </StyledComponent>
                        </slideshow__SlideshowIndexPaging>
                      </div>
                    </StyledComponent>
                  </slideshow__SlideshowIndex>
                </div>
              </StyledComponent>
            </slideshow__SlideShowContainer>
          </aside>
        </StyledComponent>
      </in-editor__SlideshowInset>
    </ThemeProvider>
  </EnsureDefaultTheme>
</SlideshowInEditor>
`;

exports[`<SlideshowInEditor /> should render empty slideshow 1`] = `
.c16 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  padding-top: 1.125rem;
  min-height: 57px;
}

.c6 {
  width: 100%;
  padding-bottom: 66.6666%;
  position: relative;
  padding-bottom: 56.25%;
}

.c4 {
  -webkit-transition-timing-function: cubic-bezier(0.25,0.1,0.25,1);
  transition-timing-function: cubic-bezier(0.25,0.1,0.25,1);
  width: 100%;
  position: relative;
  -webkit-flex: 0 0 100%;
  -ms-flex: 0 0 100%;
  flex: 0 0 100%;
}

.c14 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c14 svg + span {
  margin-left: 4px;
}

.c14 .c15 + span {
  margin-left: 4px;
}

.c12 {
  width: 42px;
  height: 42px;
  padding: 0;
  border: transparent 1px solid;
  border-radius: 50%;
  border-color: #7D7D7D;
  color: #666;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c12 .c13 > svg {
  margin-bottom: 2px;
  stroke: #666;
}

.c12 .c15 {
  margin-bottom: 2px;
}

.c12:hover,
.c12:active,
.c12:focus {
  color: #333;
  border-color: #4a4a4a;
  background-color: #fff;
}

.c12:hover .c13 > svg,
.c12:active .c13 > svg,
.c12:focus .c13 > svg {
  stroke: #4d4d4d;
}

.c19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0 18px 15px;
  max-width: 636px;
  margin: 0 auto;
  font-size: 16px;
  line-height: 21px;
  font-weight: normal;
  color: #7D7D7D;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c20 svg {
  margin-right: 4px;
}

.c11 {
  display: none;
  position: absolute;
  top: 20px;
  margin-top: 66.6666%;
  left: 20px;
}

.c11 svg {
  color: #7D7D7D;
  opacity: 0.6;
}

.c18 {
  display: none;
  position: absolute;
  top: 20px;
  margin-top: 66.6666%;
  right: 20px;
}

.c18 svg {
  color: #7D7D7D;
  opacity: 0.3;
}

.c2 {
  margin-bottom: 20px;
  position: relative;
  overflow: hidden;
  background-color: #F5F5F5;
  font-family: ProximaNovaCond,sans-serif;
}

.c2 .c10,
.c2 .c17 {
  margin-top: 56.25%;
}

.c0 .c1 .c3 .c8 {
  min-height: 56px;
  outline: none;
  margin: 0 82px;
  padding: 18px 0;
}

.c0 .c1 .c3 .c8:focus {
  outline: none;
}

.c0 .c1 .c3 .popup-attribution {
  color: #666;
  margin: 0 82px 8px;
}

.c0 .c1 .c3 .popup-attribution span {
  color: #222;
}

.c0 .c1 .inline-toolbar {
  position: absolute;
  top: 10px;
  left: 10px;
  display: none;
}

.c0 .c1 .inline-toolbar li {
  list-style-type: none;
  line-height: 24px;
  padding: 0;
  margin: 0;
}

.c0 .c1 .inline-toolbar li a {
  box-shadow: none;
}

.c0 .c1 .inline-toolbar li::before {
  display: none;
}

.c0 .c1:hover .inline-toolbar {
  display: block;
}

.c7 {
  border: 1px dashed #CCC;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background: #F5F5F5;
}

.c7 h1 {
  color: #7D7D7D;
  font-size: 16px;
  font-weight: normal;
  margin-bottom: 10px;
}

@media only screen and (orientation:landscape) {
  .c4 {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
}

@media only screen and (min-width:50em) {
  .c19 {
    padding: 0 0 15px;
    margin: 0 82px;
  }
}

@media only screen and (min-width:50em) {
  .c11 {
    display: inherit;
  }
}

@media only screen and (min-width:50em) {
  .c18 {
    display: inherit;
  }
}

@media only screen and (max-width:37.31em) {
  .c2.wiggle .c3:first-child .c5,
  .c2.wiggle .c3:first-child .c8 {
    -webkit-animation: gxBbuN 0.6s ease-in-out both;
    animation: gxBbuN 0.6s ease-in-out both;
  }
}

<SlideshowInEditor
  aspectRatio="Wide"
  slides={Array []}
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <in-editor__SlideshowInset
        className="slideshow-inset js_slideshow"
        contentEditable={false}
        data-aspect="Wide"
        data-current-slide-index="0"
        data-slides="[]"
      >
        <StyledComponent
          className="slideshow-inset js_slideshow"
          contentEditable={false}
          data-aspect="Wide"
          data-current-slide-index="0"
          data-slides="[]"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "in-editor__SlideshowInset-sc-1f4lkah-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  ".c1",
                  "{",
                  ".c3",
                  "{",
                  ".c8",
                  "{min-height:56px;outline:none;margin:0 82px;padding:18px 0;&:focus{outline:none;}}.popup-attribution{color:",
                  [Function],
                  ";margin:0 82px 8px;span{color:",
                  [Function],
                  ";}}}.inline-toolbar{position:absolute;top:10px;left:10px;display:none;li{list-style-type:none;line-height:24px;padding:0;margin:0;a{box-shadow:none;}&::before{display:none;}}}&:hover{.inline-toolbar{display:block;}}}",
                ],
              },
              "displayName": "in-editor__SlideshowInset",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "in-editor__SlideshowInset-sc-1f4lkah-0",
              "target": "aside",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <aside
            className="slideshow-inset js_slideshow c0"
            contentEditable={false}
            data-aspect="Wide"
            data-current-slide-index="0"
            data-slides="[]"
          >
            <slideshow__SlideShowContainer
              className="js_kinja-slideshow"
              wide={true}
            >
              <StyledComponent
                className="js_kinja-slideshow"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "c1",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "margin-bottom:20px;position:relative;overflow:hidden;background-color:",
                        [Function],
                        ";font-family:",
                        [Function],
                        ";",
                        "@media only screen and ",
                        "(max-width: 37.31em)",
                        "{",
                        "
		&.wiggle {
			",
                        ".c3",
                        ":first-child {
				",
                        ".c5",
                        ",
				",
                        ".c8",
                        " {
					animation: ",
                        Keyframes {
                          "id": "sc-keyframes-gxBbuN",
                          "inject": [Function],
                          "name": "gxBbuN",
                          "rules": Array [
                            "@-webkit-keyframes gxBbuN{50%{-webkit-transform:translate3d(-10%,0,0);-ms-transform:translate3d(-10%,0,0);transform:translate3d(-10%,0,0);}80%{-webkit-transform:translate3d(0%,0,0);-ms-transform:translate3d(0%,0,0);transform:translate3d(0%,0,0);}}",
                            "@keyframes gxBbuN{50%{-webkit-transform:translate3d(-10%,0,0);-ms-transform:translate3d(-10%,0,0);transform:translate3d(-10%,0,0);}80%{-webkit-transform:translate3d(0%,0,0);-ms-transform:translate3d(0%,0,0);transform:translate3d(0%,0,0);}}",
                          ],
                          "toString": [Function],
                        },
                        " 0.6s ease-in-out both;
				}
			}
		}
	",
                        "}",
                        " ",
                        [Function],
                        " ",
                        [Function],
                      ],
                    },
                    "displayName": "slideshow__SlideShowContainer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "c1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                wide={true}
              >
                <div
                  className="js_kinja-slideshow c1 c2"
                >
                  <slide__KinjaSlide
                    className="js_slide"
                  >
                    <StyledComponent
                      className="js_slide"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": true,
                            "lastClassName": "c4",
                            "rules": Array [
                              "transition-timing-function:cubic-bezier(0.25,0.1,0.25,1);width:100%;position:relative;flex:0 0 100%;@media only screen and (orientation:landscape){justify-content:flex-start;}",
                            ],
                          },
                          "displayName": "slide__KinjaSlide",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="js_slide c3 c4"
                      >
                        <slide__SlideContainer
                          wide={true}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c5",
                                  "isStatic": false,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "width:100%;padding-bottom:66.6666%;position:relative;",
                                    [Function],
                                  ],
                                },
                                "displayName": "slide__SlideContainer",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c5",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            wide={true}
                          >
                            <div
                              className="c5 c6"
                            >
                              <in-editor__SlideshowCallToAction>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "in-editor__SlideshowCallToAction-sc-1f4lkah-1",
                                        "isStatic": false,
                                        "lastClassName": "c7",
                                        "rules": Array [
                                          "border:1px dashed ",
                                          [Function],
                                          ";position:absolute;left:0;right:0;top:0;bottom:0;display:flex;flex-direction:column;align-items:center;justify-content:center;background:",
                                          [Function],
                                          ";h1{color:",
                                          [Function],
                                          ";font-size:16px;font-weight:normal;margin-bottom:10px;}",
                                        ],
                                      },
                                      "displayName": "in-editor__SlideshowCallToAction",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "in-editor__SlideshowCallToAction-sc-1f4lkah-1",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="c7"
                                  >
                                    <h1>
                                      There are no slides in this slideshow yet.
                                    </h1>
                                    <button
                                      className="button js_add-slide"
                                    >
                                      Add slides
                                    </button>
                                  </div>
                                </StyledComponent>
                              </in-editor__SlideshowCallToAction>
                            </div>
                          </StyledComponent>
                        </slide__SlideContainer>
                        <slide__SlideCaption
                          className="js_caption"
                        >
                          <StyledComponent
                            className="js_caption"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c8",
                                  "isStatic": false,
                                  "lastClassName": "c9",
                                  "rules": Array [
                                    "padding-top:",
                                    [Function],
                                    ";min-height:57px;",
                                  ],
                                },
                                "displayName": "slide__SlideCaption",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c8",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="js_caption c8 c9"
                            />
                          </StyledComponent>
                        </slide__SlideCaption>
                      </div>
                    </StyledComponent>
                  </slide__KinjaSlide>
                  <slideshow__SlideshowNavigateLeft
                    className="button js_page-left"
                    icon={<ArrowLeftIcon />}
                    sort="circle"
                    weight="tertiary"
                  >
                    <StyledComponent
                      className="button js_page-left"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c10",
                            "isStatic": false,
                            "lastClassName": "c11",
                            "rules": Array [
                              "display:none;position:absolute;top:20px;margin-top:66.6666%;left:20px;",
                              [Function],
                              " ",
                              "@media only screen and ",
                              "(min-width: 50em)",
                              "{",
                              "
		display: inherit;
	",
                              "}",
                              " svg{color:",
                              [Function],
                              ";opacity:",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "slideshow__SlideshowNavigateLeft",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c10",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                      icon={<ArrowLeftIcon />}
                      sort="circle"
                      weight="tertiary"
                    >
                      <Button
                        className="button js_page-left c10 c11"
                        icon={<ArrowLeftIcon />}
                        sort="circle"
                        weight="tertiary"
                      >
                        <EnsureDefaultTheme>
                          <ThemeProvider
                            theme={[Function]}
                          >
                            <Button__ButtonWrapper
                              className="button js_page-left c10 c11"
                              sort="circle"
                              weight="tertiary"
                            >
                              <StyledComponent
                                className="button js_page-left c10 c11"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__ButtonWrapper-j48i5d-2",
                                      "isStatic": false,
                                      "lastClassName": "c12",
                                      "rules": Array [
                                        "width:",
                                        [Function],
                                        ";height:",
                                        [Function],
                                        ";padding:",
                                        [Function],
                                        ";border:transparent 1px solid;border-radius:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";font-size:",
                                        [Function],
                                        ";text-align:",
                                        [Function],
                                        ";line-height:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";transition:",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        ".c13",
                                        " > svg{margin-bottom:2px;",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}",
                                        ".c15",
                                        "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        ".c13",
                                        " > svg{",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}}",
                                        "@media only screen and ",
                                        "(max-width: 49.94em)",
                                        "{",
                                        "
		",
                                        [Function],
                                        "
	",
                                        "}",
                                      ],
                                    },
                                    "displayName": "Button__ButtonWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                sort="circle"
                                weight="tertiary"
                              >
                                <button
                                  className="button js_page-left c10 c11 c12"
                                >
                                  <Button__ButtonInner>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c13",
                                            "isStatic": false,
                                            "lastClassName": "c14",
                                            "rules": Array [
                                              "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                              [Function],
                                              " + span{margin-left:4px;}}",
                                              ".c15",
                                              "{+ span{margin-left:4px;}}",
                                            ],
                                          },
                                          "displayName": "Button__ButtonInner",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c13",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c13 c14"
                                      >
                                        <ArrowLeftIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c15",
                                                      "isStatic": true,
                                                      "lastClassName": "c16",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c15",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c15 c16"
                                                >
                                                  <ArrowLeft
                                                    aria-label="Arrow-left icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="Arrow-left icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M9.85 3.15c.2.2.2.5 0 .7L4.71 9H15.5a.5.5 0 1 1 0 1H4.7l5.15 5.15a.5.5 0 0 1-.7.7l-6-6h-.02a.5.5 0 0 1-.03-.05l.05.05A.5.5 0 0 1 3 9.5v-.01a.5.5 0 0 1 0-.06v.07a.5.5 0 0 1 .15-.35l6-6c.2-.2.5-.2.7 0z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ArrowLeft>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ArrowLeftIcon>
                                      </div>
                                    </StyledComponent>
                                  </Button__ButtonInner>
                                </button>
                              </StyledComponent>
                            </Button__ButtonWrapper>
                          </ThemeProvider>
                        </EnsureDefaultTheme>
                      </Button>
                    </StyledComponent>
                  </slideshow__SlideshowNavigateLeft>
                  <slideshow__SlideshowNavigateRight
                    className="button js_page-right"
                    icon={<ArrowRightIcon />}
                    sort="circle"
                    weight="tertiary"
                  >
                    <StyledComponent
                      className="button js_page-right"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c17",
                            "isStatic": false,
                            "lastClassName": "c18",
                            "rules": Array [
                              "display:none;position:absolute;top:20px;margin-top:66.6666%;right:20px;",
                              "@media only screen and ",
                              "(min-width: 50em)",
                              "{",
                              "
		display: inherit;
	",
                              "}",
                              " svg{color:",
                              [Function],
                              ";opacity:",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "slideshow__SlideshowNavigateRight",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c17",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                      icon={<ArrowRightIcon />}
                      sort="circle"
                      weight="tertiary"
                    >
                      <Button
                        className="button js_page-right c17 c18"
                        icon={<ArrowRightIcon />}
                        sort="circle"
                        weight="tertiary"
                      >
                        <EnsureDefaultTheme>
                          <ThemeProvider
                            theme={[Function]}
                          >
                            <Button__ButtonWrapper
                              className="button js_page-right c17 c18"
                              sort="circle"
                              weight="tertiary"
                            >
                              <StyledComponent
                                className="button js_page-right c17 c18"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__ButtonWrapper-j48i5d-2",
                                      "isStatic": false,
                                      "lastClassName": "c12",
                                      "rules": Array [
                                        "width:",
                                        [Function],
                                        ";height:",
                                        [Function],
                                        ";padding:",
                                        [Function],
                                        ";border:transparent 1px solid;border-radius:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";font-size:",
                                        [Function],
                                        ";text-align:",
                                        [Function],
                                        ";line-height:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";transition:",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        ".c13",
                                        " > svg{margin-bottom:2px;",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}",
                                        ".c15",
                                        "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        ".c13",
                                        " > svg{",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}}",
                                        "@media only screen and ",
                                        "(max-width: 49.94em)",
                                        "{",
                                        "
		",
                                        [Function],
                                        "
	",
                                        "}",
                                      ],
                                    },
                                    "displayName": "Button__ButtonWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                sort="circle"
                                weight="tertiary"
                              >
                                <button
                                  className="button js_page-right c17 c18 c12"
                                >
                                  <Button__ButtonInner>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c13",
                                            "isStatic": false,
                                            "lastClassName": "c14",
                                            "rules": Array [
                                              "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                              [Function],
                                              " + span{margin-left:4px;}}",
                                              ".c15",
                                              "{+ span{margin-left:4px;}}",
                                            ],
                                          },
                                          "displayName": "Button__ButtonInner",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c13",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c13 c14"
                                      >
                                        <ArrowRightIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c15",
                                                      "isStatic": true,
                                                      "lastClassName": "c16",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c15",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c15 c16"
                                                >
                                                  <ArrowRight
                                                    aria-label="Arrow-right icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="Arrow-right icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M8.15 3.15a.5.5 0 0 0 0 .7L13.29 9H2.5a.5.5 0 1 0 0 1h10.8l-5.15 5.15a.5.5 0 0 0 .7.7l6-6h.02a.5.5 0 0 0 .03-.05l-.05.05A.5.5 0 0 0 15 9.5v-.01a.5.5 0 0 0 0-.06v.07a.5.5 0 0 0-.15-.35l-6-6a.5.5 0 0 0-.7 0z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ArrowRight>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ArrowRightIcon>
                                      </div>
                                    </StyledComponent>
                                  </Button__ButtonInner>
                                </button>
                              </StyledComponent>
                            </Button__ButtonWrapper>
                          </ThemeProvider>
                        </EnsureDefaultTheme>
                      </Button>
                    </StyledComponent>
                  </slideshow__SlideshowNavigateRight>
                  <slideshow__SlideshowIndex>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "slideshow__SlideshowIndex-sc-81stkc-6",
                            "isStatic": false,
                            "lastClassName": "c19",
                            "rules": Array [
                              "display:flex;justify-content:space-between;padding:0 18px 15px;max-width:",
                              [Function],
                              ";margin:0 auto;font-size:16px;line-height:21px;font-weight:normal;color:",
                              [Function],
                              ";",
                              "@media only screen and ",
                              "(min-width: 50em)",
                              "{",
                              "
		padding: 0 0 15px;
		margin: 0 82px;
	",
                              "}",
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "slideshow__SlideshowIndex",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "slideshow__SlideshowIndex-sc-81stkc-6",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c19"
                      >
                        <slideshow__SlideshowIndexPaging>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "slideshow__SlideshowIndexPaging-sc-81stkc-7",
                                  "isStatic": true,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "display:flex;align-items:center;svg{margin-right:4px;}",
                                  ],
                                },
                                "displayName": "slideshow__SlideshowIndexPaging",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "slideshow__SlideshowIndexPaging-sc-81stkc-7",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c20"
                            >
                              <SlideshowIcon>
                                <Icon19>
                                  <icon19__IconWrapper>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c15",
                                            "isStatic": true,
                                            "lastClassName": "c16",
                                            "rules": Array [
                                              "fill:currentColor;display:flex;",
                                            ],
                                          },
                                          "displayName": "icon19__IconWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c15",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c15 c16"
                                      >
                                        <Slideshow
                                          aria-label="Slideshow icon"
                                          height="18"
                                          viewBox="0 0 18 18"
                                          width="18"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <svg
                                            aria-label="Slideshow icon"
                                            height="18"
                                            viewBox="0 0 18 18"
                                            width="18"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M12.5 4A2.5 2.5 0 0 1 15 6.5v8a2.5 2.5 0 0 1-2.5 2.5h-10A2.5 2.5 0 0 1 0 14.5v-8A2.5 2.5 0 0 1 2.5 4h10zM4.7 9.92l-3.4 5.41a.5.5 0 0 1-.03.04c.27.38.72.63 1.23.63h9.98c.35 0 .68-.12.93-.32l-3.36-3.44-1.83 1.86a.5.5 0 0 1-.77-.07L4.71 9.92zM12.49 5H2.51A1.5 1.5 0 0 0 1 6.5v7.44l3.27-5.2a.5.5 0 0 1 .78-.1l.06.08 2.84 4.24 1.76-1.79c.2-.2.52-.2.71 0l3.55 3.64c.02-.1.03-.21.03-.32V6.51C14 5.68 13.32 5 12.5 5zm3-4A2.5 2.5 0 0 1 18 3.5v8c0 1.27-1.01 2.5-2 2.5v-1c.39 0 1-.75 1-1.5v-8c0-.82-.68-1.5-1.5-1.5h-10C4.66 2 4 2.48 4 3H3c0-1.14 1.15-2 2.5-2zM10 6a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm0 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"
                                              fillRule="evenodd"
                                            />
                                          </svg>
                                        </Slideshow>
                                      </span>
                                    </StyledComponent>
                                  </icon19__IconWrapper>
                                </Icon19>
                              </SlideshowIcon>
                               
                              1
                               / 
                              0
                            </div>
                          </StyledComponent>
                        </slideshow__SlideshowIndexPaging>
                      </div>
                    </StyledComponent>
                  </slideshow__SlideshowIndex>
                </div>
              </StyledComponent>
            </slideshow__SlideShowContainer>
          </aside>
        </StyledComponent>
      </in-editor__SlideshowInset>
    </ThemeProvider>
  </EnsureDefaultTheme>
</SlideshowInEditor>
`;

exports[`<SlideshowInEditor /> should render without caption or attribution 1`] = `
.c12 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c14 {
  padding-top: 1.125rem;
  min-height: 57px;
}

.c7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  overflow: hidden;
  background: #000;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  overflow: hidden;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 100%;
}

.c9 img {
  max-width: 100%;
  max-height: 100%;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  object-fit: contain;
}

.c6 {
  width: 100%;
  padding-bottom: 66.6666%;
  position: relative;
  padding-bottom: 56.25%;
}

.c4 {
  -webkit-transition-timing-function: cubic-bezier(0.25,0.1,0.25,1);
  transition-timing-function: cubic-bezier(0.25,0.1,0.25,1);
  width: 100%;
  position: relative;
  -webkit-flex: 0 0 100%;
  -ms-flex: 0 0 100%;
  flex: 0 0 100%;
}

.c8 {
  background-size: cover;
  background-position: center center;
  -webkit-filter: blur(30px);
  filter: blur(30px);
  position: absolute;
  width: 120%;
  height: 120%;
  opacity: 0.6;
  background-image: url(https://i.kinja-img.com/gawker-media/image/upload/id.jpg);
}

.c19 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  white-space: nowrap;
  pointer-events: none;
}

.c19 svg + span {
  margin-left: 4px;
}

.c19 .c11 + span {
  margin-left: 4px;
}

.c17 {
  width: 42px;
  height: 42px;
  padding: 0;
  border: transparent 1px solid;
  border-radius: 50%;
  border-color: #7D7D7D;
  color: #666;
  font-size: 1rem;
  text-align: center;
  line-height: 42px;
  background-color: #FFF;
  -webkit-transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
  transition: background-color 0.2s ease-out,border-color 0.2s ease-out,color 0.2s ease-out;
}

.c17 .c18 > svg {
  margin-bottom: 2px;
  stroke: #666;
}

.c17 .c11 {
  margin-bottom: 2px;
}

.c17:hover,
.c17:active,
.c17:focus {
  color: #333;
  border-color: #4a4a4a;
  background-color: #fff;
}

.c17:hover .c18 > svg,
.c17:active .c18 > svg,
.c17:focus .c18 > svg {
  stroke: #4d4d4d;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0 18px 15px;
  max-width: 636px;
  margin: 0 auto;
  font-size: 16px;
  line-height: 21px;
  font-weight: normal;
  color: #7D7D7D;
}

.c23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c23 svg {
  margin-right: 4px;
}

.c16 {
  display: none;
  position: absolute;
  top: 20px;
  margin-top: 66.6666%;
  left: 20px;
}

.c16 svg {
  color: #7D7D7D;
  opacity: 0.6;
}

.c21 {
  display: none;
  position: absolute;
  top: 20px;
  margin-top: 66.6666%;
  right: 20px;
}

.c21 svg {
  color: #7D7D7D;
  opacity: 0.3;
}

.c2 {
  margin-bottom: 20px;
  position: relative;
  overflow: hidden;
  background-color: #F5F5F5;
  font-family: ProximaNovaCond,sans-serif;
}

.c2 .c15,
.c2 .c20 {
  margin-top: 56.25%;
}

.c0 .c1 .c3 .c13 {
  min-height: 56px;
  outline: none;
  margin: 0 82px;
  padding: 18px 0;
}

.c0 .c1 .c3 .c13:focus {
  outline: none;
}

.c0 .c1 .c3 .popup-attribution {
  color: #666;
  margin: 0 82px 8px;
}

.c0 .c1 .c3 .popup-attribution span {
  color: #222;
}

.c0 .c1 .inline-toolbar {
  position: absolute;
  top: 10px;
  left: 10px;
  display: none;
}

.c0 .c1 .inline-toolbar li {
  list-style-type: none;
  line-height: 24px;
  padding: 0;
  margin: 0;
}

.c0 .c1 .inline-toolbar li a {
  box-shadow: none;
}

.c0 .c1 .inline-toolbar li::before {
  display: none;
}

.c0 .c1:hover .inline-toolbar {
  display: block;
}

.c10 svg {
  color: #000;
}

@media only screen and (max-width:49.94em) {
  .c7 {
    background: #222;
    pointer-events: none;
  }
}

@media only screen and (min-width:50em) {
  .c7 {
    cursor: pointer;
  }

  .c7:hover .slide__SlideFullscreenIndicator-sc-7y2kxp-2 {
    opacity: 1;
  }
}

@media only screen and (orientation:landscape) {
  .c4 {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
}

@media only screen and (max-width:49.94em) {
  .c8 {
    display: none;
  }
}

@media only screen and (min-width:50em) {
  .c22 {
    padding: 0 0 15px;
    margin: 0 82px;
  }
}

@media only screen and (min-width:50em) {
  .c16 {
    display: inherit;
  }
}

@media only screen and (min-width:50em) {
  .c21 {
    display: inherit;
  }
}

@media only screen and (max-width:37.31em) {
  .c2.wiggle .c3:first-child .c5,
  .c2.wiggle .c3:first-child .c13 {
    -webkit-animation: gxBbuN 0.6s ease-in-out both;
    animation: gxBbuN 0.6s ease-in-out both;
  }
}

<SlideshowInEditor
  aspectRatio="Wide"
  slides={
    Array [
      Object {
        "alignment": "Bleed",
        "altText": null,
        "attribution": Array [],
        "caption": Array [],
        "format": "jpg",
        "height": 600,
        "id": "id",
        "lightbox": true,
        "syndicationRights": false,
        "type": "Image",
        "width": 900,
      },
    ]
  }
>
  <EnsureDefaultTheme>
    <ThemeProvider
      theme={[Function]}
    >
      <in-editor__SlideshowInset
        className="slideshow-inset js_slideshow"
        contentEditable={false}
        data-aspect="Wide"
        data-current-slide-index="0"
        data-slides="[{\\"type\\":\\"Image\\",\\"id\\":\\"id\\",\\"format\\":\\"jpg\\",\\"width\\":900,\\"height\\":600,\\"alignment\\":\\"Bleed\\",\\"lightbox\\":true,\\"caption\\":[],\\"attribution\\":[],\\"syndicationRights\\":false,\\"altText\\":null}]"
      >
        <StyledComponent
          className="slideshow-inset js_slideshow"
          contentEditable={false}
          data-aspect="Wide"
          data-current-slide-index="0"
          data-slides="[{\\"type\\":\\"Image\\",\\"id\\":\\"id\\",\\"format\\":\\"jpg\\",\\"width\\":900,\\"height\\":600,\\"alignment\\":\\"Bleed\\",\\"lightbox\\":true,\\"caption\\":[],\\"attribution\\":[],\\"syndicationRights\\":false,\\"altText\\":null}]"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "in-editor__SlideshowInset-sc-1f4lkah-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  ".c1",
                  "{",
                  ".c3",
                  "{",
                  ".c13",
                  "{min-height:56px;outline:none;margin:0 82px;padding:18px 0;&:focus{outline:none;}}.popup-attribution{color:",
                  [Function],
                  ";margin:0 82px 8px;span{color:",
                  [Function],
                  ";}}}.inline-toolbar{position:absolute;top:10px;left:10px;display:none;li{list-style-type:none;line-height:24px;padding:0;margin:0;a{box-shadow:none;}&::before{display:none;}}}&:hover{.inline-toolbar{display:block;}}}",
                ],
              },
              "displayName": "in-editor__SlideshowInset",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "in-editor__SlideshowInset-sc-1f4lkah-0",
              "target": "aside",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <aside
            className="slideshow-inset js_slideshow c0"
            contentEditable={false}
            data-aspect="Wide"
            data-current-slide-index="0"
            data-slides="[{\\"type\\":\\"Image\\",\\"id\\":\\"id\\",\\"format\\":\\"jpg\\",\\"width\\":900,\\"height\\":600,\\"alignment\\":\\"Bleed\\",\\"lightbox\\":true,\\"caption\\":[],\\"attribution\\":[],\\"syndicationRights\\":false,\\"altText\\":null}]"
          >
            <slideshow__SlideShowContainer
              className="js_kinja-slideshow"
              wide={true}
            >
              <StyledComponent
                className="js_kinja-slideshow"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "c1",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "margin-bottom:20px;position:relative;overflow:hidden;background-color:",
                        [Function],
                        ";font-family:",
                        [Function],
                        ";",
                        "@media only screen and ",
                        "(max-width: 37.31em)",
                        "{",
                        "
		&.wiggle {
			",
                        ".c3",
                        ":first-child {
				",
                        ".c5",
                        ",
				",
                        ".c13",
                        " {
					animation: ",
                        Keyframes {
                          "id": "sc-keyframes-gxBbuN",
                          "inject": [Function],
                          "name": "gxBbuN",
                          "rules": Array [
                            "@-webkit-keyframes gxBbuN{50%{-webkit-transform:translate3d(-10%,0,0);-ms-transform:translate3d(-10%,0,0);transform:translate3d(-10%,0,0);}80%{-webkit-transform:translate3d(0%,0,0);-ms-transform:translate3d(0%,0,0);transform:translate3d(0%,0,0);}}",
                            "@keyframes gxBbuN{50%{-webkit-transform:translate3d(-10%,0,0);-ms-transform:translate3d(-10%,0,0);transform:translate3d(-10%,0,0);}80%{-webkit-transform:translate3d(0%,0,0);-ms-transform:translate3d(0%,0,0);transform:translate3d(0%,0,0);}}",
                          ],
                          "toString": [Function],
                        },
                        " 0.6s ease-in-out both;
				}
			}
		}
	",
                        "}",
                        " ",
                        [Function],
                        " ",
                        [Function],
                      ],
                    },
                    "displayName": "slideshow__SlideShowContainer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "c1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                wide={true}
              >
                <div
                  className="js_kinja-slideshow c1 c2"
                >
                  <slide__KinjaSlide
                    className="js_slide"
                  >
                    <StyledComponent
                      className="js_slide"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": true,
                            "lastClassName": "c4",
                            "rules": Array [
                              "transition-timing-function:cubic-bezier(0.25,0.1,0.25,1);width:100%;position:relative;flex:0 0 100%;@media only screen and (orientation:landscape){justify-content:flex-start;}",
                            ],
                          },
                          "displayName": "slide__KinjaSlide",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="js_slide c3 c4"
                      >
                        <slide__SlideContainer
                          wide={true}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c5",
                                  "isStatic": false,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "width:100%;padding-bottom:66.6666%;position:relative;",
                                    [Function],
                                  ],
                                },
                                "displayName": "slide__SlideContainer",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c5",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            wide={true}
                          >
                            <div
                              className="c5 c6"
                            >
                              <slide__SlideImageContainer>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "slide__SlideImageContainer-sc-7y2kxp-3",
                                        "isStatic": false,
                                        "lastClassName": "c7",
                                        "rules": Array [
                                          "align-items:center;box-sizing:border-box;position:absolute;left:0;top:0;right:0;bottom:0;display:flex;justify-content:center;overflow:hidden;background:",
                                          [Function],
                                          ";user-select:none;",
                                          "@media only screen and ",
                                          "(max-width: 49.94em)",
                                          "{",
                                          "
		background: ",
                                          [Function],
                                          ";
		pointer-events: none;
	",
                                          "}",
                                          " ",
                                          "@media only screen and ",
                                          "(min-width: 50em)",
                                          "{",
                                          "
		cursor: pointer;
		&:hover ",
                                          ".slide__SlideFullscreenIndicator-sc-7y2kxp-2",
                                          " {
			opacity: 1;
		}
	",
                                          "}",
                                        ],
                                      },
                                      "displayName": "slide__SlideImageContainer",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "slide__SlideImageContainer-sc-7y2kxp-3",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="c7"
                                  >
                                    <slide__SlideBlurBackground
                                      hidden={false}
                                      loaded={true}
                                      url="https://i.kinja-img.com/gawker-media/image/upload/id.jpg"
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "slide__SlideBlurBackground-sc-7y2kxp-8",
                                              "isStatic": false,
                                              "lastClassName": "c8",
                                              "rules": Array [
                                                "background-size:cover;background-position:center center;filter:blur(30px);position:absolute;width:120%;height:120%;opacity:0.6;",
                                                [Function],
                                                " ",
                                                [Function],
                                                " ",
                                                "@media only screen and ",
                                                "(max-width: 49.94em)",
                                                "{",
                                                "
		display: none;
	",
                                                "}",
                                              ],
                                            },
                                            "displayName": "slide__SlideBlurBackground",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "slide__SlideBlurBackground-sc-7y2kxp-8",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        hidden={false}
                                        loaded={true}
                                        url="https://i.kinja-img.com/gawker-media/image/upload/id.jpg"
                                      >
                                        <div
                                          className="c8"
                                          hidden={false}
                                        />
                                      </StyledComponent>
                                    </slide__SlideBlurBackground>
                                    <slide__SlideImage>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "slide__SlideImage-sc-7y2kxp-4",
                                              "isStatic": false,
                                              "lastClassName": "c9",
                                              "rules": Array [
                                                "align-items:center;box-sizing:border-box;position:absolute;left:0;top:0;right:0;bottom:0;display:flex;justify-content:center;overflow:hidden;user-select:none;width:100%;img{max-width:100%;max-height:100%;align-self:center;position:relative;user-select:none;object-fit:contain;}",
                                                [Function],
                                              ],
                                            },
                                            "displayName": "slide__SlideImage",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "slide__SlideImage-sc-7y2kxp-4",
                                            "target": "picture",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <picture
                                          className="c9"
                                        >
                                          <img
                                            data-chomp-id="id"
                                            data-format="jpg"
                                            src="https://i.kinja-img.com/gawker-media/image/upload/id.jpg"
                                          />
                                        </picture>
                                      </StyledComponent>
                                    </slide__SlideImage>
                                  </div>
                                </StyledComponent>
                              </slide__SlideImageContainer>
                              <in-editor__ListElement
                                className="editor-inline-toolbar inline-toolbar active"
                              >
                                <StyledComponent
                                  className="editor-inline-toolbar inline-toolbar active"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "in-editor__ListElement-sc-1f4lkah-2",
                                        "isStatic": false,
                                        "lastClassName": "c10",
                                        "rules": Array [
                                          "svg{color:",
                                          [Function],
                                          ";}",
                                        ],
                                      },
                                      "displayName": "in-editor__ListElement",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "in-editor__ListElement-sc-1f4lkah-2",
                                      "target": "ul",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <ul
                                    className="editor-inline-toolbar inline-toolbar active c10"
                                  >
                                    <li>
                                      <a
                                        className="js_crop"
                                        href="javascript:;"
                                        role="button"
                                        title="Crop image"
                                      >
                                        <CropIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c11",
                                                      "isStatic": true,
                                                      "lastClassName": "c12",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c11",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c11 c12"
                                                >
                                                  <Crop
                                                    aria-label="Crop icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="Crop icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M4.5.5c.28 0 .5.22.5.5v11.3L12.3 5H6a.5.5 0 1 1 0-1h6.5c.83 0 1.5.69 1.5 1.51V12a.5.5 0 0 1-1 0V5.71l-7.3 7.3H17a.5.5 0 1 1 0 1h-3V17a.5.5 0 0 1-1 0v-3H5.5A1.5 1.5 0 0 1 4 12.5V5H1a.5.5 0 1 1 0-1h3V1c0-.28.22-.5.5-.5z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </Crop>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </CropIcon>
                                      </a>
                                    </li>
                                    <li>
                                      <a
                                        className="js_remove-image"
                                        href="javascript:;"
                                        role="button"
                                        title="Delete image"
                                      >
                                        <TrashcanIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c11",
                                                      "isStatic": true,
                                                      "lastClassName": "c12",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c11",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c11 c12"
                                                >
                                                  <Trashcan
                                                    aria-label="Trashcan icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="Trashcan icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M6 8.5a.5.5 0 0 1 1 0v5a.5.5 0 1 1-1 0v-5zm5 0a.5.5 0 1 1 1 0v5a.5.5 0 1 1-1 0v-5zm-2.5 0a.5.5 0 0 1 1 0v5a.5.5 0 1 1-1 0v-5zM4 6v8.5c0 .83.67 1.5 1.5 1.5h7c.83 0 1.5-.68 1.5-1.5V6H4zm8-2.5c0-.83-.67-1.5-1.5-1.5h-3C6.68 2 6 2.67 6 3.5V5H5V3.5A2.5 2.5 0 0 1 7.5 1h3A2.5 2.5 0 0 1 13 3.5V5h3.5a.5.5 0 1 1 0 1H15v8.5a2.5 2.5 0 0 1-2.5 2.5h-7A2.5 2.5 0 0 1 3 14.5V6H1.5a.5.5 0 0 1 0-1H12V3.5z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </Trashcan>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </TrashcanIcon>
                                      </a>
                                    </li>
                                  </ul>
                                </StyledComponent>
                              </in-editor__ListElement>
                            </div>
                          </StyledComponent>
                        </slide__SlideContainer>
                        <slide__SlideCaption
                          className="js_caption"
                          contentEditable={true}
                          suppressContentEditableWarning={true}
                        >
                          <StyledComponent
                            className="js_caption"
                            contentEditable={true}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c13",
                                  "isStatic": false,
                                  "lastClassName": "c14",
                                  "rules": Array [
                                    "padding-top:",
                                    [Function],
                                    ";min-height:57px;",
                                  ],
                                },
                                "displayName": "slide__SlideCaption",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c13",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            suppressContentEditableWarning={true}
                          >
                            <div
                              className="js_caption c13 c14"
                              contentEditable={true}
                              suppressContentEditableWarning={true}
                            />
                          </StyledComponent>
                        </slide__SlideCaption>
                        <div
                          className="popup-attribution placeholder"
                          data-placeholder="Add image credit, source, and caption"
                        >
                          Add image credit, source, and caption
                        </div>
                      </div>
                    </StyledComponent>
                  </slide__KinjaSlide>
                  <slideshow__SlideshowNavigateLeft
                    className="button js_page-left"
                    icon={<ArrowLeftIcon />}
                    sort="circle"
                    weight="tertiary"
                  >
                    <StyledComponent
                      className="button js_page-left"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c15",
                            "isStatic": false,
                            "lastClassName": "c16",
                            "rules": Array [
                              "display:none;position:absolute;top:20px;margin-top:66.6666%;left:20px;",
                              [Function],
                              " ",
                              "@media only screen and ",
                              "(min-width: 50em)",
                              "{",
                              "
		display: inherit;
	",
                              "}",
                              " svg{color:",
                              [Function],
                              ";opacity:",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "slideshow__SlideshowNavigateLeft",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c15",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                      icon={<ArrowLeftIcon />}
                      sort="circle"
                      weight="tertiary"
                    >
                      <Button
                        className="button js_page-left c15 c16"
                        icon={<ArrowLeftIcon />}
                        sort="circle"
                        weight="tertiary"
                      >
                        <EnsureDefaultTheme>
                          <ThemeProvider
                            theme={[Function]}
                          >
                            <Button__ButtonWrapper
                              className="button js_page-left c15 c16"
                              sort="circle"
                              weight="tertiary"
                            >
                              <StyledComponent
                                className="button js_page-left c15 c16"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__ButtonWrapper-j48i5d-2",
                                      "isStatic": false,
                                      "lastClassName": "c17",
                                      "rules": Array [
                                        "width:",
                                        [Function],
                                        ";height:",
                                        [Function],
                                        ";padding:",
                                        [Function],
                                        ";border:transparent 1px solid;border-radius:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";font-size:",
                                        [Function],
                                        ";text-align:",
                                        [Function],
                                        ";line-height:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";transition:",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        ".c18",
                                        " > svg{margin-bottom:2px;",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}",
                                        ".c11",
                                        "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        ".c18",
                                        " > svg{",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}}",
                                        "@media only screen and ",
                                        "(max-width: 49.94em)",
                                        "{",
                                        "
		",
                                        [Function],
                                        "
	",
                                        "}",
                                      ],
                                    },
                                    "displayName": "Button__ButtonWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                sort="circle"
                                weight="tertiary"
                              >
                                <button
                                  className="button js_page-left c15 c16 c17"
                                >
                                  <Button__ButtonInner>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c18",
                                            "isStatic": false,
                                            "lastClassName": "c19",
                                            "rules": Array [
                                              "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                              [Function],
                                              " + span{margin-left:4px;}}",
                                              ".c11",
                                              "{+ span{margin-left:4px;}}",
                                            ],
                                          },
                                          "displayName": "Button__ButtonInner",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c18",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c18 c19"
                                      >
                                        <ArrowLeftIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c11",
                                                      "isStatic": true,
                                                      "lastClassName": "c12",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c11",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c11 c12"
                                                >
                                                  <ArrowLeft
                                                    aria-label="Arrow-left icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="Arrow-left icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M9.85 3.15c.2.2.2.5 0 .7L4.71 9H15.5a.5.5 0 1 1 0 1H4.7l5.15 5.15a.5.5 0 0 1-.7.7l-6-6h-.02a.5.5 0 0 1-.03-.05l.05.05A.5.5 0 0 1 3 9.5v-.01a.5.5 0 0 1 0-.06v.07a.5.5 0 0 1 .15-.35l6-6c.2-.2.5-.2.7 0z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ArrowLeft>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ArrowLeftIcon>
                                      </div>
                                    </StyledComponent>
                                  </Button__ButtonInner>
                                </button>
                              </StyledComponent>
                            </Button__ButtonWrapper>
                          </ThemeProvider>
                        </EnsureDefaultTheme>
                      </Button>
                    </StyledComponent>
                  </slideshow__SlideshowNavigateLeft>
                  <slideshow__SlideshowNavigateRight
                    className="button js_page-right"
                    icon={<ArrowRightIcon />}
                    sort="circle"
                    weight="tertiary"
                  >
                    <StyledComponent
                      className="button js_page-right"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c20",
                            "isStatic": false,
                            "lastClassName": "c21",
                            "rules": Array [
                              "display:none;position:absolute;top:20px;margin-top:66.6666%;right:20px;",
                              "@media only screen and ",
                              "(min-width: 50em)",
                              "{",
                              "
		display: inherit;
	",
                              "}",
                              " svg{color:",
                              [Function],
                              ";opacity:",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "slideshow__SlideshowNavigateRight",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c20",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                      icon={<ArrowRightIcon />}
                      sort="circle"
                      weight="tertiary"
                    >
                      <Button
                        className="button js_page-right c20 c21"
                        icon={<ArrowRightIcon />}
                        sort="circle"
                        weight="tertiary"
                      >
                        <EnsureDefaultTheme>
                          <ThemeProvider
                            theme={[Function]}
                          >
                            <Button__ButtonWrapper
                              className="button js_page-right c20 c21"
                              sort="circle"
                              weight="tertiary"
                            >
                              <StyledComponent
                                className="button js_page-right c20 c21"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__ButtonWrapper-j48i5d-2",
                                      "isStatic": false,
                                      "lastClassName": "c17",
                                      "rules": Array [
                                        "width:",
                                        [Function],
                                        ";height:",
                                        [Function],
                                        ";padding:",
                                        [Function],
                                        ";border:transparent 1px solid;border-radius:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";font-size:",
                                        [Function],
                                        ";text-align:",
                                        [Function],
                                        ";line-height:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";transition:",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        [Function],
                                        ";",
                                        ".c18",
                                        " > svg{margin-bottom:2px;",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}",
                                        ".c11",
                                        "{margin-bottom:2px;}&:hover,&:active,&:focus{color:",
                                        [Function],
                                        ";border-color:",
                                        [Function],
                                        ";background-color:",
                                        [Function],
                                        ";",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        ".c18",
                                        " > svg{",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        "}}",
                                        "@media only screen and ",
                                        "(max-width: 49.94em)",
                                        "{",
                                        "
		",
                                        [Function],
                                        "
	",
                                        "}",
                                      ],
                                    },
                                    "displayName": "Button__ButtonWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__ButtonWrapper-j48i5d-2",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                sort="circle"
                                weight="tertiary"
                              >
                                <button
                                  className="button js_page-right c20 c21 c17"
                                >
                                  <Button__ButtonInner>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c18",
                                            "isStatic": false,
                                            "lastClassName": "c19",
                                            "rules": Array [
                                              "align-items:center;display:flex;justify-content:center;width:100%;white-space:nowrap;pointer-events:none;svg{",
                                              [Function],
                                              " + span{margin-left:4px;}}",
                                              ".c11",
                                              "{+ span{margin-left:4px;}}",
                                            ],
                                          },
                                          "displayName": "Button__ButtonInner",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c18",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c18 c19"
                                      >
                                        <ArrowRightIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c11",
                                                      "isStatic": true,
                                                      "lastClassName": "c12",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c11",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c11 c12"
                                                >
                                                  <ArrowRight
                                                    aria-label="Arrow-right icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="Arrow-right icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M8.15 3.15a.5.5 0 0 0 0 .7L13.29 9H2.5a.5.5 0 1 0 0 1h10.8l-5.15 5.15a.5.5 0 0 0 .7.7l6-6h.02a.5.5 0 0 0 .03-.05l-.05.05A.5.5 0 0 0 15 9.5v-.01a.5.5 0 0 0 0-.06v.07a.5.5 0 0 0-.15-.35l-6-6a.5.5 0 0 0-.7 0z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ArrowRight>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ArrowRightIcon>
                                      </div>
                                    </StyledComponent>
                                  </Button__ButtonInner>
                                </button>
                              </StyledComponent>
                            </Button__ButtonWrapper>
                          </ThemeProvider>
                        </EnsureDefaultTheme>
                      </Button>
                    </StyledComponent>
                  </slideshow__SlideshowNavigateRight>
                  <slideshow__SlideshowIndex>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "slideshow__SlideshowIndex-sc-81stkc-6",
                            "isStatic": false,
                            "lastClassName": "c22",
                            "rules": Array [
                              "display:flex;justify-content:space-between;padding:0 18px 15px;max-width:",
                              [Function],
                              ";margin:0 auto;font-size:16px;line-height:21px;font-weight:normal;color:",
                              [Function],
                              ";",
                              "@media only screen and ",
                              "(min-width: 50em)",
                              "{",
                              "
		padding: 0 0 15px;
		margin: 0 82px;
	",
                              "}",
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "slideshow__SlideshowIndex",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "slideshow__SlideshowIndex-sc-81stkc-6",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c22"
                      >
                        <slideshow__SlideshowIndexPaging>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "slideshow__SlideshowIndexPaging-sc-81stkc-7",
                                  "isStatic": true,
                                  "lastClassName": "c23",
                                  "rules": Array [
                                    "display:flex;align-items:center;svg{margin-right:4px;}",
                                  ],
                                },
                                "displayName": "slideshow__SlideshowIndexPaging",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "slideshow__SlideshowIndexPaging-sc-81stkc-7",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c23"
                            >
                              <SlideshowIcon>
                                <Icon19>
                                  <icon19__IconWrapper>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c11",
                                            "isStatic": true,
                                            "lastClassName": "c12",
                                            "rules": Array [
                                              "fill:currentColor;display:flex;",
                                            ],
                                          },
                                          "displayName": "icon19__IconWrapper",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c11",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c11 c12"
                                      >
                                        <Slideshow
                                          aria-label="Slideshow icon"
                                          height="18"
                                          viewBox="0 0 18 18"
                                          width="18"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <svg
                                            aria-label="Slideshow icon"
                                            height="18"
                                            viewBox="0 0 18 18"
                                            width="18"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M12.5 4A2.5 2.5 0 0 1 15 6.5v8a2.5 2.5 0 0 1-2.5 2.5h-10A2.5 2.5 0 0 1 0 14.5v-8A2.5 2.5 0 0 1 2.5 4h10zM4.7 9.92l-3.4 5.41a.5.5 0 0 1-.03.04c.27.38.72.63 1.23.63h9.98c.35 0 .68-.12.93-.32l-3.36-3.44-1.83 1.86a.5.5 0 0 1-.77-.07L4.71 9.92zM12.49 5H2.51A1.5 1.5 0 0 0 1 6.5v7.44l3.27-5.2a.5.5 0 0 1 .78-.1l.06.08 2.84 4.24 1.76-1.79c.2-.2.52-.2.71 0l3.55 3.64c.02-.1.03-.21.03-.32V6.51C14 5.68 13.32 5 12.5 5zm3-4A2.5 2.5 0 0 1 18 3.5v8c0 1.27-1.01 2.5-2 2.5v-1c.39 0 1-.75 1-1.5v-8c0-.82-.68-1.5-1.5-1.5h-10C4.66 2 4 2.48 4 3H3c0-1.14 1.15-2 2.5-2zM10 6a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm0 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"
                                              fillRule="evenodd"
                                            />
                                          </svg>
                                        </Slideshow>
                                      </span>
                                    </StyledComponent>
                                  </icon19__IconWrapper>
                                </Icon19>
                              </SlideshowIcon>
                               
                              1
                               / 
                              1
                            </div>
                          </StyledComponent>
                        </slideshow__SlideshowIndexPaging>
                      </div>
                    </StyledComponent>
                  </slideshow__SlideshowIndex>
                </div>
              </StyledComponent>
            </slideshow__SlideShowContainer>
          </aside>
        </StyledComponent>
      </in-editor__SlideshowInset>
    </ThemeProvider>
  </EnsureDefaultTheme>
</SlideshowInEditor>
`;
