// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FolderBrowser/> should render properly 1`] = `
.c7 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  max-width: 400px;
}

.c1 {
  position: relative;
  bottom: -2px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-right: 10px;
}

.c6 {
  position: relative;
  top: -7px;
  left: 2px;
}

.c2 {
  position: relative;
  top: -2px;
  width: 22px;
  height: 22px;
  padding: 2px;
  margin-right: 4px;
}

.c2 .c3 {
  display: none;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 18px;
  height: 18px;
}

.c4 .SVGInline-svg {
  display: none;
}

.c4 svg {
  max-width: 100%;
  width: inherit;
  height: inherit;
}

@media only screen and (min-width:37.37em) {
  .c2 .c5 {
    display: none;
  }

  .c2 .c3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    height: 100%;
  }
}

<SelectedItems
  onDeselect={[MockFunction]}
  placeholder="What is your soundcloud rapper name?"
  selectedItems={
    Array [
      Object {
        "hasChildren": true,
        "icon": <BlogAvatar
          name="gizmodo"
          size={18}
        />,
        "id": "1",
        "isLastSelection": true,
        "name": "Gizmodo",
        "selectedChildren": Array [],
      },
      Object {
        "hasChildren": true,
        "icon": <BlogAvatar
          name="splinter"
          size={18}
        />,
        "id": "2",
        "isLastSelection": true,
        "name": "Splinter",
        "selectedChildren": Array [],
      },
      Object {
        "icon": <BlogAvatar
          name="thetakeout"
          size={18}
        />,
        "id": "3",
        "isLastSelection": true,
        "name": "The Takeout",
        "selectedChildren": Array [],
      },
    ]
  }
>
  <selected-items__Wrapper>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "selected-items__Wrapper-sc-1v5af53-0",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "display:flex;flex-wrap:wrap;max-width:400px;",
            ],
          },
          "displayName": "selected-items__Wrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "selected-items__Wrapper-sc-1v5af53-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <selected-items__ItemWrapper
          key="Gizmodo"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "selected-items__ItemWrapper-sc-1v5af53-1",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "position:relative;bottom:-2px;display:flex;align-items:center;margin-right:10px;",
                  ],
                },
                "displayName": "selected-items__ItemWrapper",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "selected-items__ItemWrapper-sc-1v5af53-1",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c1"
            >
              <selected-items__IconWrapper
                onClick={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "selected-items__IconWrapper-sc-1v5af53-5",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "position:relative;top:-2px;width:22px;height:22px;padding:2px;margin-right:4px;",
                          ".c3",
                          "{display:none;}",
                          "@media only screen and ",
                          "(min-width: 37.37em)",
                          "{",
                          "
		",
                          ".c5",
                          " {
			display: none;
		}

		",
                          ".c3",
                          " {
			display: flex;
			align-items: center;
			justify-content: center;
			height: 100%;
		}
	",
                          "}",
                        ],
                      },
                      "displayName": "selected-items__IconWrapper",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "selected-items__IconWrapper-sc-1v5af53-5",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                  onMouseLeave={[Function]}
                  onMouseOver={[Function]}
                >
                  <div
                    className="c2"
                    onClick={[Function]}
                    onMouseLeave={[Function]}
                    onMouseOver={[Function]}
                  >
                    <selected-items__IconOnDesktop>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "c3",
                              "isStatic": true,
                              "lastClassName": "ftkUEb",
                              "rules": Array [],
                            },
                            "displayName": "selected-items__IconOnDesktop",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "c3",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3 "
                        >
                          <BlogAvatar
                            name="gizmodo"
                            size={18}
                          >
                            <blog-avatar__BlogAvatarWrapper
                              pixelSize={18}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "blog-avatar__BlogAvatarWrapper-ynl58c-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "display:flex;width:",
                                        [Function],
                                        ";height:",
                                        [Function],
                                        ";",
                                        [Function],
                                        " ",
                                        [Function],
                                        " .SVGInline-svg{display:none;}svg{max-width:100%;width:inherit;height:inherit;",
                                        [Function],
                                        "}",
                                      ],
                                    },
                                    "displayName": "blog-avatar__BlogAvatarWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "blog-avatar__BlogAvatarWrapper-ynl58c-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                pixelSize={18}
                              >
                                <span
                                  className="c4"
                                >
                                  <Gizmodo
                                    aria-label="Gizmodo avatar"
                                    height="64"
                                    viewBox="0 0 64 64"
                                    width="64"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <svg
                                      aria-label="Gizmodo avatar"
                                      height="64"
                                      viewBox="0 0 64 64"
                                      width="64"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <g
                                        fill="none"
                                        fillRule="evenodd"
                                      >
                                        <path
                                          d="M0 0h64v64H0z"
                                          fill="#18AFED"
                                        />
                                        <path
                                          d="M16.67 46.94A22.04 22.04 0 0 1 11 32.43C11 16.09 24.58 10 33.15 10c8.41 0 14.6 4.13 14.85 4.3a4.22 4.22 0 0 1-1.48 7.58 4.1 4.1 0 0 1-3.1-.61c-.11-.07-4.5-2.9-10.27-2.9-5.37 0-12.77 3.54-12.77 14.06 0 5.98 4.45 13.04 12.6 13.04 4.6 0 7.83-1.23 9.7-2.42v-6.22h-6.36a4.16 4.16 0 0 1-4.13-4.18 4.16 4.16 0 0 1 4.13-4.19h10.5A4.2 4.2 0 0 1 51 32.64V45.1c0 1.13-.5 2.21-1.3 3-2.79 2.73-8.87 5.9-16.88 5.9a21.4 21.4 0 0 1-16.16-7.06z"
                                          fill="#FFF"
                                        />
                                      </g>
                                    </svg>
                                  </Gizmodo>
                                </span>
                              </StyledComponent>
                            </blog-avatar__BlogAvatarWrapper>
                          </BlogAvatar>
                        </div>
                      </StyledComponent>
                    </selected-items__IconOnDesktop>
                    <selected-items__IconOnMobile>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "c5",
                              "isStatic": true,
                              "lastClassName": "c6",
                              "rules": Array [
                                "position:relative;top:-7px;left:2px;",
                              ],
                            },
                            "displayName": "selected-items__IconOnMobile",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "c5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c5 c6"
                        >
                          <CloseIcon>
                            <Icon19>
                              <icon19__IconWrapper>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "icon19__IconWrapper-iyvn34-0",
                                        "isStatic": true,
                                        "lastClassName": "c7",
                                        "rules": Array [
                                          "fill:currentColor;display:flex;",
                                        ],
                                      },
                                      "displayName": "icon19__IconWrapper",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c7"
                                  >
                                    <Close
                                      aria-label="Close icon"
                                      height="18"
                                      viewBox="0 0 18 18"
                                      width="18"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-label="Close icon"
                                        height="18"
                                        viewBox="0 0 18 18"
                                        width="18"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M15.25 2.13a.44.44 0 1 1 .62.62L9.62 9l6.25 6.25a.44.44 0 1 1-.62.62L9 9.62l-6.25 6.25a.44.44 0 0 1-.55.06l-.07-.06a.44.44 0 0 1 0-.62L8.38 9 2.13 2.75a.44.44 0 0 1 .62-.62L9 8.38z"
                                          fillRule="evenodd"
                                        />
                                      </svg>
                                    </Close>
                                  </span>
                                </StyledComponent>
                              </icon19__IconWrapper>
                            </Icon19>
                          </CloseIcon>
                        </div>
                      </StyledComponent>
                    </selected-items__IconOnMobile>
                  </div>
                </StyledComponent>
              </selected-items__IconWrapper>
              Gizmodo
            </span>
          </StyledComponent>
        </selected-items__ItemWrapper>
        <selected-items__ItemWrapper
          key="Splinter"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "selected-items__ItemWrapper-sc-1v5af53-1",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "position:relative;bottom:-2px;display:flex;align-items:center;margin-right:10px;",
                  ],
                },
                "displayName": "selected-items__ItemWrapper",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "selected-items__ItemWrapper-sc-1v5af53-1",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c1"
            >
              <selected-items__IconWrapper
                onClick={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "selected-items__IconWrapper-sc-1v5af53-5",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "position:relative;top:-2px;width:22px;height:22px;padding:2px;margin-right:4px;",
                          ".c3",
                          "{display:none;}",
                          "@media only screen and ",
                          "(min-width: 37.37em)",
                          "{",
                          "
		",
                          ".c5",
                          " {
			display: none;
		}

		",
                          ".c3",
                          " {
			display: flex;
			align-items: center;
			justify-content: center;
			height: 100%;
		}
	",
                          "}",
                        ],
                      },
                      "displayName": "selected-items__IconWrapper",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "selected-items__IconWrapper-sc-1v5af53-5",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                  onMouseLeave={[Function]}
                  onMouseOver={[Function]}
                >
                  <div
                    className="c2"
                    onClick={[Function]}
                    onMouseLeave={[Function]}
                    onMouseOver={[Function]}
                  >
                    <selected-items__IconOnDesktop>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "c3",
                              "isStatic": true,
                              "lastClassName": "ftkUEb",
                              "rules": Array [],
                            },
                            "displayName": "selected-items__IconOnDesktop",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "c3",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3 "
                        >
                          <BlogAvatar
                            name="splinter"
                            size={18}
                          >
                            <blog-avatar__BlogAvatarWrapper
                              pixelSize={18}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "blog-avatar__BlogAvatarWrapper-ynl58c-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "display:flex;width:",
                                        [Function],
                                        ";height:",
                                        [Function],
                                        ";",
                                        [Function],
                                        " ",
                                        [Function],
                                        " .SVGInline-svg{display:none;}svg{max-width:100%;width:inherit;height:inherit;",
                                        [Function],
                                        "}",
                                      ],
                                    },
                                    "displayName": "blog-avatar__BlogAvatarWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "blog-avatar__BlogAvatarWrapper-ynl58c-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                pixelSize={18}
                              >
                                <span
                                  className="c4"
                                >
                                  <Splinter
                                    aria-label="Splinter avatar"
                                    height="64"
                                    viewBox="0 0 64 64"
                                    width="64"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <svg
                                      aria-label="Splinter avatar"
                                      height="64"
                                      viewBox="0 0 64 64"
                                      width="64"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <g
                                        fill="none"
                                        fillRule="evenodd"
                                      >
                                        <path
                                          d="M0 0h64v64H0z"
                                          fill="#F85637"
                                        />
                                        <path
                                          d="M18.6 49.4c-.48-.48-.66-1.02-.24-1.8l2.75-4.83c.47-.78 1.43-.78 2.03-.36 1.67 1.14 4.71 3.29 8.48 3.29 2.38 0 4.12-1.5 4.12-3.59 0-2.5-2.21-4.12-6.16-6.03C23.8 33.28 18 30.05 18 22.88 18 16.97 22.6 11 31.8 11c6.2 0 10.98 3.17 12.78 4.48.71.42.6 1.5.35 1.91l-3.05 4.6c-.41.66-1.43 1.13-2.62.41-1.38-.95-4.9-3.22-8.06-3.22-2.5 0-3.64 1.55-3.64 3.29 0 1.97 2.33 3.52 6.51 5.55 5.25 2.57 12.06 5.5 12.06 13.62 0 6.15-5.32 12.36-14.1 12.36-7.76 0-12.06-3.23-13.43-4.6"
                                          fill="#FFF"
                                        />
                                      </g>
                                    </svg>
                                  </Splinter>
                                </span>
                              </StyledComponent>
                            </blog-avatar__BlogAvatarWrapper>
                          </BlogAvatar>
                        </div>
                      </StyledComponent>
                    </selected-items__IconOnDesktop>
                    <selected-items__IconOnMobile>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "c5",
                              "isStatic": true,
                              "lastClassName": "c6",
                              "rules": Array [
                                "position:relative;top:-7px;left:2px;",
                              ],
                            },
                            "displayName": "selected-items__IconOnMobile",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "c5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c5 c6"
                        >
                          <CloseIcon>
                            <Icon19>
                              <icon19__IconWrapper>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "icon19__IconWrapper-iyvn34-0",
                                        "isStatic": true,
                                        "lastClassName": "c7",
                                        "rules": Array [
                                          "fill:currentColor;display:flex;",
                                        ],
                                      },
                                      "displayName": "icon19__IconWrapper",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c7"
                                  >
                                    <Close
                                      aria-label="Close icon"
                                      height="18"
                                      viewBox="0 0 18 18"
                                      width="18"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-label="Close icon"
                                        height="18"
                                        viewBox="0 0 18 18"
                                        width="18"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M15.25 2.13a.44.44 0 1 1 .62.62L9.62 9l6.25 6.25a.44.44 0 1 1-.62.62L9 9.62l-6.25 6.25a.44.44 0 0 1-.55.06l-.07-.06a.44.44 0 0 1 0-.62L8.38 9 2.13 2.75a.44.44 0 0 1 .62-.62L9 8.38z"
                                          fillRule="evenodd"
                                        />
                                      </svg>
                                    </Close>
                                  </span>
                                </StyledComponent>
                              </icon19__IconWrapper>
                            </Icon19>
                          </CloseIcon>
                        </div>
                      </StyledComponent>
                    </selected-items__IconOnMobile>
                  </div>
                </StyledComponent>
              </selected-items__IconWrapper>
              Splinter
            </span>
          </StyledComponent>
        </selected-items__ItemWrapper>
        <selected-items__ItemWrapper
          key="The Takeout"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "selected-items__ItemWrapper-sc-1v5af53-1",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "position:relative;bottom:-2px;display:flex;align-items:center;margin-right:10px;",
                  ],
                },
                "displayName": "selected-items__ItemWrapper",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "selected-items__ItemWrapper-sc-1v5af53-1",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c1"
            >
              <selected-items__IconWrapper
                onClick={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "selected-items__IconWrapper-sc-1v5af53-5",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "position:relative;top:-2px;width:22px;height:22px;padding:2px;margin-right:4px;",
                          ".c3",
                          "{display:none;}",
                          "@media only screen and ",
                          "(min-width: 37.37em)",
                          "{",
                          "
		",
                          ".c5",
                          " {
			display: none;
		}

		",
                          ".c3",
                          " {
			display: flex;
			align-items: center;
			justify-content: center;
			height: 100%;
		}
	",
                          "}",
                        ],
                      },
                      "displayName": "selected-items__IconWrapper",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "selected-items__IconWrapper-sc-1v5af53-5",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                  onMouseLeave={[Function]}
                  onMouseOver={[Function]}
                >
                  <div
                    className="c2"
                    onClick={[Function]}
                    onMouseLeave={[Function]}
                    onMouseOver={[Function]}
                  >
                    <selected-items__IconOnDesktop>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "c3",
                              "isStatic": true,
                              "lastClassName": "ftkUEb",
                              "rules": Array [],
                            },
                            "displayName": "selected-items__IconOnDesktop",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "c3",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3 "
                        >
                          <BlogAvatar
                            name="thetakeout"
                            size={18}
                          >
                            <blog-avatar__BlogAvatarWrapper
                              pixelSize={18}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "blog-avatar__BlogAvatarWrapper-ynl58c-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "display:flex;width:",
                                        [Function],
                                        ";height:",
                                        [Function],
                                        ";",
                                        [Function],
                                        " ",
                                        [Function],
                                        " .SVGInline-svg{display:none;}svg{max-width:100%;width:inherit;height:inherit;",
                                        [Function],
                                        "}",
                                      ],
                                    },
                                    "displayName": "blog-avatar__BlogAvatarWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "blog-avatar__BlogAvatarWrapper-ynl58c-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                pixelSize={18}
                              >
                                <span
                                  className="c4"
                                >
                                  <TheTakeout
                                    aria-label="TheTakeout avatar"
                                    height="64"
                                    viewBox="0 0 64 64"
                                    width="64"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <svg
                                      aria-label="TheTakeout avatar"
                                      height="64"
                                      viewBox="0 0 64 64"
                                      width="64"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <g
                                        fill="none"
                                        fillRule="evenodd"
                                      >
                                        <path
                                          d="M0 64h64V0H0"
                                          fill="#E5371A"
                                        />
                                        <g
                                          fillRule="nonzero"
                                          transform="translate(18 8)"
                                        >
                                          <path
                                            d="M27.27 9.1V2.72c0-.55-.3-.91-.9-.91h-1.82v5.45c-.03.43-.33.8-.91.91h-7.28v39.1c.1.71-.2 1.01-.9.9H10.9v.91c0 .6.36.91.9.91h6.37c.72 0 1.03-.3.91-.9V10h7.27c.6-.23.9-.6.91-.9zM2.73 8.17v.91c0 .53.37.91.9.91h4.55V8.18H2.73z"
                                            fill="#174066"
                                          />
                                          <path
                                            d="M23.64 0H.9C.37 0 0 .36 0 .9v6.37c0 .32.37.68.9.91h7.28v39.1c-.08.6.29.9.91.9h6.36c.69 0 1-.3.91-.9V8.17h7.28c.6-.23.9-.59.9-.9V.9c0-.55-.3-.91-.9-.91"
                                            fill="#F9DB5D"
                                          />
                                          <path
                                            d="M10 46.36c.1 0 0-.12 0 0V10c0 .13.1 0 0 0 .35 0 .45.13.9 0v36.36c-.45-.12-.55 0-.9 0m-7.27-40c.1 0 0-.12 0 0V2.73c0 .12.1 0 0 0 .35 0 .45.12.9 0v3.63c-.45-.11-.55 0-.9 0"
                                            fill="#FFF"
                                          />
                                        </g>
                                      </g>
                                    </svg>
                                  </TheTakeout>
                                </span>
                              </StyledComponent>
                            </blog-avatar__BlogAvatarWrapper>
                          </BlogAvatar>
                        </div>
                      </StyledComponent>
                    </selected-items__IconOnDesktop>
                    <selected-items__IconOnMobile>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "c5",
                              "isStatic": true,
                              "lastClassName": "c6",
                              "rules": Array [
                                "position:relative;top:-7px;left:2px;",
                              ],
                            },
                            "displayName": "selected-items__IconOnMobile",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "c5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c5 c6"
                        >
                          <CloseIcon>
                            <Icon19>
                              <icon19__IconWrapper>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "icon19__IconWrapper-iyvn34-0",
                                        "isStatic": true,
                                        "lastClassName": "c7",
                                        "rules": Array [
                                          "fill:currentColor;display:flex;",
                                        ],
                                      },
                                      "displayName": "icon19__IconWrapper",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <span
                                    className="c7"
                                  >
                                    <Close
                                      aria-label="Close icon"
                                      height="18"
                                      viewBox="0 0 18 18"
                                      width="18"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-label="Close icon"
                                        height="18"
                                        viewBox="0 0 18 18"
                                        width="18"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M15.25 2.13a.44.44 0 1 1 .62.62L9.62 9l6.25 6.25a.44.44 0 1 1-.62.62L9 9.62l-6.25 6.25a.44.44 0 0 1-.55.06l-.07-.06a.44.44 0 0 1 0-.62L8.38 9 2.13 2.75a.44.44 0 0 1 .62-.62L9 8.38z"
                                          fillRule="evenodd"
                                        />
                                      </svg>
                                    </Close>
                                  </span>
                                </StyledComponent>
                              </icon19__IconWrapper>
                            </Icon19>
                          </CloseIcon>
                        </div>
                      </StyledComponent>
                    </selected-items__IconOnMobile>
                  </div>
                </StyledComponent>
              </selected-items__IconWrapper>
              The Takeout
            </span>
          </StyledComponent>
        </selected-items__ItemWrapper>
      </div>
    </StyledComponent>
  </selected-items__Wrapper>
</SelectedItems>
`;
