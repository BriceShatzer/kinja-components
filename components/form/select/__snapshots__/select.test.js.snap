// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Select /> Normal Predictive should reset text field when it's open and predictive 1`] = `
.c12 {
  background: white;
  border: 1px solid #e5e5e5;
  width: 100%;
  overflow-y: scroll;
  z-index: 501;
  position: relative;
  margin: 0;
  max-height: 400px;
}

.c13 {
  padding: 5px 10px;
  color: #222;
  cursor: pointer;
  outline: none;
  background: #e5e5e5;
}

.c13:hover {
  background: #e5e5e5;
}

.c14 {
  padding: 5px 10px;
  color: #222;
  cursor: pointer;
  outline: none;
}

.c14:hover {
  background: #e5e5e5;
}

.c10 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c15 .c4 {
  border-color: #ddd;
}

.c15 .c4 .c6 {
  color: #ddd;
}

.c8 {
  border: none;
  color: #222;
  line-height: 34px;
  width: 100%;
  font-size: 14px;
}

.c8:focus {
  outline: none;
}

.c11 {
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  border: 1px solid #CCC;
  border-top: none;
  color: #CCC;
  cursor: default;
  outline: none;
  overflow-y: scroll;
  position: absolute;
  width: 100%;
  min-width: 100px;
  height: auto;
  top: 36px;
  left: 0;
  right: 0;
  z-index: 501;
  overflow: hidden;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  width: 12px;
}

.c9 svg {
  color: #0A7BC2;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={true}
  simplified={false}
  value="en"
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={true}
    name="test"
    onChange={[MockFunction]}
    predictive={true}
    simplified={false}
    toggle={[Function]}
    value="en"
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={true}
      name="test"
      onChange={[MockFunction]}
      predictive={true}
      simplified={false}
      toggle={[Function]}
      value="en"
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={true}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={true}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={true}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={true}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={true}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      >
                                        <select__FilterInput
                                          onChange={[Function]}
                                          type="text"
                                          value=""
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "select__FilterInput-sc-17mlv1t-5",
                                                  "isStatic": true,
                                                  "lastClassName": "c8",
                                                  "rules": Array [
                                                    "border:none;color:#222;line-height:34px;width:100%;font-size:14px;&:focus{outline:none;}",
                                                  ],
                                                },
                                                "displayName": "select__FilterInput",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "select__FilterInput-sc-17mlv1t-5",
                                                "target": "input",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={[Function]}
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="c8"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </StyledComponent>
                                        </select__FilterInput>
                                      </div>
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={true}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c9",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={true}
                                    >
                                      <div
                                        className="c9"
                                        disabled={false}
                                      >
                                        <ChevronUpIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c10",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c10"
                                                >
                                                  <ChevronUp
                                                    aria-label="ChevronUp icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronUp icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 11.84a.5.5 0 0 1-.74-.68l5.5-6a.5.5 0 0 1 .74 0l5.5 6a.5.5 0 1 1-.74.68L9 6.24l-5.13 5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronUp>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronUpIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                            <select__SelectOptionsList
                              hasList={true}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                      "isStatic": false,
                                      "lastClassName": "c11",
                                      "rules": Array [
                                        "background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-bottom-left-radius:4px;border-bottom-right-radius:4px;border:1px solid ",
                                        [Function],
                                        ";border-top:none;color:",
                                        [Function],
                                        ";cursor:default;outline:none;overflow-y:scroll;position:absolute;width:100%;min-width:100px;height:auto;top:",
                                        "36",
                                        "px;left:0;right:0;z-index:501;",
                                        [Function],
                                        " ",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "select__SelectOptionsList",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                hasList={true}
                              >
                                <div
                                  className="c11"
                                >
                                  <ListWithSelection
                                    allowNavigation={true}
                                    onSelect={[Function]}
                                  >
                                    <list-with-selection__List>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "list-with-selection__List-otg3vd-0",
                                              "isStatic": false,
                                              "lastClassName": "c12",
                                              "rules": Array [
                                                "background:white;border:1px solid #e5e5e5;width:100%;overflow-y:scroll;z-index:501;position:relative;margin:0;",
                                                [Function],
                                              ],
                                            },
                                            "displayName": "list-with-selection__List",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "list-with-selection__List-otg3vd-0",
                                            "target": "ul",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={[Function]}
                                      >
                                        <ul
                                          className="c12"
                                        >
                                          <list-with-selection__ListItem
                                            aria-selected={true}
                                            isSelected={true}
                                            key=".$.$en"
                                            onClick={[Function]}
                                            role="option"
                                            tabIndex="-1"
                                          >
                                            <StyledComponent
                                              aria-selected={true}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "list-with-selection__ListItem-otg3vd-1",
                                                    "isStatic": false,
                                                    "lastClassName": "c14",
                                                    "rules": Array [
                                                      "padding:5px 10px;color:#222;cursor:pointer;outline:none;&:hover{background:#e5e5e5;}",
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "list-with-selection__ListItem",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "list-with-selection__ListItem-otg3vd-1",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={[Function]}
                                              isSelected={true}
                                              onClick={[Function]}
                                              role="option"
                                              tabIndex="-1"
                                            >
                                              <li
                                                aria-selected={true}
                                                className="c13"
                                                onClick={[Function]}
                                                role="option"
                                                tabIndex="-1"
                                              >
                                                <Option
                                                  key=".$en"
                                                  stringRepresentation="English"
                                                  value="en"
                                                >
                                                  <EnsureDefaultTheme>
                                                    <ThemeProvider
                                                      theme={[Function]}
                                                    >
                                                      <span>
                                                        English
                                                      </span>
                                                    </ThemeProvider>
                                                  </EnsureDefaultTheme>
                                                </Option>
                                              </li>
                                            </StyledComponent>
                                          </list-with-selection__ListItem>
                                          <list-with-selection__ListItem
                                            aria-selected={false}
                                            isSelected={false}
                                            key=".$.$es"
                                            onClick={[Function]}
                                            role="option"
                                            tabIndex="-1"
                                          >
                                            <StyledComponent
                                              aria-selected={false}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "list-with-selection__ListItem-otg3vd-1",
                                                    "isStatic": false,
                                                    "lastClassName": "c14",
                                                    "rules": Array [
                                                      "padding:5px 10px;color:#222;cursor:pointer;outline:none;&:hover{background:#e5e5e5;}",
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "list-with-selection__ListItem",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "list-with-selection__ListItem-otg3vd-1",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={[Function]}
                                              isSelected={false}
                                              onClick={[Function]}
                                              role="option"
                                              tabIndex="-1"
                                            >
                                              <li
                                                aria-selected={false}
                                                className="c14"
                                                onClick={[Function]}
                                                role="option"
                                                tabIndex="-1"
                                              >
                                                <Option
                                                  key=".$es"
                                                  stringRepresentation="Spanish"
                                                  value="es"
                                                >
                                                  <EnsureDefaultTheme>
                                                    <ThemeProvider
                                                      theme={[Function]}
                                                    >
                                                      <span>
                                                        Spanish
                                                      </span>
                                                    </ThemeProvider>
                                                  </EnsureDefaultTheme>
                                                </Option>
                                              </li>
                                            </StyledComponent>
                                          </list-with-selection__ListItem>
                                          <list-with-selection__ListItem
                                            aria-selected={false}
                                            isSelected={false}
                                            key=".$.$hu"
                                            onClick={[Function]}
                                            role="option"
                                            tabIndex="-1"
                                          >
                                            <StyledComponent
                                              aria-selected={false}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "list-with-selection__ListItem-otg3vd-1",
                                                    "isStatic": false,
                                                    "lastClassName": "c14",
                                                    "rules": Array [
                                                      "padding:5px 10px;color:#222;cursor:pointer;outline:none;&:hover{background:#e5e5e5;}",
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "list-with-selection__ListItem",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "list-with-selection__ListItem-otg3vd-1",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={[Function]}
                                              isSelected={false}
                                              onClick={[Function]}
                                              role="option"
                                              tabIndex="-1"
                                            >
                                              <li
                                                aria-selected={false}
                                                className="c14"
                                                onClick={[Function]}
                                                role="option"
                                                tabIndex="-1"
                                              >
                                                <Option
                                                  key=".$hu"
                                                  stringRepresentation="Hungarian"
                                                  value="hu"
                                                >
                                                  <EnsureDefaultTheme>
                                                    <ThemeProvider
                                                      theme={[Function]}
                                                    >
                                                      <span>
                                                        Hungarian
                                                      </span>
                                                    </ThemeProvider>
                                                  </EnsureDefaultTheme>
                                                </Option>
                                              </li>
                                            </StyledComponent>
                                          </list-with-selection__ListItem>
                                        </ul>
                                      </StyledComponent>
                                    </list-with-selection__List>
                                  </ListWithSelection>
                                </div>
                              </StyledComponent>
                            </select__SelectOptionsList>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal Predictive shouldn't filter when an emptyValue option is selected 1`] = `
.c12 {
  background: white;
  border: 1px solid #e5e5e5;
  width: 100%;
  overflow-y: scroll;
  z-index: 501;
  position: relative;
  margin: 0;
  max-height: 400px;
}

.c13 {
  padding: 5px 10px;
  color: #222;
  cursor: pointer;
  outline: none;
  background: #e5e5e5;
}

.c13:hover {
  background: #e5e5e5;
}

.c14 {
  padding: 5px 10px;
  color: #222;
  cursor: pointer;
  outline: none;
}

.c14:hover {
  background: #e5e5e5;
}

.c10 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c15 .c4 {
  border-color: #ddd;
}

.c15 .c4 .c6 {
  color: #ddd;
}

.c8 {
  border: none;
  color: #222;
  line-height: 34px;
  width: 100%;
  font-size: 14px;
}

.c8:focus {
  outline: none;
}

.c11 {
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  border: 1px solid #CCC;
  border-top: none;
  color: #CCC;
  cursor: default;
  outline: none;
  overflow-y: scroll;
  position: absolute;
  width: 100%;
  min-width: 100px;
  height: auto;
  top: 36px;
  left: 0;
  right: 0;
  z-index: 501;
  overflow: hidden;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  width: 12px;
}

.c9 svg {
  color: #0A7BC2;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={true}
  simplified={false}
  value="empty"
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={true}
    name="test"
    onChange={[MockFunction]}
    predictive={true}
    simplified={false}
    toggle={[Function]}
    value="empty"
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={true}
      name="test"
      onChange={[MockFunction]}
      predictive={true}
      simplified={false}
      toggle={[Function]}
      value="empty"
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={true}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={true}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={true}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={true}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={true}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      >
                                        <select__FilterInput
                                          onChange={[Function]}
                                          type="text"
                                          value=""
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "select__FilterInput-sc-17mlv1t-5",
                                                  "isStatic": true,
                                                  "lastClassName": "c8",
                                                  "rules": Array [
                                                    "border:none;color:#222;line-height:34px;width:100%;font-size:14px;&:focus{outline:none;}",
                                                  ],
                                                },
                                                "displayName": "select__FilterInput",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "select__FilterInput-sc-17mlv1t-5",
                                                "target": "input",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={[Function]}
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="c8"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </StyledComponent>
                                        </select__FilterInput>
                                      </div>
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={true}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c9",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={true}
                                    >
                                      <div
                                        className="c9"
                                        disabled={false}
                                      >
                                        <ChevronUpIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c10",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c10"
                                                >
                                                  <ChevronUp
                                                    aria-label="ChevronUp icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronUp icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 11.84a.5.5 0 0 1-.74-.68l5.5-6a.5.5 0 0 1 .74 0l5.5 6a.5.5 0 1 1-.74.68L9 6.24l-5.13 5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronUp>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronUpIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                            <select__SelectOptionsList
                              hasList={true}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                      "isStatic": false,
                                      "lastClassName": "c11",
                                      "rules": Array [
                                        "background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-bottom-left-radius:4px;border-bottom-right-radius:4px;border:1px solid ",
                                        [Function],
                                        ";border-top:none;color:",
                                        [Function],
                                        ";cursor:default;outline:none;overflow-y:scroll;position:absolute;width:100%;min-width:100px;height:auto;top:",
                                        "36",
                                        "px;left:0;right:0;z-index:501;",
                                        [Function],
                                        " ",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "select__SelectOptionsList",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                hasList={true}
                              >
                                <div
                                  className="c11"
                                >
                                  <ListWithSelection
                                    allowNavigation={true}
                                    onSelect={[Function]}
                                  >
                                    <list-with-selection__List>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "list-with-selection__List-otg3vd-0",
                                              "isStatic": false,
                                              "lastClassName": "c12",
                                              "rules": Array [
                                                "background:white;border:1px solid #e5e5e5;width:100%;overflow-y:scroll;z-index:501;position:relative;margin:0;",
                                                [Function],
                                              ],
                                            },
                                            "displayName": "list-with-selection__List",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "list-with-selection__List-otg3vd-0",
                                            "target": "ul",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={[Function]}
                                      >
                                        <ul
                                          className="c12"
                                        >
                                          <list-with-selection__ListItem
                                            aria-selected={true}
                                            isSelected={true}
                                            key=".$.$empty"
                                            onClick={[Function]}
                                            role="option"
                                            tabIndex="-1"
                                          >
                                            <StyledComponent
                                              aria-selected={true}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "list-with-selection__ListItem-otg3vd-1",
                                                    "isStatic": false,
                                                    "lastClassName": "c14",
                                                    "rules": Array [
                                                      "padding:5px 10px;color:#222;cursor:pointer;outline:none;&:hover{background:#e5e5e5;}",
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "list-with-selection__ListItem",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "list-with-selection__ListItem-otg3vd-1",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={[Function]}
                                              isSelected={true}
                                              onClick={[Function]}
                                              role="option"
                                              tabIndex="-1"
                                            >
                                              <li
                                                aria-selected={true}
                                                className="c13"
                                                onClick={[Function]}
                                                role="option"
                                                tabIndex="-1"
                                              >
                                                <Option
                                                  emptyValue={true}
                                                  key=".$empty"
                                                  stringRepresentation="Empty"
                                                  value="empty"
                                                >
                                                  <EnsureDefaultTheme>
                                                    <ThemeProvider
                                                      theme={[Function]}
                                                    >
                                                      <span>
                                                        Empty
                                                      </span>
                                                    </ThemeProvider>
                                                  </EnsureDefaultTheme>
                                                </Option>
                                              </li>
                                            </StyledComponent>
                                          </list-with-selection__ListItem>
                                          <list-with-selection__ListItem
                                            aria-selected={false}
                                            isSelected={false}
                                            key=".$.$en"
                                            onClick={[Function]}
                                            role="option"
                                            tabIndex="-1"
                                          >
                                            <StyledComponent
                                              aria-selected={false}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "list-with-selection__ListItem-otg3vd-1",
                                                    "isStatic": false,
                                                    "lastClassName": "c14",
                                                    "rules": Array [
                                                      "padding:5px 10px;color:#222;cursor:pointer;outline:none;&:hover{background:#e5e5e5;}",
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "list-with-selection__ListItem",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "list-with-selection__ListItem-otg3vd-1",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={[Function]}
                                              isSelected={false}
                                              onClick={[Function]}
                                              role="option"
                                              tabIndex="-1"
                                            >
                                              <li
                                                aria-selected={false}
                                                className="c14"
                                                onClick={[Function]}
                                                role="option"
                                                tabIndex="-1"
                                              >
                                                <Option
                                                  key=".$en"
                                                  stringRepresentation="English"
                                                  value="en"
                                                >
                                                  <EnsureDefaultTheme>
                                                    <ThemeProvider
                                                      theme={[Function]}
                                                    >
                                                      <span>
                                                        English
                                                      </span>
                                                    </ThemeProvider>
                                                  </EnsureDefaultTheme>
                                                </Option>
                                              </li>
                                            </StyledComponent>
                                          </list-with-selection__ListItem>
                                          <list-with-selection__ListItem
                                            aria-selected={false}
                                            isSelected={false}
                                            key=".$.$es"
                                            onClick={[Function]}
                                            role="option"
                                            tabIndex="-1"
                                          >
                                            <StyledComponent
                                              aria-selected={false}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "list-with-selection__ListItem-otg3vd-1",
                                                    "isStatic": false,
                                                    "lastClassName": "c14",
                                                    "rules": Array [
                                                      "padding:5px 10px;color:#222;cursor:pointer;outline:none;&:hover{background:#e5e5e5;}",
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "list-with-selection__ListItem",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "list-with-selection__ListItem-otg3vd-1",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={[Function]}
                                              isSelected={false}
                                              onClick={[Function]}
                                              role="option"
                                              tabIndex="-1"
                                            >
                                              <li
                                                aria-selected={false}
                                                className="c14"
                                                onClick={[Function]}
                                                role="option"
                                                tabIndex="-1"
                                              >
                                                <Option
                                                  key=".$es"
                                                  stringRepresentation="Spanish"
                                                  value="es"
                                                >
                                                  <EnsureDefaultTheme>
                                                    <ThemeProvider
                                                      theme={[Function]}
                                                    >
                                                      <span>
                                                        Spanish
                                                      </span>
                                                    </ThemeProvider>
                                                  </EnsureDefaultTheme>
                                                </Option>
                                              </li>
                                            </StyledComponent>
                                          </list-with-selection__ListItem>
                                          <list-with-selection__ListItem
                                            aria-selected={false}
                                            isSelected={false}
                                            key=".$.$hu"
                                            onClick={[Function]}
                                            role="option"
                                            tabIndex="-1"
                                          >
                                            <StyledComponent
                                              aria-selected={false}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "list-with-selection__ListItem-otg3vd-1",
                                                    "isStatic": false,
                                                    "lastClassName": "c14",
                                                    "rules": Array [
                                                      "padding:5px 10px;color:#222;cursor:pointer;outline:none;&:hover{background:#e5e5e5;}",
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "list-with-selection__ListItem",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "list-with-selection__ListItem-otg3vd-1",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={[Function]}
                                              isSelected={false}
                                              onClick={[Function]}
                                              role="option"
                                              tabIndex="-1"
                                            >
                                              <li
                                                aria-selected={false}
                                                className="c14"
                                                onClick={[Function]}
                                                role="option"
                                                tabIndex="-1"
                                              >
                                                <Option
                                                  key=".$hu"
                                                  stringRepresentation="Hungarian"
                                                  value="hu"
                                                >
                                                  <EnsureDefaultTheme>
                                                    <ThemeProvider
                                                      theme={[Function]}
                                                    >
                                                      <span>
                                                        Hungarian
                                                      </span>
                                                    </ThemeProvider>
                                                  </EnsureDefaultTheme>
                                                </Option>
                                              </li>
                                            </StyledComponent>
                                          </list-with-selection__ListItem>
                                        </ul>
                                      </StyledComponent>
                                    </list-with-selection__List>
                                  </ListWithSelection>
                                </div>
                              </StyledComponent>
                            </select__SelectOptionsList>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal Predictive typing in the text field filters results 1`] = `
.c12 {
  background: white;
  border: 1px solid #e5e5e5;
  width: 100%;
  overflow-y: scroll;
  z-index: 501;
  position: relative;
  margin: 0;
  max-height: 400px;
}

.c13 {
  padding: 5px 10px;
  color: #222;
  cursor: pointer;
  outline: none;
  background: #e5e5e5;
}

.c13:hover {
  background: #e5e5e5;
}

.c14 {
  padding: 5px 10px;
  color: #222;
  cursor: pointer;
  outline: none;
}

.c14:hover {
  background: #e5e5e5;
}

.c10 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c15 .c4 {
  border-color: #ddd;
}

.c15 .c4 .c6 {
  color: #ddd;
}

.c8 {
  border: none;
  color: #222;
  line-height: 34px;
  width: 100%;
  font-size: 14px;
}

.c8:focus {
  outline: none;
}

.c11 {
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  border: 1px solid #CCC;
  border-top: none;
  color: #CCC;
  cursor: default;
  outline: none;
  overflow-y: scroll;
  position: absolute;
  width: 100%;
  min-width: 100px;
  height: auto;
  top: 36px;
  left: 0;
  right: 0;
  z-index: 501;
  overflow: hidden;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  width: 12px;
}

.c9 svg {
  color: #0A7BC2;
}

<label
  class="c0"
  for="test"
>
  <div
    class="c1"
  >
    <span
      class="c2"
    >
      Language
    </span>
    <div
      class="c3"
      open=""
      role="button"
      tabindex="0"
    >
      <div
        class="c4 c5"
      >
        <div
          class="c6 c7"
        >
          <input
            class="c8"
            type="text"
            value=""
          />
        </div>
        <div
          class="c9"
        >
          <span
            class="c10"
          >
            <svg
              aria-label="ChevronUp icon"
              height="18"
              viewBox="0 0 18 18"
              width="18"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3.87 11.84a.5.5 0 0 1-.74-.68l5.5-6a.5.5 0 0 1 .74 0l5.5 6a.5.5 0 1 1-.74.68L9 6.24l-5.13 5.6z"
                fill-rule="evenodd"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        class="c11"
      >
        <ul
          class="c12"
        >
          <li
            aria-selected="true"
            class="c13"
            role="option"
            tabindex="-1"
          >
            <span>
              English
            </span>
          </li>
          <li
            aria-selected="false"
            class="c14"
            role="option"
            tabindex="-1"
          >
            <span>
              Spanish
            </span>
          </li>
          <li
            aria-selected="false"
            class="c14"
            role="option"
            tabindex="-1"
          >
            <span>
              Hungarian
            </span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</label>
`;

exports[`<Select /> Normal should be able to select option 1`] = `
.c11 {
  padding: 5px 9px;
  color: #222;
  font-size: 0.9em;
  cursor: pointer;
  outline: none;
}

.c11:hover {
  background: #F5F5F5;
}

.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c12 .c4 {
  border-color: #ddd;
}

.c12 .c4 .c6 {
  color: #ddd;
}

.c10 {
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  border: 1px solid #CCC;
  border-top: none;
  color: #CCC;
  cursor: default;
  outline: none;
  overflow-y: scroll;
  position: absolute;
  width: 100%;
  min-width: 100px;
  height: auto;
  top: 36px;
  left: 0;
  right: 0;
  z-index: 501;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #0A7BC2;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={true}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={true}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={true}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={true}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={true}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={true}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={true}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={true}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={true}
                                    >
                                      <div
                                        className="c8"
                                        disabled={false}
                                      >
                                        <ChevronUpIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronUp
                                                    aria-label="ChevronUp icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronUp icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 11.84a.5.5 0 0 1-.74-.68l5.5-6a.5.5 0 0 1 .74 0l5.5 6a.5.5 0 1 1-.74.68L9 6.24l-5.13 5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronUp>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronUpIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                            <select__SelectOptionsList>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                      "isStatic": false,
                                      "lastClassName": "c10",
                                      "rules": Array [
                                        "background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-bottom-left-radius:4px;border-bottom-right-radius:4px;border:1px solid ",
                                        [Function],
                                        ";border-top:none;color:",
                                        [Function],
                                        ";cursor:default;outline:none;overflow-y:scroll;position:absolute;width:100%;min-width:100px;height:auto;top:",
                                        "36",
                                        "px;left:0;right:0;z-index:501;",
                                        [Function],
                                        " ",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "select__SelectOptionsList",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c10"
                                >
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$en"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="en"
                                          selected={false}
                                          stringRepresentation="English"
                                          value="en"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                English
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$es"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="es"
                                          selected={false}
                                          stringRepresentation="Spanish"
                                          value="es"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                Spanish
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$hu"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="hu"
                                          selected={false}
                                          stringRepresentation="Hungarian"
                                          value="hu"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                Hungarian
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                </div>
                              </StyledComponent>
                            </select__SelectOptionsList>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should be able to select option 2`] = `
.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c10 .c4 {
  border-color: #ddd;
}

.c10 .c4 .c6 {
  color: #ddd;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #000;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "en",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            "en",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={
        [MockFunction] {
          "calls": Array [
            Array [
              "en",
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        }
      }
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={false}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={false}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={false}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={false}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={false}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={false}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={false}
                                    >
                                      <div
                                        className="c8"
                                        disabled={false}
                                      >
                                        <ChevronDownIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronDown
                                                    aria-label="ChevronDown icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronDown icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronDown>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronDownIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should be closed by default, should open and close 1`] = `
.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c10 .c4 {
  border-color: #ddd;
}

.c10 .c4 .c6 {
  color: #ddd;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #000;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={false}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={false}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={false}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={false}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={false}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={false}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={false}
                                    >
                                      <div
                                        className="c8"
                                        disabled={false}
                                      >
                                        <ChevronDownIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronDown
                                                    aria-label="ChevronDown icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronDown icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronDown>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronDownIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should be closed by default, should open and close 2`] = `
.c11 {
  padding: 5px 9px;
  color: #222;
  font-size: 0.9em;
  cursor: pointer;
  outline: none;
}

.c11:hover {
  background: #F5F5F5;
}

.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c12 .c4 {
  border-color: #ddd;
}

.c12 .c4 .c6 {
  color: #ddd;
}

.c10 {
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  border: 1px solid #CCC;
  border-top: none;
  color: #CCC;
  cursor: default;
  outline: none;
  overflow-y: scroll;
  position: absolute;
  width: 100%;
  min-width: 100px;
  height: auto;
  top: 36px;
  left: 0;
  right: 0;
  z-index: 501;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #0A7BC2;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={true}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={true}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={true}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={true}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={true}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={true}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={true}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={true}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={true}
                                    >
                                      <div
                                        className="c8"
                                        disabled={false}
                                      >
                                        <ChevronUpIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronUp
                                                    aria-label="ChevronUp icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronUp icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 11.84a.5.5 0 0 1-.74-.68l5.5-6a.5.5 0 0 1 .74 0l5.5 6a.5.5 0 1 1-.74.68L9 6.24l-5.13 5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronUp>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronUpIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                            <select__SelectOptionsList>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                      "isStatic": false,
                                      "lastClassName": "c10",
                                      "rules": Array [
                                        "background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-bottom-left-radius:4px;border-bottom-right-radius:4px;border:1px solid ",
                                        [Function],
                                        ";border-top:none;color:",
                                        [Function],
                                        ";cursor:default;outline:none;overflow-y:scroll;position:absolute;width:100%;min-width:100px;height:auto;top:",
                                        "36",
                                        "px;left:0;right:0;z-index:501;",
                                        [Function],
                                        " ",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "select__SelectOptionsList",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c10"
                                >
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$en"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="en"
                                          selected={false}
                                          stringRepresentation="English"
                                          value="en"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                English
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$es"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="es"
                                          selected={false}
                                          stringRepresentation="Spanish"
                                          value="es"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                Spanish
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$hu"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="hu"
                                          selected={false}
                                          stringRepresentation="Hungarian"
                                          value="hu"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                Hungarian
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                </div>
                              </StyledComponent>
                            </select__SelectOptionsList>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should be closed by default, should open and close 3`] = `
.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c10 .c4 {
  border-color: #ddd;
}

.c10 .c4 .c6 {
  color: #ddd;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #000;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={false}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={false}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={false}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={false}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={false}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={false}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={false}
                                    >
                                      <div
                                        className="c8"
                                        disabled={false}
                                      >
                                        <ChevronDownIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronDown
                                                    aria-label="ChevronDown icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronDown icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronDown>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronDownIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should be closed by default, should open and close 4`] = `
.c11 {
  padding: 5px 9px;
  color: #222;
  font-size: 0.9em;
  cursor: pointer;
  outline: none;
}

.c11:hover {
  background: #F5F5F5;
}

.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c12 .c4 {
  border-color: #ddd;
}

.c12 .c4 .c6 {
  color: #ddd;
}

.c10 {
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  border: 1px solid #CCC;
  border-top: none;
  color: #CCC;
  cursor: default;
  outline: none;
  overflow-y: scroll;
  position: absolute;
  width: 100%;
  min-width: 100px;
  height: auto;
  top: 36px;
  left: 0;
  right: 0;
  z-index: 501;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #0A7BC2;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={true}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={true}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={true}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={true}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={true}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={true}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={true}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={true}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={true}
                                    >
                                      <div
                                        className="c8"
                                        disabled={false}
                                      >
                                        <ChevronUpIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronUp
                                                    aria-label="ChevronUp icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronUp icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 11.84a.5.5 0 0 1-.74-.68l5.5-6a.5.5 0 0 1 .74 0l5.5 6a.5.5 0 1 1-.74.68L9 6.24l-5.13 5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronUp>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronUpIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                            <select__SelectOptionsList>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                      "isStatic": false,
                                      "lastClassName": "c10",
                                      "rules": Array [
                                        "background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-bottom-left-radius:4px;border-bottom-right-radius:4px;border:1px solid ",
                                        [Function],
                                        ";border-top:none;color:",
                                        [Function],
                                        ";cursor:default;outline:none;overflow-y:scroll;position:absolute;width:100%;min-width:100px;height:auto;top:",
                                        "36",
                                        "px;left:0;right:0;z-index:501;",
                                        [Function],
                                        " ",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "select__SelectOptionsList",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c10"
                                >
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$en"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="en"
                                          selected={false}
                                          stringRepresentation="English"
                                          value="en"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                English
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$es"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="es"
                                          selected={false}
                                          stringRepresentation="Spanish"
                                          value="es"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                Spanish
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$hu"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="hu"
                                          selected={false}
                                          stringRepresentation="Hungarian"
                                          value="hu"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                Hungarian
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                </div>
                              </StyledComponent>
                            </select__SelectOptionsList>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should be disabled 1`] = `
.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c3 .c4 {
  border-color: #ddd;
}

.c3 .c4 .c6 {
  color: #ddd;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #7D7D7D;
}

<Toggle(Select)
  description="Language"
  disabled={true}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={true}
    error=""
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={true}
      error=""
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={true}
                        onClick={[Function]}
                        open={false}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={false}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={true}
                            onClick={[Function]}
                            open={false}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={false}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={false}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={true}
                                    isOpen={false}
                                  >
                                    <StyledComponent
                                      disabled={true}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={false}
                                    >
                                      <div
                                        className="c8"
                                        disabled={true}
                                      >
                                        <ChevronDownIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronDown
                                                    aria-label="ChevronDown icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronDown icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronDown>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronDownIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should be disabled 2`] = `
.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c3 .c4 {
  border-color: #ddd;
}

.c3 .c4 .c6 {
  color: #ddd;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #7D7D7D;
}

<Toggle(Select)
  description="Language"
  disabled={true}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={true}
    error=""
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={true}
      error=""
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={true}
                        onClick={[Function]}
                        open={false}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={false}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={true}
                            onClick={[Function]}
                            open={false}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={false}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={false}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={true}
                                    isOpen={false}
                                  >
                                    <StyledComponent
                                      disabled={true}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={false}
                                    >
                                      <div
                                        className="c8"
                                        disabled={true}
                                      >
                                        <ChevronDownIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronDown
                                                    aria-label="ChevronDown icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronDown icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronDown>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronDownIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should display its value 1`] = `
.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c10 .c4 {
  border-color: #ddd;
}

.c10 .c4 .c6 {
  color: #ddd;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #000;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value="en"
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value="en"
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value="en"
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={false}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={false}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={false}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={false}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={false}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      >
                                        <Option
                                          key=".$en"
                                          stringRepresentation="English"
                                          value="en"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                English
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={false}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={false}
                                    >
                                      <div
                                        className="c8"
                                        disabled={false}
                                      >
                                        <ChevronDownIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronDown
                                                    aria-label="ChevronDown icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronDown icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronDown>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronDownIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should have max height 1`] = `
.c11 {
  padding: 5px 9px;
  color: #222;
  font-size: 0.9em;
  cursor: pointer;
  outline: none;
}

.c11:hover {
  background: #F5F5F5;
}

.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c12 .c4 {
  border-color: #ddd;
}

.c12 .c4 .c6 {
  color: #ddd;
}

.c10 {
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  border: 1px solid #CCC;
  border-top: none;
  color: #CCC;
  cursor: default;
  outline: none;
  overflow-y: scroll;
  position: absolute;
  width: 100%;
  min-width: 100px;
  height: auto;
  top: 36px;
  left: 0;
  right: 0;
  z-index: 501;
  max-height: 200px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #0A7BC2;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  height={200}
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    height={200}
    isOpen={true}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      height={200}
      insideReference={[Function]}
      isOpen={true}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={true}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={true}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={true}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={true}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={true}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={true}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={true}
                                    >
                                      <div
                                        className="c8"
                                        disabled={false}
                                      >
                                        <ChevronUpIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronUp
                                                    aria-label="ChevronUp icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronUp icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 11.84a.5.5 0 0 1-.74-.68l5.5-6a.5.5 0 0 1 .74 0l5.5 6a.5.5 0 1 1-.74.68L9 6.24l-5.13 5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronUp>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronUpIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                            <select__SelectOptionsList
                              height={200}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                      "isStatic": false,
                                      "lastClassName": "c10",
                                      "rules": Array [
                                        "background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-bottom-left-radius:4px;border-bottom-right-radius:4px;border:1px solid ",
                                        [Function],
                                        ";border-top:none;color:",
                                        [Function],
                                        ";cursor:default;outline:none;overflow-y:scroll;position:absolute;width:100%;min-width:100px;height:auto;top:",
                                        "36",
                                        "px;left:0;right:0;z-index:501;",
                                        [Function],
                                        " ",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "select__SelectOptionsList",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "select__SelectOptionsList-sc-17mlv1t-6",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                height={200}
                              >
                                <div
                                  className="c10"
                                  height={200}
                                >
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$en"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="en"
                                          selected={false}
                                          stringRepresentation="English"
                                          value="en"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                English
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$es"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="es"
                                          selected={false}
                                          stringRepresentation="Spanish"
                                          value="es"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                Spanish
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                  <option__OptionItem
                                    aria-selected={false}
                                    key=".$hu"
                                    onClick={[Function]}
                                    role="option"
                                    selected={false}
                                    tabIndex="-1"
                                  >
                                    <StyledComponent
                                      aria-selected={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "option__OptionItem-jj696a-0",
                                            "isStatic": false,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "padding:5px 9px;color:",
                                              [Function],
                                              ";font-size:0.9em;cursor:pointer;outline:none;&:hover{background:",
                                              [Function],
                                              ";}",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "option__OptionItem",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "option__OptionItem-jj696a-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                      role="option"
                                      selected={false}
                                      tabIndex="-1"
                                    >
                                      <div
                                        aria-selected={false}
                                        className="c11"
                                        onClick={[Function]}
                                        role="option"
                                        selected={false}
                                        tabIndex="-1"
                                      >
                                        <Option
                                          key="hu"
                                          selected={false}
                                          stringRepresentation="Hungarian"
                                          value="hu"
                                        >
                                          <EnsureDefaultTheme>
                                            <ThemeProvider
                                              theme={[Function]}
                                            >
                                              <span>
                                                Hungarian
                                              </span>
                                            </ThemeProvider>
                                          </EnsureDefaultTheme>
                                        </Option>
                                      </div>
                                    </StyledComponent>
                                  </option__OptionItem>
                                </div>
                              </StyledComponent>
                            </select__SelectOptionsList>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should include description 1`] = `
.c7 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c5 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c4 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c4 button:hover,
.c4 button:active,
.c4 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  width: 12px;
}

.c6 svg {
  color: #000;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={false}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={false}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={false}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={false}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "select__SelectControl-sc-17mlv1t-3",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "select__SelectControl-sc-17mlv1t-3",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={false}
                              >
                                <div
                                  className="c4"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__SelectValue-sc-17mlv1t-2",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__SelectValue-sc-17mlv1t-2",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c5"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={false}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={false}
                                    >
                                      <div
                                        className="c6"
                                        disabled={false}
                                      >
                                        <ChevronDownIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c7",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c7"
                                                >
                                                  <ChevronDown
                                                    aria-label="ChevronDown icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronDown icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronDown>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronDownIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Normal should include error 1`] = `
.c9 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c7 {
  color: #222;
  line-height: 34px;
  padding-left: 10px;
  padding-right: 10px;
  width: 100%;
  outline: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #FFF;
  border-color: #d9d9d9 #CCC #b3b3b3;
  border-radius: 4px;
  border: 1px solid #CCC;
  color: #222;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 36px;
  outline: none;
  overflow: hidden;
  position: relative;
  padding-right: 10px;
  width: 100%;
  min-width: 100px;
}

.c5 button {
  background: transparent;
  border: none;
  padding: 0;
  height: auto;
  line-height: auto;
  border-radius: 0;
}

.c5 button:hover,
.c5 button:active,
.c5 button:focus {
  background: transparent;
}

.c3 {
  position: relative;
  width: 100%;
  outline: none;
  cursor: pointer;
}

.c11 .c4 {
  border-color: #ddd;
}

.c11 .c4 .c6 {
  color: #ddd;
}

.c10 {
  display: block;
  position: relative;
  top: 5px;
  -webkit-transition: color 0.2s ease-in-out;
  transition: color 0.2s ease-in-out;
  color: #D24A1D;
  line-height: 1.1rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  width: 12px;
}

.c8 svg {
  color: #000;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error="Error message"
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={false}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error="Error message"
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={false}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error="Error message"
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={false}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={[Function]}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select__LabelSelect
                        disabled={false}
                        onClick={[Function]}
                        open={false}
                        role="button"
                        tabIndex="0"
                      >
                        <StyledComponent
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelSelect-sc-17mlv1t-4",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "position:relative;width:100%;outline:none;cursor:pointer;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelSelect",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelSelect-sc-17mlv1t-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          open={false}
                          role="button"
                          tabIndex="0"
                        >
                          <div
                            className="c3"
                            disabled={false}
                            onClick={[Function]}
                            open={false}
                            role="button"
                            tabIndex="0"
                          >
                            <select__SelectControl
                              description="Language"
                              isOpen={false}
                            >
                              <StyledComponent
                                description="Language"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c4",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "align-items:center;background-color:",
                                        [Function],
                                        ";border-color:#d9d9d9 ",
                                        [Function],
                                        " #b3b3b3;border-radius:4px;border:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";display:flex;height:",
                                        "36",
                                        "px;outline:none;overflow:hidden;position:relative;padding-right:10px;width:100%;min-width:100px;button{background:transparent;border:none;padding:0;height:auto;line-height:auto;border-radius:0;&:hover,&:active,&:focus{background:transparent;}}",
                                      ],
                                    },
                                    "displayName": "select__SelectControl",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c4",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isOpen={false}
                              >
                                <div
                                  className="c4 c5"
                                >
                                  <select__SelectValue>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c6",
                                            "isStatic": false,
                                            "lastClassName": "c7",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";line-height:34px;padding-left:10px;padding-right:10px;width:100%;outline:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                            ],
                                          },
                                          "displayName": "select__SelectValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c6",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c6 c7"
                                      />
                                    </StyledComponent>
                                  </select__SelectValue>
                                  <select__Controls
                                    disabled={false}
                                    isOpen={false}
                                  >
                                    <StyledComponent
                                      disabled={false}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "select__Controls-sc-17mlv1t-9",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width:12px;",
                                              [Function],
                                              " ",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "select__Controls",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "select__Controls-sc-17mlv1t-9",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      isOpen={false}
                                    >
                                      <div
                                        className="c8"
                                        disabled={false}
                                      >
                                        <ChevronDownIcon>
                                          <Icon19>
                                            <icon19__IconWrapper>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "icon19__IconWrapper-iyvn34-0",
                                                      "isStatic": true,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "fill:currentColor;display:flex;",
                                                      ],
                                                    },
                                                    "displayName": "icon19__IconWrapper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c9"
                                                >
                                                  <ChevronDown
                                                    aria-label="ChevronDown icon"
                                                    height="18"
                                                    viewBox="0 0 18 18"
                                                    width="18"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <svg
                                                      aria-label="ChevronDown icon"
                                                      height="18"
                                                      viewBox="0 0 18 18"
                                                      width="18"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M3.87 6.16a.5.5 0 0 0-.74.68l5.5 6c.2.21.54.21.74 0l5.5-6a.5.5 0 1 0-.74-.68L9 11.76l-5.13-5.6z"
                                                        fillRule="evenodd"
                                                      />
                                                    </svg>
                                                  </ChevronDown>
                                                </span>
                                              </StyledComponent>
                                            </icon19__IconWrapper>
                                          </Icon19>
                                        </ChevronDownIcon>
                                      </div>
                                    </StyledComponent>
                                  </select__Controls>
                                </div>
                              </StyledComponent>
                            </select__SelectControl>
                          </div>
                        </StyledComponent>
                      </select__LabelSelect>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
                <select__Error>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__Error-sc-17mlv1t-7",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "display:block;position:relative;top:",
                            [Function],
                            ";transition:color 0.2s ease-in-out;color:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__Error",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__Error-sc-17mlv1t-7",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c10"
                    >
                      Error message
                    </div>
                  </StyledComponent>
                </select__Error>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Simplified should be disabled 1`] = `
.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<Toggle(Select)
  description="Language"
  disabled={true}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={true}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={true}
    error=""
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={true}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={true}
      error=""
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={true}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select
                        disabled={true}
                        name="test"
                        onChange={[Function]}
                      >
                        <option
                          key=".$en"
                          value="English"
                        >
                          English
                        </option>
                        <option
                          key=".$es"
                          value="Spanish"
                        >
                          Spanish
                        </option>
                        <option
                          key=".$hu"
                          value="Hungarian"
                        >
                          Hungarian
                        </option>
                      </select>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Simplified should include error 1`] = `
.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c3 {
  display: block;
  position: relative;
  top: 5px;
  -webkit-transition: color 0.2s ease-in-out;
  transition: color 0.2s ease-in-out;
  color: #D24A1D;
  line-height: 1.1rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error="Error message"
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={true}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error="Error message"
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={true}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error="Error message"
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={true}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select
                        disabled={false}
                        name="test"
                        onChange={[Function]}
                      >
                        <option
                          key=".$en"
                          value="English"
                        >
                          English
                        </option>
                        <option
                          key=".$es"
                          value="Spanish"
                        >
                          Spanish
                        </option>
                        <option
                          key=".$hu"
                          value="Hungarian"
                        >
                          Hungarian
                        </option>
                      </select>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
                <select__Error>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__Error-sc-17mlv1t-7",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:block;position:relative;top:",
                            [Function],
                            ";transition:color 0.2s ease-in-out;color:",
                            [Function],
                            ";line-height:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__Error",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__Error-sc-17mlv1t-7",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c3"
                    >
                      Error message
                    </div>
                  </StyledComponent>
                </select__Error>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;

exports[`<Select /> Simplified should render 1`] = `
.c0 {
  width: 100%;
}

.c2 {
  margin-right: 10px;
  line-height: 36px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<Toggle(Select)
  description="Language"
  disabled={false}
  error=""
  name="test"
  onChange={[MockFunction]}
  predictive={false}
  simplified={true}
  value=""
>
  <ClickOutside(Select)
    close={[Function]}
    description="Language"
    disabled={false}
    error=""
    handleClickOutside={[Function]}
    isOpen={false}
    name="test"
    onChange={[MockFunction]}
    predictive={false}
    simplified={true}
    toggle={[Function]}
    value=""
  >
    <Select
      close={[Function]}
      description="Language"
      disabled={false}
      error=""
      insideReference={[Function]}
      isOpen={false}
      name="test"
      onChange={[MockFunction]}
      predictive={false}
      simplified={true}
      toggle={[Function]}
      value=""
    >
      <EnsureDefaultTheme>
        <ThemeProvider
          theme={[Function]}
        >
          <select__SelectLabel
            htmlFor="test"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "select__SelectLabel-sc-17mlv1t-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "width:100%;",
                      [Function],
                    ],
                  },
                  "displayName": "select__SelectLabel",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "select__SelectLabel-sc-17mlv1t-0",
                  "target": "label",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              htmlFor="test"
            >
              <label
                className="c0"
                htmlFor="test"
              >
                <select__SelectWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "select__SelectWrapper-sc-17mlv1t-8",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "display:",
                            [Function],
                            ";",
                          ],
                        },
                        "displayName": "select__SelectWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "select__SelectWrapper-sc-17mlv1t-8",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select__LabelText>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "select__LabelText-sc-17mlv1t-1",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "margin-right:10px;line-height:",
                                  "36",
                                  "px;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "select__LabelText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "select__LabelText-sc-17mlv1t-1",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c2"
                          >
                            Language
                          </span>
                        </StyledComponent>
                      </select__LabelText>
                      <select
                        disabled={false}
                        name="test"
                        onChange={[Function]}
                      >
                        <option
                          key=".$en"
                          value="English"
                        >
                          English
                        </option>
                        <option
                          key=".$es"
                          value="Spanish"
                        >
                          Spanish
                        </option>
                        <option
                          key=".$hu"
                          value="Hungarian"
                        >
                          Hungarian
                        </option>
                      </select>
                    </div>
                  </StyledComponent>
                </select__SelectWrapper>
              </label>
            </StyledComponent>
          </select__SelectLabel>
        </ThemeProvider>
      </EnsureDefaultTheme>
    </Select>
  </ClickOutside(Select)>
</Toggle(Select)>
`;
