// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ImageUpload /> should set the error state after the image upload fails 1`] = `
.c10 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c4.c4 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c2 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c2:hover .c3 {
  color: #222;
}

.c2:focus-within .c3 {
  color: #0A7BC2;
}

.c2 .c12 {
  margin-top: 8px;
}

.c7.c7 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c7.c7.c7:hover,
.c7.c7.c7:active,
.c7.c7.c7:focus {
  color: #222;
}

.c7:hover {
  border-bottom-color: #666;
}

.c7.c7.c7:focus,
.c7.c7.c7:active {
  border-bottom-color: #0A7BC2;
}

.c7:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 {
  position: relative;
}

.c6:hover {
  border-bottom-color: #666;
}

.c6:hover .c5:focus,
.c6:hover .c6:active {
  border-bottom-color: #0A7BC2;
}

.c6:hover .c5:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 .c13 {
  padding: 0;
}

.c6 .c11 {
  top: 9px;
}

.c0 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c9 {
  white-space: nowrap;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .c8 {
  padding: 0 10px;
}

.c1 .c8 label {
  padding: 0 10px;
  width: 100%;
}

<ImageUpload
  imageUploader={[MockFunction]}
  language="en-US"
  onChange={[MockFunction]}
  onError={[Function]}
  onInputChange={[Function]}
  onUploadStarted={[Function]}
>
  <div>
    <image-upload__ImageUploadTitle>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "text-align:center;font-weight:400;font-size:1.312rem;",
              ],
            },
            "displayName": "image-upload__ImageUploadTitle",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
            "target": "p",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <p
          className="c0"
        >
          <span>
            Insert an image from the web
          </span>
        </p>
      </StyledComponent>
    </image-upload__ImageUploadTitle>
    <image-upload__ImageInputContainer>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
              "isStatic": true,
              "lastClassName": "c1",
              "rules": Array [
                "display:flex;",
                ".c8",
                "{padding:0 10px;label{padding:0 10px;width:100%;}}",
              ],
            },
            "displayName": "image-upload__ImageInputContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c1"
        >
          <Textfield18
            blogTheme="default"
            error=""
            label="Paste the URL of the image"
            name="imageURL"
            onChange={[Function]}
            value=""
          >
            <Theme
              blog="default"
              theme={
                Object {
                  "breakpointBanner": "969px",
                  "breakpointMedium": "53.125em",
                  "color": Object {
                    "alert": "#EEB544",
                    "amazon": "#F5C056",
                    "backgroundLayer": "rgba(0,0,0,0.45)",
                    "backgroundLight": "#E6F2F8",
                    "black": "#000",
                    "blackOverlay": "rgba(0,0,0,0.7)",
                    "bodytext": "#222",
                    "commerce": "#72AD75",
                    "darkBlackOverlay": "rgba(0,0,0,0.9)",
                    "darkgray": "#666",
                    "darksmoke": "#222",
                    "error": "#D24A1D",
                    "facebook": "#1877F2",
                    "foregroundLayer": "rgba(0,0,0,0.4)",
                    "google": "#DB4437",
                    "gray": "#7D7D7D",
                    "instagram": "#C32AA3",
                    "lightgray": "#E5E5E5",
                    "linkedin": "#0077B5",
                    "logo": "#000",
                    "midgray": "#CCC",
                    "primary": "#0A7BC2",
                    "primaryLight": "#0C91E4",
                    "rss": "#7D7D7D",
                    "secondarytext": "#7D7D7D",
                    "success": "#23891F",
                    "twitter": "#1DA1F2",
                    "white": "#FFF",
                    "whiteOverlay": "rgba(255,255,255,0.7)",
                    "whitesmoke": "#F5F5F5",
                    "youtube": "#FF0000",
                  },
                  "columnGutter": "2.25rem",
                  "columnGutter19": Object {
                    "largeUp": "1.5rem",
                    "small19": "1rem",
                    "xlargeUp": "2rem",
                  },
                  "columnPadding": "1.125rem",
                  "columnPadding19": Object {
                    "largeUp": "0.75rem",
                    "small19": "0.5rem",
                    "xlargeUp": "1rem",
                  },
                  "featuredContentWidth": "1024px",
                  "globalNavHeight": "80px",
                  "linkTransition": "0.1s ease-out",
                  "mainContainerWidth": "66.5%",
                  "mainContentMaxWidth": "800px",
                  "pageWidth": "1336px",
                  "postContentMaxWidth": "636px",
                  "scrollbackNavHeight": "60px",
                  "sidebarContainerWidth": "33.5%",
                  "sidebarContentMaxWidth": "360px",
                  "sidebarContentMinWidth": "300px",
                  "slideshowTransitionDuration": "0.2s",
                  "typography": Object {
                    "body": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "embiggenedHeadlineSize": "34px",
                    "headline": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "headlineLineHeight": "1.3",
                    "headlineSize": "24px",
                    "permalinkHeadlineLineHeight": "1.2",
                    "permalinkHeadlineSize": Object {
                      "mediumUp": "2.5rem",
                      "small": "2rem",
                      "xxxlargeUp": "3rem",
                    },
                    "primary": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "serif": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "tertiary": Object {
                      "fontFamily": "FiraSans, sans-serif",
                      "fontSizes": Object {
                        "large": "29px",
                        "medium": "21px",
                        "small": "17px",
                        "xlarge": "35px",
                        "xsmall": "15px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "utility": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                  },
                }
              }
            >
              <ThemeProvider
                theme={
                  Object {
                    "blog": "default",
                    "breakpointBanner": "969px",
                    "breakpointMedium": "53.125em",
                    "color": Object {
                      "alert": "#EEB544",
                      "amazon": "#F5C056",
                      "backgroundLayer": "rgba(0,0,0,0.45)",
                      "backgroundLight": "#E6F2F8",
                      "black": "#000",
                      "blackOverlay": "rgba(0,0,0,0.7)",
                      "bodytext": "#222",
                      "commerce": "#72AD75",
                      "darkBlackOverlay": "rgba(0,0,0,0.9)",
                      "darkgray": "#666",
                      "darksmoke": "#222",
                      "error": "#D24A1D",
                      "facebook": "#1877F2",
                      "foregroundLayer": "rgba(0,0,0,0.4)",
                      "google": "#DB4437",
                      "gray": "#7D7D7D",
                      "instagram": "#C32AA3",
                      "lightgray": "#E5E5E5",
                      "linkedin": "#0077B5",
                      "logo": "#000",
                      "midgray": "#CCC",
                      "primary": "#0A7BC2",
                      "primaryLight": "#0C91E4",
                      "rss": "#7D7D7D",
                      "secondarytext": "#7D7D7D",
                      "success": "#23891F",
                      "twitter": "#1DA1F2",
                      "white": "#FFF",
                      "whiteOverlay": "rgba(255,255,255,0.7)",
                      "whitesmoke": "#F5F5F5",
                      "youtube": "#FF0000",
                    },
                    "columnGutter": "2.25rem",
                    "columnGutter19": Object {
                      "largeUp": "1.5rem",
                      "small19": "1rem",
                      "xlargeUp": "2rem",
                    },
                    "columnPadding": "1.125rem",
                    "columnPadding19": Object {
                      "largeUp": "0.75rem",
                      "small19": "0.5rem",
                      "xlargeUp": "1rem",
                    },
                    "featuredContentWidth": "1024px",
                    "globalNavHeight": "80px",
                    "linkTransition": "0.1s ease-out",
                    "mainContainerWidth": "66.5%",
                    "mainContentMaxWidth": "800px",
                    "pageWidth": "1336px",
                    "postContentMaxWidth": "636px",
                    "scrollbackNavHeight": "60px",
                    "sidebarContainerWidth": "33.5%",
                    "sidebarContentMaxWidth": "360px",
                    "sidebarContentMinWidth": "300px",
                    "slideshowTransitionDuration": "0.2s",
                    "typography": Object {
                      "body": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "embiggenedHeadlineSize": "34px",
                      "headline": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "headlineLineHeight": "1.3",
                      "headlineSize": "24px",
                      "permalinkHeadlineLineHeight": "1.2",
                      "permalinkHeadlineSize": Object {
                        "mediumUp": "2.5rem",
                        "small": "2rem",
                        "xxxlargeUp": "3rem",
                      },
                      "primary": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "serif": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "tertiary": Object {
                        "fontFamily": "FiraSans, sans-serif",
                        "fontSizes": Object {
                          "large": "29px",
                          "medium": "21px",
                          "small": "17px",
                          "xlarge": "35px",
                          "xsmall": "15px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "utility": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                    },
                  }
                }
              >
                <textfield__KinjaFormFieldWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "margin-bottom:32px;flex-basis:100%;&:hover{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}&:focus-within{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}",
                            [Function],
                            " ",
                            ".c12",
                            "{margin-top:8px;}",
                          ],
                        },
                        "displayName": "textfield__KinjaFormFieldWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2"
                    >
                      <textfield__KinjaLabel
                        error=""
                        htmlFor="imageURL"
                      >
                        <StyledComponent
                          error=""
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c3",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "&&{color:",
                                  [Function],
                                  ";font-size:16px;line-height:21px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaLabel",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c3",
                              "target": "label",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          htmlFor="imageURL"
                        >
                          <label
                            className="c3 c4"
                            htmlFor="imageURL"
                          >
                            Paste the URL of the image
                          </label>
                        </StyledComponent>
                      </textfield__KinjaLabel>
                      <textfield__KinjaTextFieldWrapper
                        hasCustomIcon={false}
                        status="default"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "position:relative;&:hover{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:disabled{border-bottom-color:",
                                  [Function],
                                  ";cursor:not-allowed;}",
                                  ".c13",
                                  "{padding:0;",
                                  [Function],
                                  "}",
                                  ".textfield__KinjaTextField-sc-1a9gghc-2",
                                  ",",
                                  ".c13",
                                  "{",
                                  [Function],
                                  " ",
                                  [Function],
                                  "}",
                                  ".c11",
                                  "{top:9px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaTextFieldWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hasCustomIcon={false}
                          status="default"
                        >
                          <div
                            className="c5 c6"
                          >
                            <textfield__KinjaTextField
                              error=""
                              id="imageURL"
                              name="imageURL"
                              onChange={[Function]}
                              status="default"
                              type="text"
                              value=""
                            >
                              <StyledComponent
                                error=""
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "&&{border-bottom:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                        [Function],
                                        ";}&:hover{border-bottom-color:",
                                        [Function],
                                        ";}&&&:focus,&&&:active{border-bottom-color:",
                                        [Function],
                                        ";}&:disabled{border-bottom-color:",
                                        [Function],
                                        ";cursor:not-allowed;}",
                                        ";",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaTextField",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                    "target": "input",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="imageURL"
                                name="imageURL"
                                onChange={[Function]}
                                status="default"
                                type="text"
                                value=""
                              >
                                <input
                                  className="c7"
                                  id="imageURL"
                                  name="imageURL"
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                              </StyledComponent>
                            </textfield__KinjaTextField>
                          </div>
                        </StyledComponent>
                      </textfield__KinjaTextFieldWrapper>
                    </div>
                  </StyledComponent>
                </textfield__KinjaFormFieldWrapper>
              </ThemeProvider>
            </Theme>
          </Textfield18>
          <image-upload__ImageFileInput>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c8",
                    "isStatic": true,
                    "lastClassName": "caIkJs",
                    "rules": Array [],
                  },
                  "displayName": "image-upload__ImageFileInput",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c8",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c8 "
              >
                <image-upload__FileInputText>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "image-upload__FileInputText-d8l6nt-1",
                          "isStatic": true,
                          "lastClassName": "c9",
                          "rules": Array [
                            "white-space:nowrap;",
                          ],
                        },
                        "displayName": "image-upload__FileInputText",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                        "target": "p",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <p
                      className="c9"
                    >
                      <span
                        className="show-for-small-only"
                      >
                        Or upload one from your device
                      </span>
                      <span
                        className="show-for-medium-up"
                      >
                        Or upload one from your computer
                      </span>
                    </p>
                  </StyledComponent>
                </image-upload__FileInputText>
                <Filefield
                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                  error={null}
                  name="fileUpload"
                  onChange={[Function]}
                >
                  <Field
                    error={null}
                  >
                    <EnsureDefaultTheme>
                      <ThemeProvider
                        theme={[Function]}
                      >
                        <field__Wrapper
                          className="field"
                        >
                          <StyledComponent
                            className="field"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "field__Wrapper-sc-1k7q01z-0",
                                  "isStatic": false,
                                  "lastClassName": "c10",
                                  "rules": Array [
                                    "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                    [Function],
                                  ],
                                },
                                "displayName": "field__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <label
                              className="field c10"
                            >
                              <filefield__Input
                                accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                error={null}
                                name="fileUpload"
                                onChange={[Function]}
                              >
                                <StyledComponent
                                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                  error={null}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [
                                        Object {
                                          "type": "file",
                                        },
                                      ],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "filefield__Input-pd0ao4-0",
                                        "isStatic": false,
                                        "lastClassName": "dLFlOg",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "filefield__Input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "filefield__Input-pd0ao4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="fileUpload"
                                  onChange={[Function]}
                                >
                                  <input
                                    accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                    className=""
                                    name="fileUpload"
                                    onChange={[Function]}
                                    type="file"
                                  />
                                </StyledComponent>
                              </filefield__Input>
                            </label>
                          </StyledComponent>
                        </field__Wrapper>
                      </ThemeProvider>
                    </EnsureDefaultTheme>
                  </Field>
                </Filefield>
              </div>
            </StyledComponent>
          </image-upload__ImageFileInput>
        </div>
      </StyledComponent>
    </image-upload__ImageInputContainer>
  </div>
</ImageUpload>
`;

exports[`<ImageUpload /> should set the error state after the image upload fails 2`] = `
.c10 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c4.c4 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c2 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c2:hover .c3 {
  color: #222;
}

.c2:focus-within .c3 {
  color: #0A7BC2;
}

.c2 .c12 {
  margin-top: 8px;
}

.c7.c7 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c7.c7.c7:hover,
.c7.c7.c7:active,
.c7.c7.c7:focus {
  color: #222;
}

.c7:hover {
  border-bottom-color: #666;
}

.c7.c7.c7:focus,
.c7.c7.c7:active {
  border-bottom-color: #0A7BC2;
}

.c7:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 {
  position: relative;
}

.c6:hover {
  border-bottom-color: #666;
}

.c6:hover .c5:focus,
.c6:hover .c6:active {
  border-bottom-color: #0A7BC2;
}

.c6:hover .c5:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 .c13 {
  padding: 0;
}

.c6 .c11 {
  top: 9px;
}

.c0 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c9 {
  white-space: nowrap;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .c8 {
  padding: 0 10px;
}

.c1 .c8 label {
  padding: 0 10px;
  width: 100%;
}

<ImageUpload
  imageUploader={
    [MockFunction] {
      "calls": Array [
        Array [
          "https://res.cloudinary.com/gawker-media/image/upload/v1495783363/e8mjtsueifdddwlhvwlj.png",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": Promise {},
        },
      ],
    }
  }
  language="en-US"
  onChange={[MockFunction]}
  onError={[Function]}
  onInputChange={[Function]}
  onUploadStarted={[Function]}
>
  <div>
    <image-upload__ImageUploadTitle>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "text-align:center;font-weight:400;font-size:1.312rem;",
              ],
            },
            "displayName": "image-upload__ImageUploadTitle",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
            "target": "p",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <p
          className="c0"
        >
          <span>
            Insert an image from the web
          </span>
        </p>
      </StyledComponent>
    </image-upload__ImageUploadTitle>
    <image-upload__ImageInputContainer>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
              "isStatic": true,
              "lastClassName": "c1",
              "rules": Array [
                "display:flex;",
                ".c8",
                "{padding:0 10px;label{padding:0 10px;width:100%;}}",
              ],
            },
            "displayName": "image-upload__ImageInputContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c1"
        >
          <Textfield18
            blogTheme="default"
            error=""
            label="Paste the URL of the image"
            name="imageURL"
            onChange={[Function]}
            value="https://res.cloudinary.com/gawker-media/image/upload/v1495783363/e8mjtsueifdddwlhvwlj.png"
          >
            <Theme
              blog="default"
              theme={
                Object {
                  "breakpointBanner": "969px",
                  "breakpointMedium": "53.125em",
                  "color": Object {
                    "alert": "#EEB544",
                    "amazon": "#F5C056",
                    "backgroundLayer": "rgba(0,0,0,0.45)",
                    "backgroundLight": "#E6F2F8",
                    "black": "#000",
                    "blackOverlay": "rgba(0,0,0,0.7)",
                    "bodytext": "#222",
                    "commerce": "#72AD75",
                    "darkBlackOverlay": "rgba(0,0,0,0.9)",
                    "darkgray": "#666",
                    "darksmoke": "#222",
                    "error": "#D24A1D",
                    "facebook": "#1877F2",
                    "foregroundLayer": "rgba(0,0,0,0.4)",
                    "google": "#DB4437",
                    "gray": "#7D7D7D",
                    "instagram": "#C32AA3",
                    "lightgray": "#E5E5E5",
                    "linkedin": "#0077B5",
                    "logo": "#000",
                    "midgray": "#CCC",
                    "primary": "#0A7BC2",
                    "primaryLight": "#0C91E4",
                    "rss": "#7D7D7D",
                    "secondarytext": "#7D7D7D",
                    "success": "#23891F",
                    "twitter": "#1DA1F2",
                    "white": "#FFF",
                    "whiteOverlay": "rgba(255,255,255,0.7)",
                    "whitesmoke": "#F5F5F5",
                    "youtube": "#FF0000",
                  },
                  "columnGutter": "2.25rem",
                  "columnGutter19": Object {
                    "largeUp": "1.5rem",
                    "small19": "1rem",
                    "xlargeUp": "2rem",
                  },
                  "columnPadding": "1.125rem",
                  "columnPadding19": Object {
                    "largeUp": "0.75rem",
                    "small19": "0.5rem",
                    "xlargeUp": "1rem",
                  },
                  "featuredContentWidth": "1024px",
                  "globalNavHeight": "80px",
                  "linkTransition": "0.1s ease-out",
                  "mainContainerWidth": "66.5%",
                  "mainContentMaxWidth": "800px",
                  "pageWidth": "1336px",
                  "postContentMaxWidth": "636px",
                  "scrollbackNavHeight": "60px",
                  "sidebarContainerWidth": "33.5%",
                  "sidebarContentMaxWidth": "360px",
                  "sidebarContentMinWidth": "300px",
                  "slideshowTransitionDuration": "0.2s",
                  "typography": Object {
                    "body": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "embiggenedHeadlineSize": "34px",
                    "headline": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "headlineLineHeight": "1.3",
                    "headlineSize": "24px",
                    "permalinkHeadlineLineHeight": "1.2",
                    "permalinkHeadlineSize": Object {
                      "mediumUp": "2.5rem",
                      "small": "2rem",
                      "xxxlargeUp": "3rem",
                    },
                    "primary": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "serif": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "tertiary": Object {
                      "fontFamily": "FiraSans, sans-serif",
                      "fontSizes": Object {
                        "large": "29px",
                        "medium": "21px",
                        "small": "17px",
                        "xlarge": "35px",
                        "xsmall": "15px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "utility": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                  },
                }
              }
            >
              <ThemeProvider
                theme={
                  Object {
                    "blog": "default",
                    "breakpointBanner": "969px",
                    "breakpointMedium": "53.125em",
                    "color": Object {
                      "alert": "#EEB544",
                      "amazon": "#F5C056",
                      "backgroundLayer": "rgba(0,0,0,0.45)",
                      "backgroundLight": "#E6F2F8",
                      "black": "#000",
                      "blackOverlay": "rgba(0,0,0,0.7)",
                      "bodytext": "#222",
                      "commerce": "#72AD75",
                      "darkBlackOverlay": "rgba(0,0,0,0.9)",
                      "darkgray": "#666",
                      "darksmoke": "#222",
                      "error": "#D24A1D",
                      "facebook": "#1877F2",
                      "foregroundLayer": "rgba(0,0,0,0.4)",
                      "google": "#DB4437",
                      "gray": "#7D7D7D",
                      "instagram": "#C32AA3",
                      "lightgray": "#E5E5E5",
                      "linkedin": "#0077B5",
                      "logo": "#000",
                      "midgray": "#CCC",
                      "primary": "#0A7BC2",
                      "primaryLight": "#0C91E4",
                      "rss": "#7D7D7D",
                      "secondarytext": "#7D7D7D",
                      "success": "#23891F",
                      "twitter": "#1DA1F2",
                      "white": "#FFF",
                      "whiteOverlay": "rgba(255,255,255,0.7)",
                      "whitesmoke": "#F5F5F5",
                      "youtube": "#FF0000",
                    },
                    "columnGutter": "2.25rem",
                    "columnGutter19": Object {
                      "largeUp": "1.5rem",
                      "small19": "1rem",
                      "xlargeUp": "2rem",
                    },
                    "columnPadding": "1.125rem",
                    "columnPadding19": Object {
                      "largeUp": "0.75rem",
                      "small19": "0.5rem",
                      "xlargeUp": "1rem",
                    },
                    "featuredContentWidth": "1024px",
                    "globalNavHeight": "80px",
                    "linkTransition": "0.1s ease-out",
                    "mainContainerWidth": "66.5%",
                    "mainContentMaxWidth": "800px",
                    "pageWidth": "1336px",
                    "postContentMaxWidth": "636px",
                    "scrollbackNavHeight": "60px",
                    "sidebarContainerWidth": "33.5%",
                    "sidebarContentMaxWidth": "360px",
                    "sidebarContentMinWidth": "300px",
                    "slideshowTransitionDuration": "0.2s",
                    "typography": Object {
                      "body": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "embiggenedHeadlineSize": "34px",
                      "headline": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "headlineLineHeight": "1.3",
                      "headlineSize": "24px",
                      "permalinkHeadlineLineHeight": "1.2",
                      "permalinkHeadlineSize": Object {
                        "mediumUp": "2.5rem",
                        "small": "2rem",
                        "xxxlargeUp": "3rem",
                      },
                      "primary": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "serif": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "tertiary": Object {
                        "fontFamily": "FiraSans, sans-serif",
                        "fontSizes": Object {
                          "large": "29px",
                          "medium": "21px",
                          "small": "17px",
                          "xlarge": "35px",
                          "xsmall": "15px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "utility": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                    },
                  }
                }
              >
                <textfield__KinjaFormFieldWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "margin-bottom:32px;flex-basis:100%;&:hover{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}&:focus-within{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}",
                            [Function],
                            " ",
                            ".c12",
                            "{margin-top:8px;}",
                          ],
                        },
                        "displayName": "textfield__KinjaFormFieldWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2"
                    >
                      <textfield__KinjaLabel
                        error=""
                        htmlFor="imageURL"
                      >
                        <StyledComponent
                          error=""
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c3",
                                "isStatic": false,
                                "lastClassName": "hPfEuP",
                                "rules": Array [
                                  "&&{color:",
                                  [Function],
                                  ";font-size:16px;line-height:21px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaLabel",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c3",
                              "target": "label",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          htmlFor="imageURL"
                        >
                          <label
                            className="c3 c4"
                            htmlFor="imageURL"
                          >
                            Paste the URL of the image
                          </label>
                        </StyledComponent>
                      </textfield__KinjaLabel>
                      <textfield__KinjaTextFieldWrapper
                        hasCustomIcon={false}
                        status="default"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "position:relative;&:hover{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:disabled{border-bottom-color:",
                                  [Function],
                                  ";cursor:not-allowed;}",
                                  ".c13",
                                  "{padding:0;",
                                  [Function],
                                  "}",
                                  ".textfield__KinjaTextField-sc-1a9gghc-2",
                                  ",",
                                  ".c13",
                                  "{",
                                  [Function],
                                  " ",
                                  [Function],
                                  "}",
                                  ".c11",
                                  "{top:9px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaTextFieldWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hasCustomIcon={false}
                          status="default"
                        >
                          <div
                            className="c5 c6"
                          >
                            <textfield__KinjaTextField
                              error=""
                              id="imageURL"
                              name="imageURL"
                              onChange={[Function]}
                              status="default"
                              type="text"
                              value="https://res.cloudinary.com/gawker-media/image/upload/v1495783363/e8mjtsueifdddwlhvwlj.png"
                            >
                              <StyledComponent
                                error=""
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                      "isStatic": false,
                                      "lastClassName": "jnyTqH",
                                      "rules": Array [
                                        "&&{border-bottom:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                        [Function],
                                        ";}&:hover{border-bottom-color:",
                                        [Function],
                                        ";}&&&:focus,&&&:active{border-bottom-color:",
                                        [Function],
                                        ";}&:disabled{border-bottom-color:",
                                        [Function],
                                        ";cursor:not-allowed;}",
                                        ";",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaTextField",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                    "target": "input",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="imageURL"
                                name="imageURL"
                                onChange={[Function]}
                                status="default"
                                type="text"
                                value="https://res.cloudinary.com/gawker-media/image/upload/v1495783363/e8mjtsueifdddwlhvwlj.png"
                              >
                                <input
                                  className="c7"
                                  id="imageURL"
                                  name="imageURL"
                                  onChange={[Function]}
                                  type="text"
                                  value="https://res.cloudinary.com/gawker-media/image/upload/v1495783363/e8mjtsueifdddwlhvwlj.png"
                                />
                              </StyledComponent>
                            </textfield__KinjaTextField>
                          </div>
                        </StyledComponent>
                      </textfield__KinjaTextFieldWrapper>
                    </div>
                  </StyledComponent>
                </textfield__KinjaFormFieldWrapper>
              </ThemeProvider>
            </Theme>
          </Textfield18>
          <image-upload__ImageFileInput>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c8",
                    "isStatic": true,
                    "lastClassName": "caIkJs",
                    "rules": Array [],
                  },
                  "displayName": "image-upload__ImageFileInput",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c8",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c8 "
              >
                <image-upload__FileInputText>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "image-upload__FileInputText-d8l6nt-1",
                          "isStatic": true,
                          "lastClassName": "c9",
                          "rules": Array [
                            "white-space:nowrap;",
                          ],
                        },
                        "displayName": "image-upload__FileInputText",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                        "target": "p",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <p
                      className="c9"
                    >
                      <span
                        className="show-for-small-only"
                      >
                        Or upload one from your device
                      </span>
                      <span
                        className="show-for-medium-up"
                      >
                        Or upload one from your computer
                      </span>
                    </p>
                  </StyledComponent>
                </image-upload__FileInputText>
                <Filefield
                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                  error={null}
                  name="fileUpload"
                  onChange={[Function]}
                >
                  <Field
                    error={null}
                  >
                    <EnsureDefaultTheme>
                      <ThemeProvider
                        theme={[Function]}
                      >
                        <field__Wrapper
                          className="field"
                        >
                          <StyledComponent
                            className="field"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "field__Wrapper-sc-1k7q01z-0",
                                  "isStatic": false,
                                  "lastClassName": "c10",
                                  "rules": Array [
                                    "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                    [Function],
                                  ],
                                },
                                "displayName": "field__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <label
                              className="field c10"
                            >
                              <filefield__Input
                                accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                error={null}
                                name="fileUpload"
                                onChange={[Function]}
                              >
                                <StyledComponent
                                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                  error={null}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [
                                        Object {
                                          "type": "file",
                                        },
                                      ],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "filefield__Input-pd0ao4-0",
                                        "isStatic": false,
                                        "lastClassName": "dLFlOg",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "filefield__Input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "filefield__Input-pd0ao4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="fileUpload"
                                  onChange={[Function]}
                                >
                                  <input
                                    accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                    className=""
                                    name="fileUpload"
                                    onChange={[Function]}
                                    type="file"
                                  />
                                </StyledComponent>
                              </filefield__Input>
                            </label>
                          </StyledComponent>
                        </field__Wrapper>
                      </ThemeProvider>
                    </EnsureDefaultTheme>
                  </Field>
                </Filefield>
              </div>
            </StyledComponent>
          </image-upload__ImageFileInput>
        </div>
      </StyledComponent>
    </image-upload__ImageInputContainer>
  </div>
</ImageUpload>
`;

exports[`<ImageUpload /> should show error message when url is not valid 1`] = `
.c10 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c4.c4 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c2 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c2:hover .c3 {
  color: #222;
}

.c2:focus-within .c3 {
  color: #0A7BC2;
}

.c2 .c12 {
  margin-top: 8px;
}

.c7.c7 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c7.c7.c7:hover,
.c7.c7.c7:active,
.c7.c7.c7:focus {
  color: #222;
}

.c7:hover {
  border-bottom-color: #666;
}

.c7.c7.c7:focus,
.c7.c7.c7:active {
  border-bottom-color: #0A7BC2;
}

.c7:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 {
  position: relative;
}

.c6:hover {
  border-bottom-color: #666;
}

.c6:hover .c5:focus,
.c6:hover .c6:active {
  border-bottom-color: #0A7BC2;
}

.c6:hover .c5:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 .c13 {
  padding: 0;
}

.c6 .c11 {
  top: 9px;
}

.c0 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c9 {
  white-space: nowrap;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .c8 {
  padding: 0 10px;
}

.c1 .c8 label {
  padding: 0 10px;
  width: 100%;
}

<ImageUpload
  imageUploader={[MockFunction]}
  language="en-US"
  onChange={[Function]}
  onError={[Function]}
  onInputChange={[Function]}
  onUploadStarted={[Function]}
>
  <div>
    <image-upload__ImageUploadTitle>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "text-align:center;font-weight:400;font-size:1.312rem;",
              ],
            },
            "displayName": "image-upload__ImageUploadTitle",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
            "target": "p",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <p
          className="c0"
        >
          <span>
            Insert an image from the web
          </span>
        </p>
      </StyledComponent>
    </image-upload__ImageUploadTitle>
    <image-upload__ImageInputContainer>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
              "isStatic": true,
              "lastClassName": "c1",
              "rules": Array [
                "display:flex;",
                ".c8",
                "{padding:0 10px;label{padding:0 10px;width:100%;}}",
              ],
            },
            "displayName": "image-upload__ImageInputContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c1"
        >
          <Textfield18
            blogTheme="default"
            error=""
            label="Paste the URL of the image"
            name="imageURL"
            onChange={[Function]}
            value=""
          >
            <Theme
              blog="default"
              theme={
                Object {
                  "breakpointBanner": "969px",
                  "breakpointMedium": "53.125em",
                  "color": Object {
                    "alert": "#EEB544",
                    "amazon": "#F5C056",
                    "backgroundLayer": "rgba(0,0,0,0.45)",
                    "backgroundLight": "#E6F2F8",
                    "black": "#000",
                    "blackOverlay": "rgba(0,0,0,0.7)",
                    "bodytext": "#222",
                    "commerce": "#72AD75",
                    "darkBlackOverlay": "rgba(0,0,0,0.9)",
                    "darkgray": "#666",
                    "darksmoke": "#222",
                    "error": "#D24A1D",
                    "facebook": "#1877F2",
                    "foregroundLayer": "rgba(0,0,0,0.4)",
                    "google": "#DB4437",
                    "gray": "#7D7D7D",
                    "instagram": "#C32AA3",
                    "lightgray": "#E5E5E5",
                    "linkedin": "#0077B5",
                    "logo": "#000",
                    "midgray": "#CCC",
                    "primary": "#0A7BC2",
                    "primaryLight": "#0C91E4",
                    "rss": "#7D7D7D",
                    "secondarytext": "#7D7D7D",
                    "success": "#23891F",
                    "twitter": "#1DA1F2",
                    "white": "#FFF",
                    "whiteOverlay": "rgba(255,255,255,0.7)",
                    "whitesmoke": "#F5F5F5",
                    "youtube": "#FF0000",
                  },
                  "columnGutter": "2.25rem",
                  "columnGutter19": Object {
                    "largeUp": "1.5rem",
                    "small19": "1rem",
                    "xlargeUp": "2rem",
                  },
                  "columnPadding": "1.125rem",
                  "columnPadding19": Object {
                    "largeUp": "0.75rem",
                    "small19": "0.5rem",
                    "xlargeUp": "1rem",
                  },
                  "featuredContentWidth": "1024px",
                  "globalNavHeight": "80px",
                  "linkTransition": "0.1s ease-out",
                  "mainContainerWidth": "66.5%",
                  "mainContentMaxWidth": "800px",
                  "pageWidth": "1336px",
                  "postContentMaxWidth": "636px",
                  "scrollbackNavHeight": "60px",
                  "sidebarContainerWidth": "33.5%",
                  "sidebarContentMaxWidth": "360px",
                  "sidebarContentMinWidth": "300px",
                  "slideshowTransitionDuration": "0.2s",
                  "typography": Object {
                    "body": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "embiggenedHeadlineSize": "34px",
                    "headline": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "headlineLineHeight": "1.3",
                    "headlineSize": "24px",
                    "permalinkHeadlineLineHeight": "1.2",
                    "permalinkHeadlineSize": Object {
                      "mediumUp": "2.5rem",
                      "small": "2rem",
                      "xxxlargeUp": "3rem",
                    },
                    "primary": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "serif": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "tertiary": Object {
                      "fontFamily": "FiraSans, sans-serif",
                      "fontSizes": Object {
                        "large": "29px",
                        "medium": "21px",
                        "small": "17px",
                        "xlarge": "35px",
                        "xsmall": "15px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "utility": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                  },
                }
              }
            >
              <ThemeProvider
                theme={
                  Object {
                    "blog": "default",
                    "breakpointBanner": "969px",
                    "breakpointMedium": "53.125em",
                    "color": Object {
                      "alert": "#EEB544",
                      "amazon": "#F5C056",
                      "backgroundLayer": "rgba(0,0,0,0.45)",
                      "backgroundLight": "#E6F2F8",
                      "black": "#000",
                      "blackOverlay": "rgba(0,0,0,0.7)",
                      "bodytext": "#222",
                      "commerce": "#72AD75",
                      "darkBlackOverlay": "rgba(0,0,0,0.9)",
                      "darkgray": "#666",
                      "darksmoke": "#222",
                      "error": "#D24A1D",
                      "facebook": "#1877F2",
                      "foregroundLayer": "rgba(0,0,0,0.4)",
                      "google": "#DB4437",
                      "gray": "#7D7D7D",
                      "instagram": "#C32AA3",
                      "lightgray": "#E5E5E5",
                      "linkedin": "#0077B5",
                      "logo": "#000",
                      "midgray": "#CCC",
                      "primary": "#0A7BC2",
                      "primaryLight": "#0C91E4",
                      "rss": "#7D7D7D",
                      "secondarytext": "#7D7D7D",
                      "success": "#23891F",
                      "twitter": "#1DA1F2",
                      "white": "#FFF",
                      "whiteOverlay": "rgba(255,255,255,0.7)",
                      "whitesmoke": "#F5F5F5",
                      "youtube": "#FF0000",
                    },
                    "columnGutter": "2.25rem",
                    "columnGutter19": Object {
                      "largeUp": "1.5rem",
                      "small19": "1rem",
                      "xlargeUp": "2rem",
                    },
                    "columnPadding": "1.125rem",
                    "columnPadding19": Object {
                      "largeUp": "0.75rem",
                      "small19": "0.5rem",
                      "xlargeUp": "1rem",
                    },
                    "featuredContentWidth": "1024px",
                    "globalNavHeight": "80px",
                    "linkTransition": "0.1s ease-out",
                    "mainContainerWidth": "66.5%",
                    "mainContentMaxWidth": "800px",
                    "pageWidth": "1336px",
                    "postContentMaxWidth": "636px",
                    "scrollbackNavHeight": "60px",
                    "sidebarContainerWidth": "33.5%",
                    "sidebarContentMaxWidth": "360px",
                    "sidebarContentMinWidth": "300px",
                    "slideshowTransitionDuration": "0.2s",
                    "typography": Object {
                      "body": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "embiggenedHeadlineSize": "34px",
                      "headline": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "headlineLineHeight": "1.3",
                      "headlineSize": "24px",
                      "permalinkHeadlineLineHeight": "1.2",
                      "permalinkHeadlineSize": Object {
                        "mediumUp": "2.5rem",
                        "small": "2rem",
                        "xxxlargeUp": "3rem",
                      },
                      "primary": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "serif": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "tertiary": Object {
                        "fontFamily": "FiraSans, sans-serif",
                        "fontSizes": Object {
                          "large": "29px",
                          "medium": "21px",
                          "small": "17px",
                          "xlarge": "35px",
                          "xsmall": "15px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "utility": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                    },
                  }
                }
              >
                <textfield__KinjaFormFieldWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "margin-bottom:32px;flex-basis:100%;&:hover{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}&:focus-within{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}",
                            [Function],
                            " ",
                            ".c12",
                            "{margin-top:8px;}",
                          ],
                        },
                        "displayName": "textfield__KinjaFormFieldWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2"
                    >
                      <textfield__KinjaLabel
                        error=""
                        htmlFor="imageURL"
                      >
                        <StyledComponent
                          error=""
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c3",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "&&{color:",
                                  [Function],
                                  ";font-size:16px;line-height:21px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaLabel",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c3",
                              "target": "label",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          htmlFor="imageURL"
                        >
                          <label
                            className="c3 c4"
                            htmlFor="imageURL"
                          >
                            Paste the URL of the image
                          </label>
                        </StyledComponent>
                      </textfield__KinjaLabel>
                      <textfield__KinjaTextFieldWrapper
                        hasCustomIcon={false}
                        status="default"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "position:relative;&:hover{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:disabled{border-bottom-color:",
                                  [Function],
                                  ";cursor:not-allowed;}",
                                  ".c13",
                                  "{padding:0;",
                                  [Function],
                                  "}",
                                  ".textfield__KinjaTextField-sc-1a9gghc-2",
                                  ",",
                                  ".c13",
                                  "{",
                                  [Function],
                                  " ",
                                  [Function],
                                  "}",
                                  ".c11",
                                  "{top:9px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaTextFieldWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hasCustomIcon={false}
                          status="default"
                        >
                          <div
                            className="c5 c6"
                          >
                            <textfield__KinjaTextField
                              error=""
                              id="imageURL"
                              name="imageURL"
                              onChange={[Function]}
                              status="default"
                              type="text"
                              value=""
                            >
                              <StyledComponent
                                error=""
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "&&{border-bottom:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                        [Function],
                                        ";}&:hover{border-bottom-color:",
                                        [Function],
                                        ";}&&&:focus,&&&:active{border-bottom-color:",
                                        [Function],
                                        ";}&:disabled{border-bottom-color:",
                                        [Function],
                                        ";cursor:not-allowed;}",
                                        ";",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaTextField",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                    "target": "input",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="imageURL"
                                name="imageURL"
                                onChange={[Function]}
                                status="default"
                                type="text"
                                value=""
                              >
                                <input
                                  className="c7"
                                  id="imageURL"
                                  name="imageURL"
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                              </StyledComponent>
                            </textfield__KinjaTextField>
                          </div>
                        </StyledComponent>
                      </textfield__KinjaTextFieldWrapper>
                    </div>
                  </StyledComponent>
                </textfield__KinjaFormFieldWrapper>
              </ThemeProvider>
            </Theme>
          </Textfield18>
          <image-upload__ImageFileInput>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c8",
                    "isStatic": true,
                    "lastClassName": "caIkJs",
                    "rules": Array [],
                  },
                  "displayName": "image-upload__ImageFileInput",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c8",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c8 "
              >
                <image-upload__FileInputText>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "image-upload__FileInputText-d8l6nt-1",
                          "isStatic": true,
                          "lastClassName": "c9",
                          "rules": Array [
                            "white-space:nowrap;",
                          ],
                        },
                        "displayName": "image-upload__FileInputText",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                        "target": "p",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <p
                      className="c9"
                    >
                      <span
                        className="show-for-small-only"
                      >
                        Or upload one from your device
                      </span>
                      <span
                        className="show-for-medium-up"
                      >
                        Or upload one from your computer
                      </span>
                    </p>
                  </StyledComponent>
                </image-upload__FileInputText>
                <Filefield
                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                  error={null}
                  name="fileUpload"
                  onChange={[Function]}
                >
                  <Field
                    error={null}
                  >
                    <EnsureDefaultTheme>
                      <ThemeProvider
                        theme={[Function]}
                      >
                        <field__Wrapper
                          className="field"
                        >
                          <StyledComponent
                            className="field"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "field__Wrapper-sc-1k7q01z-0",
                                  "isStatic": false,
                                  "lastClassName": "c10",
                                  "rules": Array [
                                    "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                    [Function],
                                  ],
                                },
                                "displayName": "field__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <label
                              className="field c10"
                            >
                              <filefield__Input
                                accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                error={null}
                                name="fileUpload"
                                onChange={[Function]}
                              >
                                <StyledComponent
                                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                  error={null}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [
                                        Object {
                                          "type": "file",
                                        },
                                      ],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "filefield__Input-pd0ao4-0",
                                        "isStatic": false,
                                        "lastClassName": "dLFlOg",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "filefield__Input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "filefield__Input-pd0ao4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="fileUpload"
                                  onChange={[Function]}
                                >
                                  <input
                                    accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                    className=""
                                    name="fileUpload"
                                    onChange={[Function]}
                                    type="file"
                                  />
                                </StyledComponent>
                              </filefield__Input>
                            </label>
                          </StyledComponent>
                        </field__Wrapper>
                      </ThemeProvider>
                    </EnsureDefaultTheme>
                  </Field>
                </Filefield>
              </div>
            </StyledComponent>
          </image-upload__ImageFileInput>
        </div>
      </StyledComponent>
    </image-upload__ImageInputContainer>
  </div>
</ImageUpload>
`;

exports[`<ImageUpload /> should show error message when url is not valid 2`] = `
.c14 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c10 {
  fill: currentColor;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  background-color: #D24A1D;
  border-radius: 3px;
  color: #FFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  padding: 0.1875rem 0.5rem 0.1875rem 0.25rem;
  position: relative;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.c9:before {
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  content: " ";
  height: 0;
  position: absolute;
  width: 0;
}

.c9:before {
  border-bottom: 5px solid #D24A1D;
  left: 8px;
  top: -5px;
}

.c11 {
  font-size: 0.875rem;
  line-height: 1.125rem;
  margin-bottom: 0;
  margin-left: 0.25rem;
}

.c4.c4 {
  color: #D24A1D;
  font-size: 16px;
  line-height: 21px;
}

.c2 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c2:hover .c3 {
  color: #222;
}

.c2:focus-within .c3 {
  color: #0A7BC2;
}

.c2 .c8 {
  margin-top: 8px;
}

.c7.c7 {
  border-bottom: 1px solid #D24A1D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c7.c7.c7:hover,
.c7.c7.c7:active,
.c7.c7.c7:focus {
  color: #222;
}

.c7:hover {
  border-bottom-color: #a53a17;
}

.c7.c7.c7:focus,
.c7.c7.c7:active {
  border-bottom-color: #D24A1D;
}

.c7:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 {
  position: relative;
}

.c6:hover {
  border-bottom-color: #666;
}

.c6:hover .c5:focus,
.c6:hover .c6:active {
  border-bottom-color: #0A7BC2;
}

.c6:hover .c5:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 .c16 {
  padding: 0;
}

.c6 .c15 {
  top: 9px;
}

.c0 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c13 {
  white-space: nowrap;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .c12 {
  padding: 0 10px;
}

.c1 .c12 label {
  padding: 0 10px;
  width: 100%;
}

<ImageUpload
  imageUploader={[MockFunction]}
  language="en-US"
  onChange={[Function]}
  onError={[Function]}
  onInputChange={[Function]}
  onUploadStarted={[Function]}
>
  <div>
    <image-upload__ImageUploadTitle>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "text-align:center;font-weight:400;font-size:1.312rem;",
              ],
            },
            "displayName": "image-upload__ImageUploadTitle",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
            "target": "p",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <p
          className="c0"
        >
          <span>
            Insert an image from the web
          </span>
        </p>
      </StyledComponent>
    </image-upload__ImageUploadTitle>
    <image-upload__ImageInputContainer>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
              "isStatic": true,
              "lastClassName": "c1",
              "rules": Array [
                "display:flex;",
                ".c12",
                "{padding:0 10px;label{padding:0 10px;width:100%;}}",
              ],
            },
            "displayName": "image-upload__ImageInputContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c1"
        >
          <Textfield18
            blogTheme="default"
            error="This URL is invalid. Please use a valid image URL."
            label="Paste the URL of the image"
            name="imageURL"
            onChange={[Function]}
            value="foo"
          >
            <Theme
              blog="default"
              theme={
                Object {
                  "breakpointBanner": "969px",
                  "breakpointMedium": "53.125em",
                  "color": Object {
                    "alert": "#EEB544",
                    "amazon": "#F5C056",
                    "backgroundLayer": "rgba(0,0,0,0.45)",
                    "backgroundLight": "#E6F2F8",
                    "black": "#000",
                    "blackOverlay": "rgba(0,0,0,0.7)",
                    "bodytext": "#222",
                    "commerce": "#72AD75",
                    "darkBlackOverlay": "rgba(0,0,0,0.9)",
                    "darkgray": "#666",
                    "darksmoke": "#222",
                    "error": "#D24A1D",
                    "facebook": "#1877F2",
                    "foregroundLayer": "rgba(0,0,0,0.4)",
                    "google": "#DB4437",
                    "gray": "#7D7D7D",
                    "instagram": "#C32AA3",
                    "lightgray": "#E5E5E5",
                    "linkedin": "#0077B5",
                    "logo": "#000",
                    "midgray": "#CCC",
                    "primary": "#0A7BC2",
                    "primaryLight": "#0C91E4",
                    "rss": "#7D7D7D",
                    "secondarytext": "#7D7D7D",
                    "success": "#23891F",
                    "twitter": "#1DA1F2",
                    "white": "#FFF",
                    "whiteOverlay": "rgba(255,255,255,0.7)",
                    "whitesmoke": "#F5F5F5",
                    "youtube": "#FF0000",
                  },
                  "columnGutter": "2.25rem",
                  "columnGutter19": Object {
                    "largeUp": "1.5rem",
                    "small19": "1rem",
                    "xlargeUp": "2rem",
                  },
                  "columnPadding": "1.125rem",
                  "columnPadding19": Object {
                    "largeUp": "0.75rem",
                    "small19": "0.5rem",
                    "xlargeUp": "1rem",
                  },
                  "featuredContentWidth": "1024px",
                  "globalNavHeight": "80px",
                  "linkTransition": "0.1s ease-out",
                  "mainContainerWidth": "66.5%",
                  "mainContentMaxWidth": "800px",
                  "pageWidth": "1336px",
                  "postContentMaxWidth": "636px",
                  "scrollbackNavHeight": "60px",
                  "sidebarContainerWidth": "33.5%",
                  "sidebarContentMaxWidth": "360px",
                  "sidebarContentMinWidth": "300px",
                  "slideshowTransitionDuration": "0.2s",
                  "typography": Object {
                    "body": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "embiggenedHeadlineSize": "34px",
                    "headline": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "headlineLineHeight": "1.3",
                    "headlineSize": "24px",
                    "permalinkHeadlineLineHeight": "1.2",
                    "permalinkHeadlineSize": Object {
                      "mediumUp": "2.5rem",
                      "small": "2rem",
                      "xxxlargeUp": "3rem",
                    },
                    "primary": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "serif": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "tertiary": Object {
                      "fontFamily": "FiraSans, sans-serif",
                      "fontSizes": Object {
                        "large": "29px",
                        "medium": "21px",
                        "small": "17px",
                        "xlarge": "35px",
                        "xsmall": "15px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "utility": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                  },
                }
              }
            >
              <ThemeProvider
                theme={
                  Object {
                    "blog": "default",
                    "breakpointBanner": "969px",
                    "breakpointMedium": "53.125em",
                    "color": Object {
                      "alert": "#EEB544",
                      "amazon": "#F5C056",
                      "backgroundLayer": "rgba(0,0,0,0.45)",
                      "backgroundLight": "#E6F2F8",
                      "black": "#000",
                      "blackOverlay": "rgba(0,0,0,0.7)",
                      "bodytext": "#222",
                      "commerce": "#72AD75",
                      "darkBlackOverlay": "rgba(0,0,0,0.9)",
                      "darkgray": "#666",
                      "darksmoke": "#222",
                      "error": "#D24A1D",
                      "facebook": "#1877F2",
                      "foregroundLayer": "rgba(0,0,0,0.4)",
                      "google": "#DB4437",
                      "gray": "#7D7D7D",
                      "instagram": "#C32AA3",
                      "lightgray": "#E5E5E5",
                      "linkedin": "#0077B5",
                      "logo": "#000",
                      "midgray": "#CCC",
                      "primary": "#0A7BC2",
                      "primaryLight": "#0C91E4",
                      "rss": "#7D7D7D",
                      "secondarytext": "#7D7D7D",
                      "success": "#23891F",
                      "twitter": "#1DA1F2",
                      "white": "#FFF",
                      "whiteOverlay": "rgba(255,255,255,0.7)",
                      "whitesmoke": "#F5F5F5",
                      "youtube": "#FF0000",
                    },
                    "columnGutter": "2.25rem",
                    "columnGutter19": Object {
                      "largeUp": "1.5rem",
                      "small19": "1rem",
                      "xlargeUp": "2rem",
                    },
                    "columnPadding": "1.125rem",
                    "columnPadding19": Object {
                      "largeUp": "0.75rem",
                      "small19": "0.5rem",
                      "xlargeUp": "1rem",
                    },
                    "featuredContentWidth": "1024px",
                    "globalNavHeight": "80px",
                    "linkTransition": "0.1s ease-out",
                    "mainContainerWidth": "66.5%",
                    "mainContentMaxWidth": "800px",
                    "pageWidth": "1336px",
                    "postContentMaxWidth": "636px",
                    "scrollbackNavHeight": "60px",
                    "sidebarContainerWidth": "33.5%",
                    "sidebarContentMaxWidth": "360px",
                    "sidebarContentMinWidth": "300px",
                    "slideshowTransitionDuration": "0.2s",
                    "typography": Object {
                      "body": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "embiggenedHeadlineSize": "34px",
                      "headline": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "headlineLineHeight": "1.3",
                      "headlineSize": "24px",
                      "permalinkHeadlineLineHeight": "1.2",
                      "permalinkHeadlineSize": Object {
                        "mediumUp": "2.5rem",
                        "small": "2rem",
                        "xxxlargeUp": "3rem",
                      },
                      "primary": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "serif": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "tertiary": Object {
                        "fontFamily": "FiraSans, sans-serif",
                        "fontSizes": Object {
                          "large": "29px",
                          "medium": "21px",
                          "small": "17px",
                          "xlarge": "35px",
                          "xsmall": "15px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "utility": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                    },
                  }
                }
              >
                <textfield__KinjaFormFieldWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "margin-bottom:32px;flex-basis:100%;&:hover{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}&:focus-within{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}",
                            [Function],
                            " ",
                            ".c8",
                            "{margin-top:8px;}",
                          ],
                        },
                        "displayName": "textfield__KinjaFormFieldWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2"
                    >
                      <textfield__KinjaLabel
                        error="This URL is invalid. Please use a valid image URL."
                        htmlFor="imageURL"
                      >
                        <StyledComponent
                          error="This URL is invalid. Please use a valid image URL."
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c3",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "&&{color:",
                                  [Function],
                                  ";font-size:16px;line-height:21px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaLabel",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c3",
                              "target": "label",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          htmlFor="imageURL"
                        >
                          <label
                            className="c3 c4"
                            htmlFor="imageURL"
                          >
                            Paste the URL of the image
                          </label>
                        </StyledComponent>
                      </textfield__KinjaLabel>
                      <textfield__KinjaTextFieldWrapper
                        hasCustomIcon={false}
                        status="default"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "position:relative;&:hover{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:disabled{border-bottom-color:",
                                  [Function],
                                  ";cursor:not-allowed;}",
                                  ".c16",
                                  "{padding:0;",
                                  [Function],
                                  "}",
                                  ".textfield__KinjaTextField-sc-1a9gghc-2",
                                  ",",
                                  ".c16",
                                  "{",
                                  [Function],
                                  " ",
                                  [Function],
                                  "}",
                                  ".c15",
                                  "{top:9px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaTextFieldWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hasCustomIcon={false}
                          status="default"
                        >
                          <div
                            className="c5 c6"
                          >
                            <textfield__KinjaTextField
                              error="This URL is invalid. Please use a valid image URL."
                              id="imageURL"
                              name="imageURL"
                              onChange={[Function]}
                              status="default"
                              type="text"
                              value="foo"
                            >
                              <StyledComponent
                                error="This URL is invalid. Please use a valid image URL."
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "&&{border-bottom:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                        [Function],
                                        ";}&:hover{border-bottom-color:",
                                        [Function],
                                        ";}&&&:focus,&&&:active{border-bottom-color:",
                                        [Function],
                                        ";}&:disabled{border-bottom-color:",
                                        [Function],
                                        ";cursor:not-allowed;}",
                                        ";",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaTextField",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                    "target": "input",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="imageURL"
                                name="imageURL"
                                onChange={[Function]}
                                status="default"
                                type="text"
                                value="foo"
                              >
                                <input
                                  className="c7"
                                  id="imageURL"
                                  name="imageURL"
                                  onChange={[Function]}
                                  type="text"
                                  value="foo"
                                />
                              </StyledComponent>
                            </textfield__KinjaTextField>
                          </div>
                        </StyledComponent>
                      </textfield__KinjaTextFieldWrapper>
                      <feedback__StyledFeedback
                        arrow="topleft"
                        color="error"
                        text="This URL is invalid. Please use a valid image URL."
                      >
                        <StyledComponent
                          arrow="topleft"
                          color="error"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c8",
                                "isStatic": true,
                                "lastClassName": "dkcDmi",
                                "rules": Array [],
                              },
                              "displayName": "feedback__StyledFeedback",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c8",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          text="This URL is invalid. Please use a valid image URL."
                        >
                          <Feedback
                            arrow="topleft"
                            className="c8 "
                            color="error"
                            text="This URL is invalid. Please use a valid image URL."
                          >
                            <feedback__FeedbackContainer
                              arrow="topleft"
                              className="c8 "
                              color="error"
                            >
                              <StyledComponent
                                arrow="topleft"
                                className="c8 "
                                color="error"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "feedback__FeedbackContainer-sc-11pii97-0",
                                      "isStatic": false,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "background-color:",
                                        [Function],
                                        ";border-radius:3px;color:",
                                        [Function],
                                        ";display:flex;flex-direction:row;padding:0.1875rem 0.5rem 0.1875rem 0.25rem;position:relative;width:fit-content;",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                        " ",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "feedback__FeedbackContainer",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "feedback__FeedbackContainer-sc-11pii97-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c8 c9"
                                  color="error"
                                >
                                  <FeedbackIcon
                                    color="error"
                                  >
                                    <ErrorIcon>
                                      <Icon19>
                                        <icon19__IconWrapper>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "icon19__IconWrapper-iyvn34-0",
                                                  "isStatic": true,
                                                  "lastClassName": "c10",
                                                  "rules": Array [
                                                    "fill:currentColor;display:flex;",
                                                  ],
                                                },
                                                "displayName": "icon19__IconWrapper",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "icon19__IconWrapper-iyvn34-0",
                                                "target": "span",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <span
                                              className="c10"
                                            >
                                              <Error
                                                aria-label="Error icon"
                                                height="18"
                                                viewBox="0 0 18 18"
                                                width="18"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <svg
                                                  aria-label="Error icon"
                                                  height="18"
                                                  viewBox="0 0 18 18"
                                                  width="18"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M9.94 2.6l6.37 10.79c.48.8.03 1.61-.91 1.61H2.6c-.93 0-1.38-.81-.9-1.61L8.05 2.6c.48-.8 1.4-.8 1.88 0zm-1.02.5L2.55 13.9c-.08.14-.1.1.06.1H15.4c.16 0 .14.04.05-.1L9.08 3.1c-.09-.14-.07-.14-.16 0zM9 11a1 1 0 0 1 1 1 1 1 0 0 1-1 1c-.54 0-1-.46-1-1a1 1 0 0 1 1-1zm0-5c.7 0 1 .91 1 1.99C10 9.09 9.7 10 9 10s-1-.93-1-2.01C8 6.92 8.31 6 9 6z"
                                                    fillRule="evenodd"
                                                  />
                                                </svg>
                                              </Error>
                                            </span>
                                          </StyledComponent>
                                        </icon19__IconWrapper>
                                      </Icon19>
                                    </ErrorIcon>
                                  </FeedbackIcon>
                                  <feedback__FeedbackText>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "feedback__FeedbackText-sc-11pii97-1",
                                            "isStatic": true,
                                            "lastClassName": "c11",
                                            "rules": Array [
                                              "font-size:0.875rem;line-height:1.125rem;margin-bottom:0;margin-left:0.25rem;",
                                            ],
                                          },
                                          "displayName": "feedback__FeedbackText",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "feedback__FeedbackText-sc-11pii97-1",
                                          "target": "p",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <p
                                        className="c11"
                                      >
                                        This URL is invalid. Please use a valid image URL.
                                      </p>
                                    </StyledComponent>
                                  </feedback__FeedbackText>
                                </div>
                              </StyledComponent>
                            </feedback__FeedbackContainer>
                          </Feedback>
                        </StyledComponent>
                      </feedback__StyledFeedback>
                    </div>
                  </StyledComponent>
                </textfield__KinjaFormFieldWrapper>
              </ThemeProvider>
            </Theme>
          </Textfield18>
          <image-upload__ImageFileInput>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c12",
                    "isStatic": true,
                    "lastClassName": "caIkJs",
                    "rules": Array [],
                  },
                  "displayName": "image-upload__ImageFileInput",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c12",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c12 "
              >
                <image-upload__FileInputText>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "image-upload__FileInputText-d8l6nt-1",
                          "isStatic": true,
                          "lastClassName": "c13",
                          "rules": Array [
                            "white-space:nowrap;",
                          ],
                        },
                        "displayName": "image-upload__FileInputText",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                        "target": "p",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <p
                      className="c13"
                    >
                      <span
                        className="show-for-small-only"
                      >
                        Or upload one from your device
                      </span>
                      <span
                        className="show-for-medium-up"
                      >
                        Or upload one from your computer
                      </span>
                    </p>
                  </StyledComponent>
                </image-upload__FileInputText>
                <Filefield
                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                  error={null}
                  name="fileUpload"
                  onChange={[Function]}
                >
                  <Field
                    error={null}
                  >
                    <EnsureDefaultTheme>
                      <ThemeProvider
                        theme={[Function]}
                      >
                        <field__Wrapper
                          className="field"
                        >
                          <StyledComponent
                            className="field"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "field__Wrapper-sc-1k7q01z-0",
                                  "isStatic": false,
                                  "lastClassName": "c14",
                                  "rules": Array [
                                    "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                    [Function],
                                  ],
                                },
                                "displayName": "field__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <label
                              className="field c14"
                            >
                              <filefield__Input
                                accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                error={null}
                                name="fileUpload"
                                onChange={[Function]}
                              >
                                <StyledComponent
                                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                  error={null}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [
                                        Object {
                                          "type": "file",
                                        },
                                      ],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "filefield__Input-pd0ao4-0",
                                        "isStatic": false,
                                        "lastClassName": "dLFlOg",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "filefield__Input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "filefield__Input-pd0ao4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="fileUpload"
                                  onChange={[Function]}
                                >
                                  <input
                                    accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                    className=""
                                    name="fileUpload"
                                    onChange={[Function]}
                                    type="file"
                                  />
                                </StyledComponent>
                              </filefield__Input>
                            </label>
                          </StyledComponent>
                        </field__Wrapper>
                      </ThemeProvider>
                    </EnsureDefaultTheme>
                  </Field>
                </Filefield>
              </div>
            </StyledComponent>
          </image-upload__ImageFileInput>
        </div>
      </StyledComponent>
    </image-upload__ImageInputContainer>
  </div>
</ImageUpload>
`;

exports[`<ImageUpload /> should show error message when url is not valid then hide the error when the field is empty 1`] = `
.c10 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c4.c4 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c2 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c2:hover .c3 {
  color: #222;
}

.c2:focus-within .c3 {
  color: #0A7BC2;
}

.c2 .c12 {
  margin-top: 8px;
}

.c7.c7 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c7.c7.c7:hover,
.c7.c7.c7:active,
.c7.c7.c7:focus {
  color: #222;
}

.c7:hover {
  border-bottom-color: #666;
}

.c7.c7.c7:focus,
.c7.c7.c7:active {
  border-bottom-color: #0A7BC2;
}

.c7:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 {
  position: relative;
}

.c6:hover {
  border-bottom-color: #666;
}

.c6:hover .c5:focus,
.c6:hover .c6:active {
  border-bottom-color: #0A7BC2;
}

.c6:hover .c5:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 .c13 {
  padding: 0;
}

.c6 .c11 {
  top: 9px;
}

.c0 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c9 {
  white-space: nowrap;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .c8 {
  padding: 0 10px;
}

.c1 .c8 label {
  padding: 0 10px;
  width: 100%;
}

<ImageUpload
  imageUploader={[MockFunction]}
  language="en-US"
  onChange={[Function]}
  onError={[Function]}
  onInputChange={[Function]}
  onUploadStarted={[MockFunction]}
>
  <div>
    <image-upload__ImageUploadTitle>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "text-align:center;font-weight:400;font-size:1.312rem;",
              ],
            },
            "displayName": "image-upload__ImageUploadTitle",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
            "target": "p",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <p
          className="c0"
        >
          <span>
            Insert an image from the web
          </span>
        </p>
      </StyledComponent>
    </image-upload__ImageUploadTitle>
    <image-upload__ImageInputContainer>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
              "isStatic": true,
              "lastClassName": "c1",
              "rules": Array [
                "display:flex;",
                ".c8",
                "{padding:0 10px;label{padding:0 10px;width:100%;}}",
              ],
            },
            "displayName": "image-upload__ImageInputContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c1"
        >
          <Textfield18
            blogTheme="default"
            error=""
            label="Paste the URL of the image"
            name="imageURL"
            onChange={[Function]}
            value=""
          >
            <Theme
              blog="default"
              theme={
                Object {
                  "breakpointBanner": "969px",
                  "breakpointMedium": "53.125em",
                  "color": Object {
                    "alert": "#EEB544",
                    "amazon": "#F5C056",
                    "backgroundLayer": "rgba(0,0,0,0.45)",
                    "backgroundLight": "#E6F2F8",
                    "black": "#000",
                    "blackOverlay": "rgba(0,0,0,0.7)",
                    "bodytext": "#222",
                    "commerce": "#72AD75",
                    "darkBlackOverlay": "rgba(0,0,0,0.9)",
                    "darkgray": "#666",
                    "darksmoke": "#222",
                    "error": "#D24A1D",
                    "facebook": "#1877F2",
                    "foregroundLayer": "rgba(0,0,0,0.4)",
                    "google": "#DB4437",
                    "gray": "#7D7D7D",
                    "instagram": "#C32AA3",
                    "lightgray": "#E5E5E5",
                    "linkedin": "#0077B5",
                    "logo": "#000",
                    "midgray": "#CCC",
                    "primary": "#0A7BC2",
                    "primaryLight": "#0C91E4",
                    "rss": "#7D7D7D",
                    "secondarytext": "#7D7D7D",
                    "success": "#23891F",
                    "twitter": "#1DA1F2",
                    "white": "#FFF",
                    "whiteOverlay": "rgba(255,255,255,0.7)",
                    "whitesmoke": "#F5F5F5",
                    "youtube": "#FF0000",
                  },
                  "columnGutter": "2.25rem",
                  "columnGutter19": Object {
                    "largeUp": "1.5rem",
                    "small19": "1rem",
                    "xlargeUp": "2rem",
                  },
                  "columnPadding": "1.125rem",
                  "columnPadding19": Object {
                    "largeUp": "0.75rem",
                    "small19": "0.5rem",
                    "xlargeUp": "1rem",
                  },
                  "featuredContentWidth": "1024px",
                  "globalNavHeight": "80px",
                  "linkTransition": "0.1s ease-out",
                  "mainContainerWidth": "66.5%",
                  "mainContentMaxWidth": "800px",
                  "pageWidth": "1336px",
                  "postContentMaxWidth": "636px",
                  "scrollbackNavHeight": "60px",
                  "sidebarContainerWidth": "33.5%",
                  "sidebarContentMaxWidth": "360px",
                  "sidebarContentMinWidth": "300px",
                  "slideshowTransitionDuration": "0.2s",
                  "typography": Object {
                    "body": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "embiggenedHeadlineSize": "34px",
                    "headline": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "headlineLineHeight": "1.3",
                    "headlineSize": "24px",
                    "permalinkHeadlineLineHeight": "1.2",
                    "permalinkHeadlineSize": Object {
                      "mediumUp": "2.5rem",
                      "small": "2rem",
                      "xxxlargeUp": "3rem",
                    },
                    "primary": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "serif": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "tertiary": Object {
                      "fontFamily": "FiraSans, sans-serif",
                      "fontSizes": Object {
                        "large": "29px",
                        "medium": "21px",
                        "small": "17px",
                        "xlarge": "35px",
                        "xsmall": "15px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "utility": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                  },
                }
              }
            >
              <ThemeProvider
                theme={
                  Object {
                    "blog": "default",
                    "breakpointBanner": "969px",
                    "breakpointMedium": "53.125em",
                    "color": Object {
                      "alert": "#EEB544",
                      "amazon": "#F5C056",
                      "backgroundLayer": "rgba(0,0,0,0.45)",
                      "backgroundLight": "#E6F2F8",
                      "black": "#000",
                      "blackOverlay": "rgba(0,0,0,0.7)",
                      "bodytext": "#222",
                      "commerce": "#72AD75",
                      "darkBlackOverlay": "rgba(0,0,0,0.9)",
                      "darkgray": "#666",
                      "darksmoke": "#222",
                      "error": "#D24A1D",
                      "facebook": "#1877F2",
                      "foregroundLayer": "rgba(0,0,0,0.4)",
                      "google": "#DB4437",
                      "gray": "#7D7D7D",
                      "instagram": "#C32AA3",
                      "lightgray": "#E5E5E5",
                      "linkedin": "#0077B5",
                      "logo": "#000",
                      "midgray": "#CCC",
                      "primary": "#0A7BC2",
                      "primaryLight": "#0C91E4",
                      "rss": "#7D7D7D",
                      "secondarytext": "#7D7D7D",
                      "success": "#23891F",
                      "twitter": "#1DA1F2",
                      "white": "#FFF",
                      "whiteOverlay": "rgba(255,255,255,0.7)",
                      "whitesmoke": "#F5F5F5",
                      "youtube": "#FF0000",
                    },
                    "columnGutter": "2.25rem",
                    "columnGutter19": Object {
                      "largeUp": "1.5rem",
                      "small19": "1rem",
                      "xlargeUp": "2rem",
                    },
                    "columnPadding": "1.125rem",
                    "columnPadding19": Object {
                      "largeUp": "0.75rem",
                      "small19": "0.5rem",
                      "xlargeUp": "1rem",
                    },
                    "featuredContentWidth": "1024px",
                    "globalNavHeight": "80px",
                    "linkTransition": "0.1s ease-out",
                    "mainContainerWidth": "66.5%",
                    "mainContentMaxWidth": "800px",
                    "pageWidth": "1336px",
                    "postContentMaxWidth": "636px",
                    "scrollbackNavHeight": "60px",
                    "sidebarContainerWidth": "33.5%",
                    "sidebarContentMaxWidth": "360px",
                    "sidebarContentMinWidth": "300px",
                    "slideshowTransitionDuration": "0.2s",
                    "typography": Object {
                      "body": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "embiggenedHeadlineSize": "34px",
                      "headline": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "headlineLineHeight": "1.3",
                      "headlineSize": "24px",
                      "permalinkHeadlineLineHeight": "1.2",
                      "permalinkHeadlineSize": Object {
                        "mediumUp": "2.5rem",
                        "small": "2rem",
                        "xxxlargeUp": "3rem",
                      },
                      "primary": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "serif": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "tertiary": Object {
                        "fontFamily": "FiraSans, sans-serif",
                        "fontSizes": Object {
                          "large": "29px",
                          "medium": "21px",
                          "small": "17px",
                          "xlarge": "35px",
                          "xsmall": "15px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "utility": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                    },
                  }
                }
              >
                <textfield__KinjaFormFieldWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "margin-bottom:32px;flex-basis:100%;&:hover{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}&:focus-within{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}",
                            [Function],
                            " ",
                            ".c12",
                            "{margin-top:8px;}",
                          ],
                        },
                        "displayName": "textfield__KinjaFormFieldWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2"
                    >
                      <textfield__KinjaLabel
                        error=""
                        htmlFor="imageURL"
                      >
                        <StyledComponent
                          error=""
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c3",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "&&{color:",
                                  [Function],
                                  ";font-size:16px;line-height:21px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaLabel",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c3",
                              "target": "label",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          htmlFor="imageURL"
                        >
                          <label
                            className="c3 c4"
                            htmlFor="imageURL"
                          >
                            Paste the URL of the image
                          </label>
                        </StyledComponent>
                      </textfield__KinjaLabel>
                      <textfield__KinjaTextFieldWrapper
                        hasCustomIcon={false}
                        status="default"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "position:relative;&:hover{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:disabled{border-bottom-color:",
                                  [Function],
                                  ";cursor:not-allowed;}",
                                  ".c13",
                                  "{padding:0;",
                                  [Function],
                                  "}",
                                  ".textfield__KinjaTextField-sc-1a9gghc-2",
                                  ",",
                                  ".c13",
                                  "{",
                                  [Function],
                                  " ",
                                  [Function],
                                  "}",
                                  ".c11",
                                  "{top:9px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaTextFieldWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hasCustomIcon={false}
                          status="default"
                        >
                          <div
                            className="c5 c6"
                          >
                            <textfield__KinjaTextField
                              error=""
                              id="imageURL"
                              name="imageURL"
                              onChange={[Function]}
                              status="default"
                              type="text"
                              value=""
                            >
                              <StyledComponent
                                error=""
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "&&{border-bottom:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                        [Function],
                                        ";}&:hover{border-bottom-color:",
                                        [Function],
                                        ";}&&&:focus,&&&:active{border-bottom-color:",
                                        [Function],
                                        ";}&:disabled{border-bottom-color:",
                                        [Function],
                                        ";cursor:not-allowed;}",
                                        ";",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaTextField",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                    "target": "input",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="imageURL"
                                name="imageURL"
                                onChange={[Function]}
                                status="default"
                                type="text"
                                value=""
                              >
                                <input
                                  className="c7"
                                  id="imageURL"
                                  name="imageURL"
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                              </StyledComponent>
                            </textfield__KinjaTextField>
                          </div>
                        </StyledComponent>
                      </textfield__KinjaTextFieldWrapper>
                    </div>
                  </StyledComponent>
                </textfield__KinjaFormFieldWrapper>
              </ThemeProvider>
            </Theme>
          </Textfield18>
          <image-upload__ImageFileInput>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c8",
                    "isStatic": true,
                    "lastClassName": "caIkJs",
                    "rules": Array [],
                  },
                  "displayName": "image-upload__ImageFileInput",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c8",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c8 "
              >
                <image-upload__FileInputText>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "image-upload__FileInputText-d8l6nt-1",
                          "isStatic": true,
                          "lastClassName": "c9",
                          "rules": Array [
                            "white-space:nowrap;",
                          ],
                        },
                        "displayName": "image-upload__FileInputText",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                        "target": "p",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <p
                      className="c9"
                    >
                      <span
                        className="show-for-small-only"
                      >
                        Or upload one from your device
                      </span>
                      <span
                        className="show-for-medium-up"
                      >
                        Or upload one from your computer
                      </span>
                    </p>
                  </StyledComponent>
                </image-upload__FileInputText>
                <Filefield
                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                  error={null}
                  name="fileUpload"
                  onChange={[Function]}
                >
                  <Field
                    error={null}
                  >
                    <EnsureDefaultTheme>
                      <ThemeProvider
                        theme={[Function]}
                      >
                        <field__Wrapper
                          className="field"
                        >
                          <StyledComponent
                            className="field"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "field__Wrapper-sc-1k7q01z-0",
                                  "isStatic": false,
                                  "lastClassName": "c10",
                                  "rules": Array [
                                    "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                    [Function],
                                  ],
                                },
                                "displayName": "field__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <label
                              className="field c10"
                            >
                              <filefield__Input
                                accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                error={null}
                                name="fileUpload"
                                onChange={[Function]}
                              >
                                <StyledComponent
                                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                  error={null}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [
                                        Object {
                                          "type": "file",
                                        },
                                      ],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "filefield__Input-pd0ao4-0",
                                        "isStatic": false,
                                        "lastClassName": "dLFlOg",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "filefield__Input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "filefield__Input-pd0ao4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="fileUpload"
                                  onChange={[Function]}
                                >
                                  <input
                                    accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                    className=""
                                    name="fileUpload"
                                    onChange={[Function]}
                                    type="file"
                                  />
                                </StyledComponent>
                              </filefield__Input>
                            </label>
                          </StyledComponent>
                        </field__Wrapper>
                      </ThemeProvider>
                    </EnsureDefaultTheme>
                  </Field>
                </Filefield>
              </div>
            </StyledComponent>
          </image-upload__ImageFileInput>
        </div>
      </StyledComponent>
    </image-upload__ImageInputContainer>
  </div>
</ImageUpload>
`;

exports[`<ImageUpload /> should show the url of the starting value in the Textfield 1`] = `
.c10 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c4.c4 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c2 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c2:hover .c3 {
  color: #222;
}

.c2:focus-within .c3 {
  color: #0A7BC2;
}

.c2 .c12 {
  margin-top: 8px;
}

.c7.c7 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c7.c7.c7:hover,
.c7.c7.c7:active,
.c7.c7.c7:focus {
  color: #222;
}

.c7:hover {
  border-bottom-color: #666;
}

.c7.c7.c7:focus,
.c7.c7.c7:active {
  border-bottom-color: #0A7BC2;
}

.c7:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 {
  position: relative;
}

.c6:hover {
  border-bottom-color: #666;
}

.c6:hover .c5:focus,
.c6:hover .c6:active {
  border-bottom-color: #0A7BC2;
}

.c6:hover .c5:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 .c13 {
  padding: 0;
}

.c6 .c11 {
  top: 9px;
}

.c0 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c9 {
  white-space: nowrap;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .c8 {
  padding: 0 10px;
}

.c1 .c8 label {
  padding: 0 10px;
  width: 100%;
}

<ImageUpload
  imageUploader={[MockFunction]}
  language="en-US"
  onChange={[Function]}
  onError={[Function]}
  onInputChange={[Function]}
  onUploadStarted={[Function]}
  value={
    Object {
      "format": "jpg",
      "height": 100,
      "id": "string",
      "url": "string",
      "width": 100,
    }
  }
>
  <div>
    <image-upload__ImageUploadTitle>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "text-align:center;font-weight:400;font-size:1.312rem;",
              ],
            },
            "displayName": "image-upload__ImageUploadTitle",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
            "target": "p",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <p
          className="c0"
        >
          <span>
            Insert an image from the web
          </span>
        </p>
      </StyledComponent>
    </image-upload__ImageUploadTitle>
    <image-upload__ImageInputContainer>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
              "isStatic": true,
              "lastClassName": "c1",
              "rules": Array [
                "display:flex;",
                ".c8",
                "{padding:0 10px;label{padding:0 10px;width:100%;}}",
              ],
            },
            "displayName": "image-upload__ImageInputContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c1"
        >
          <Textfield18
            blogTheme="default"
            error=""
            label="Paste the URL of the image"
            name="imageURL"
            onChange={[Function]}
            value="string"
          >
            <Theme
              blog="default"
              theme={
                Object {
                  "breakpointBanner": "969px",
                  "breakpointMedium": "53.125em",
                  "color": Object {
                    "alert": "#EEB544",
                    "amazon": "#F5C056",
                    "backgroundLayer": "rgba(0,0,0,0.45)",
                    "backgroundLight": "#E6F2F8",
                    "black": "#000",
                    "blackOverlay": "rgba(0,0,0,0.7)",
                    "bodytext": "#222",
                    "commerce": "#72AD75",
                    "darkBlackOverlay": "rgba(0,0,0,0.9)",
                    "darkgray": "#666",
                    "darksmoke": "#222",
                    "error": "#D24A1D",
                    "facebook": "#1877F2",
                    "foregroundLayer": "rgba(0,0,0,0.4)",
                    "google": "#DB4437",
                    "gray": "#7D7D7D",
                    "instagram": "#C32AA3",
                    "lightgray": "#E5E5E5",
                    "linkedin": "#0077B5",
                    "logo": "#000",
                    "midgray": "#CCC",
                    "primary": "#0A7BC2",
                    "primaryLight": "#0C91E4",
                    "rss": "#7D7D7D",
                    "secondarytext": "#7D7D7D",
                    "success": "#23891F",
                    "twitter": "#1DA1F2",
                    "white": "#FFF",
                    "whiteOverlay": "rgba(255,255,255,0.7)",
                    "whitesmoke": "#F5F5F5",
                    "youtube": "#FF0000",
                  },
                  "columnGutter": "2.25rem",
                  "columnGutter19": Object {
                    "largeUp": "1.5rem",
                    "small19": "1rem",
                    "xlargeUp": "2rem",
                  },
                  "columnPadding": "1.125rem",
                  "columnPadding19": Object {
                    "largeUp": "0.75rem",
                    "small19": "0.5rem",
                    "xlargeUp": "1rem",
                  },
                  "featuredContentWidth": "1024px",
                  "globalNavHeight": "80px",
                  "linkTransition": "0.1s ease-out",
                  "mainContainerWidth": "66.5%",
                  "mainContentMaxWidth": "800px",
                  "pageWidth": "1336px",
                  "postContentMaxWidth": "636px",
                  "scrollbackNavHeight": "60px",
                  "sidebarContainerWidth": "33.5%",
                  "sidebarContentMaxWidth": "360px",
                  "sidebarContentMinWidth": "300px",
                  "slideshowTransitionDuration": "0.2s",
                  "typography": Object {
                    "body": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "embiggenedHeadlineSize": "34px",
                    "headline": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "headlineLineHeight": "1.3",
                    "headlineSize": "24px",
                    "permalinkHeadlineLineHeight": "1.2",
                    "permalinkHeadlineSize": Object {
                      "mediumUp": "2.5rem",
                      "small": "2rem",
                      "xxxlargeUp": "3rem",
                    },
                    "primary": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "serif": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "tertiary": Object {
                      "fontFamily": "FiraSans, sans-serif",
                      "fontSizes": Object {
                        "large": "29px",
                        "medium": "21px",
                        "small": "17px",
                        "xlarge": "35px",
                        "xsmall": "15px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "utility": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                  },
                }
              }
            >
              <ThemeProvider
                theme={
                  Object {
                    "blog": "default",
                    "breakpointBanner": "969px",
                    "breakpointMedium": "53.125em",
                    "color": Object {
                      "alert": "#EEB544",
                      "amazon": "#F5C056",
                      "backgroundLayer": "rgba(0,0,0,0.45)",
                      "backgroundLight": "#E6F2F8",
                      "black": "#000",
                      "blackOverlay": "rgba(0,0,0,0.7)",
                      "bodytext": "#222",
                      "commerce": "#72AD75",
                      "darkBlackOverlay": "rgba(0,0,0,0.9)",
                      "darkgray": "#666",
                      "darksmoke": "#222",
                      "error": "#D24A1D",
                      "facebook": "#1877F2",
                      "foregroundLayer": "rgba(0,0,0,0.4)",
                      "google": "#DB4437",
                      "gray": "#7D7D7D",
                      "instagram": "#C32AA3",
                      "lightgray": "#E5E5E5",
                      "linkedin": "#0077B5",
                      "logo": "#000",
                      "midgray": "#CCC",
                      "primary": "#0A7BC2",
                      "primaryLight": "#0C91E4",
                      "rss": "#7D7D7D",
                      "secondarytext": "#7D7D7D",
                      "success": "#23891F",
                      "twitter": "#1DA1F2",
                      "white": "#FFF",
                      "whiteOverlay": "rgba(255,255,255,0.7)",
                      "whitesmoke": "#F5F5F5",
                      "youtube": "#FF0000",
                    },
                    "columnGutter": "2.25rem",
                    "columnGutter19": Object {
                      "largeUp": "1.5rem",
                      "small19": "1rem",
                      "xlargeUp": "2rem",
                    },
                    "columnPadding": "1.125rem",
                    "columnPadding19": Object {
                      "largeUp": "0.75rem",
                      "small19": "0.5rem",
                      "xlargeUp": "1rem",
                    },
                    "featuredContentWidth": "1024px",
                    "globalNavHeight": "80px",
                    "linkTransition": "0.1s ease-out",
                    "mainContainerWidth": "66.5%",
                    "mainContentMaxWidth": "800px",
                    "pageWidth": "1336px",
                    "postContentMaxWidth": "636px",
                    "scrollbackNavHeight": "60px",
                    "sidebarContainerWidth": "33.5%",
                    "sidebarContentMaxWidth": "360px",
                    "sidebarContentMinWidth": "300px",
                    "slideshowTransitionDuration": "0.2s",
                    "typography": Object {
                      "body": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "embiggenedHeadlineSize": "34px",
                      "headline": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "headlineLineHeight": "1.3",
                      "headlineSize": "24px",
                      "permalinkHeadlineLineHeight": "1.2",
                      "permalinkHeadlineSize": Object {
                        "mediumUp": "2.5rem",
                        "small": "2rem",
                        "xxxlargeUp": "3rem",
                      },
                      "primary": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "serif": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "tertiary": Object {
                        "fontFamily": "FiraSans, sans-serif",
                        "fontSizes": Object {
                          "large": "29px",
                          "medium": "21px",
                          "small": "17px",
                          "xlarge": "35px",
                          "xsmall": "15px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "utility": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                    },
                  }
                }
              >
                <textfield__KinjaFormFieldWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "margin-bottom:32px;flex-basis:100%;&:hover{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}&:focus-within{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}",
                            [Function],
                            " ",
                            ".c12",
                            "{margin-top:8px;}",
                          ],
                        },
                        "displayName": "textfield__KinjaFormFieldWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2"
                    >
                      <textfield__KinjaLabel
                        error=""
                        htmlFor="imageURL"
                      >
                        <StyledComponent
                          error=""
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c3",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "&&{color:",
                                  [Function],
                                  ";font-size:16px;line-height:21px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaLabel",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c3",
                              "target": "label",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          htmlFor="imageURL"
                        >
                          <label
                            className="c3 c4"
                            htmlFor="imageURL"
                          >
                            Paste the URL of the image
                          </label>
                        </StyledComponent>
                      </textfield__KinjaLabel>
                      <textfield__KinjaTextFieldWrapper
                        hasCustomIcon={false}
                        status="default"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "position:relative;&:hover{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:disabled{border-bottom-color:",
                                  [Function],
                                  ";cursor:not-allowed;}",
                                  ".c13",
                                  "{padding:0;",
                                  [Function],
                                  "}",
                                  ".textfield__KinjaTextField-sc-1a9gghc-2",
                                  ",",
                                  ".c13",
                                  "{",
                                  [Function],
                                  " ",
                                  [Function],
                                  "}",
                                  ".c11",
                                  "{top:9px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaTextFieldWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hasCustomIcon={false}
                          status="default"
                        >
                          <div
                            className="c5 c6"
                          >
                            <textfield__KinjaTextField
                              error=""
                              id="imageURL"
                              name="imageURL"
                              onChange={[Function]}
                              status="default"
                              type="text"
                              value="string"
                            >
                              <StyledComponent
                                error=""
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "&&{border-bottom:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                        [Function],
                                        ";}&:hover{border-bottom-color:",
                                        [Function],
                                        ";}&&&:focus,&&&:active{border-bottom-color:",
                                        [Function],
                                        ";}&:disabled{border-bottom-color:",
                                        [Function],
                                        ";cursor:not-allowed;}",
                                        ";",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaTextField",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                    "target": "input",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="imageURL"
                                name="imageURL"
                                onChange={[Function]}
                                status="default"
                                type="text"
                                value="string"
                              >
                                <input
                                  className="c7"
                                  id="imageURL"
                                  name="imageURL"
                                  onChange={[Function]}
                                  type="text"
                                  value="string"
                                />
                              </StyledComponent>
                            </textfield__KinjaTextField>
                          </div>
                        </StyledComponent>
                      </textfield__KinjaTextFieldWrapper>
                    </div>
                  </StyledComponent>
                </textfield__KinjaFormFieldWrapper>
              </ThemeProvider>
            </Theme>
          </Textfield18>
          <image-upload__ImageFileInput>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c8",
                    "isStatic": true,
                    "lastClassName": "caIkJs",
                    "rules": Array [],
                  },
                  "displayName": "image-upload__ImageFileInput",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c8",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c8 "
              >
                <image-upload__FileInputText>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "image-upload__FileInputText-d8l6nt-1",
                          "isStatic": true,
                          "lastClassName": "c9",
                          "rules": Array [
                            "white-space:nowrap;",
                          ],
                        },
                        "displayName": "image-upload__FileInputText",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                        "target": "p",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <p
                      className="c9"
                    >
                      <span
                        className="show-for-small-only"
                      >
                        Or upload one from your device
                      </span>
                      <span
                        className="show-for-medium-up"
                      >
                        Or upload one from your computer
                      </span>
                    </p>
                  </StyledComponent>
                </image-upload__FileInputText>
                <Filefield
                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                  error={null}
                  name="fileUpload"
                  onChange={[Function]}
                >
                  <Field
                    error={null}
                  >
                    <EnsureDefaultTheme>
                      <ThemeProvider
                        theme={[Function]}
                      >
                        <field__Wrapper
                          className="field"
                        >
                          <StyledComponent
                            className="field"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "field__Wrapper-sc-1k7q01z-0",
                                  "isStatic": false,
                                  "lastClassName": "c10",
                                  "rules": Array [
                                    "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                    [Function],
                                  ],
                                },
                                "displayName": "field__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <label
                              className="field c10"
                            >
                              <filefield__Input
                                accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                error={null}
                                name="fileUpload"
                                onChange={[Function]}
                              >
                                <StyledComponent
                                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                  error={null}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [
                                        Object {
                                          "type": "file",
                                        },
                                      ],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "filefield__Input-pd0ao4-0",
                                        "isStatic": false,
                                        "lastClassName": "dLFlOg",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "filefield__Input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "filefield__Input-pd0ao4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="fileUpload"
                                  onChange={[Function]}
                                >
                                  <input
                                    accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                    className=""
                                    name="fileUpload"
                                    onChange={[Function]}
                                    type="file"
                                  />
                                </StyledComponent>
                              </filefield__Input>
                            </label>
                          </StyledComponent>
                        </field__Wrapper>
                      </ThemeProvider>
                    </EnsureDefaultTheme>
                  </Field>
                </Filefield>
              </div>
            </StyledComponent>
          </image-upload__ImageFileInput>
        </div>
      </StyledComponent>
    </image-upload__ImageInputContainer>
  </div>
</ImageUpload>
`;

exports[`<ImageUpload /> structure should have a text field and file field 1`] = `
.c10 {
  position: relative;
  margin-bottom: 1.5rem;
  display: block;
  width: 100%;
  max-width: 400px;
}

.c4.c4 {
  color: #666;
  font-size: 16px;
  line-height: 21px;
}

.c2 {
  margin-bottom: 32px;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c2:hover .c3 {
  color: #222;
}

.c2:focus-within .c3 {
  color: #0A7BC2;
}

.c2 .c12 {
  margin-top: 8px;
}

.c7.c7 {
  border-bottom: 1px solid #7D7D7D;
  color: #222 !important;
  font-size: 18px;
  line-height: 23px;
  padding: 6px 0;
  width: 100%;
}

.c7.c7.c7:hover,
.c7.c7.c7:active,
.c7.c7.c7:focus {
  color: #222;
}

.c7:hover {
  border-bottom-color: #666;
}

.c7.c7.c7:focus,
.c7.c7.c7:active {
  border-bottom-color: #0A7BC2;
}

.c7:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 {
  position: relative;
}

.c6:hover {
  border-bottom-color: #666;
}

.c6:hover .c5:focus,
.c6:hover .c6:active {
  border-bottom-color: #0A7BC2;
}

.c6:hover .c5:disabled {
  border-bottom-color: #CCC;
  cursor: not-allowed;
}

.c6 .c13 {
  padding: 0;
}

.c6 .c11 {
  top: 9px;
}

.c0 {
  text-align: center;
  font-weight: 400;
  font-size: 1.312rem;
}

.c9 {
  white-space: nowrap;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .c8 {
  padding: 0 10px;
}

.c1 .c8 label {
  padding: 0 10px;
  width: 100%;
}

<ImageUpload
  imageUploader={[MockFunction]}
  language="en-US"
  onChange={[Function]}
  onError={[Function]}
  onInputChange={[Function]}
  onUploadStarted={[Function]}
>
  <div>
    <image-upload__ImageUploadTitle>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageUploadTitle-d8l6nt-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "text-align:center;font-weight:400;font-size:1.312rem;",
              ],
            },
            "displayName": "image-upload__ImageUploadTitle",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageUploadTitle-d8l6nt-0",
            "target": "p",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <p
          className="c0"
        >
          <span>
            Insert an image from the web
          </span>
        </p>
      </StyledComponent>
    </image-upload__ImageUploadTitle>
    <image-upload__ImageInputContainer>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "image-upload__ImageInputContainer-d8l6nt-3",
              "isStatic": true,
              "lastClassName": "c1",
              "rules": Array [
                "display:flex;",
                ".c8",
                "{padding:0 10px;label{padding:0 10px;width:100%;}}",
              ],
            },
            "displayName": "image-upload__ImageInputContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "image-upload__ImageInputContainer-d8l6nt-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c1"
        >
          <Textfield18
            blogTheme="default"
            error=""
            label="Paste the URL of the image"
            name="imageURL"
            onChange={[Function]}
            value=""
          >
            <Theme
              blog="default"
              theme={
                Object {
                  "breakpointBanner": "969px",
                  "breakpointMedium": "53.125em",
                  "color": Object {
                    "alert": "#EEB544",
                    "amazon": "#F5C056",
                    "backgroundLayer": "rgba(0,0,0,0.45)",
                    "backgroundLight": "#E6F2F8",
                    "black": "#000",
                    "blackOverlay": "rgba(0,0,0,0.7)",
                    "bodytext": "#222",
                    "commerce": "#72AD75",
                    "darkBlackOverlay": "rgba(0,0,0,0.9)",
                    "darkgray": "#666",
                    "darksmoke": "#222",
                    "error": "#D24A1D",
                    "facebook": "#1877F2",
                    "foregroundLayer": "rgba(0,0,0,0.4)",
                    "google": "#DB4437",
                    "gray": "#7D7D7D",
                    "instagram": "#C32AA3",
                    "lightgray": "#E5E5E5",
                    "linkedin": "#0077B5",
                    "logo": "#000",
                    "midgray": "#CCC",
                    "primary": "#0A7BC2",
                    "primaryLight": "#0C91E4",
                    "rss": "#7D7D7D",
                    "secondarytext": "#7D7D7D",
                    "success": "#23891F",
                    "twitter": "#1DA1F2",
                    "white": "#FFF",
                    "whiteOverlay": "rgba(255,255,255,0.7)",
                    "whitesmoke": "#F5F5F5",
                    "youtube": "#FF0000",
                  },
                  "columnGutter": "2.25rem",
                  "columnGutter19": Object {
                    "largeUp": "1.5rem",
                    "small19": "1rem",
                    "xlargeUp": "2rem",
                  },
                  "columnPadding": "1.125rem",
                  "columnPadding19": Object {
                    "largeUp": "0.75rem",
                    "small19": "0.5rem",
                    "xlargeUp": "1rem",
                  },
                  "featuredContentWidth": "1024px",
                  "globalNavHeight": "80px",
                  "linkTransition": "0.1s ease-out",
                  "mainContainerWidth": "66.5%",
                  "mainContentMaxWidth": "800px",
                  "pageWidth": "1336px",
                  "postContentMaxWidth": "636px",
                  "scrollbackNavHeight": "60px",
                  "sidebarContainerWidth": "33.5%",
                  "sidebarContentMaxWidth": "360px",
                  "sidebarContentMinWidth": "300px",
                  "slideshowTransitionDuration": "0.2s",
                  "typography": Object {
                    "body": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "embiggenedHeadlineSize": "34px",
                    "headline": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "headlineLineHeight": "1.3",
                    "headlineSize": "24px",
                    "permalinkHeadlineLineHeight": "1.2",
                    "permalinkHeadlineSize": Object {
                      "mediumUp": "2.5rem",
                      "small": "2rem",
                      "xxxlargeUp": "3rem",
                    },
                    "primary": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "serif": Object {
                      "fontFamily": "ElizabethSerif, Georgia, serif",
                      "fontSizes": Object {
                        "large": "27px",
                        "medium": "19px",
                        "small": "15px",
                        "xlarge": "30px",
                        "xsmall": "14px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "tertiary": Object {
                      "fontFamily": "FiraSans, sans-serif",
                      "fontSizes": Object {
                        "large": "29px",
                        "medium": "21px",
                        "small": "17px",
                        "xlarge": "35px",
                        "xsmall": "15px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                    "utility": Object {
                      "fontFamily": "ProximaNovaCond, sans-serif",
                      "fontSizes": Object {
                        "large": "32px",
                        "medium": "24px",
                        "small": "19px",
                        "xlarge": "37px",
                        "xsmall": "16px",
                      },
                      "lineHeights": Object {
                        "large": "40px",
                        "medium": "32px",
                        "small": "24px",
                        "xlarge": "44px",
                        "xsmall": "24px",
                      },
                    },
                  },
                }
              }
            >
              <ThemeProvider
                theme={
                  Object {
                    "blog": "default",
                    "breakpointBanner": "969px",
                    "breakpointMedium": "53.125em",
                    "color": Object {
                      "alert": "#EEB544",
                      "amazon": "#F5C056",
                      "backgroundLayer": "rgba(0,0,0,0.45)",
                      "backgroundLight": "#E6F2F8",
                      "black": "#000",
                      "blackOverlay": "rgba(0,0,0,0.7)",
                      "bodytext": "#222",
                      "commerce": "#72AD75",
                      "darkBlackOverlay": "rgba(0,0,0,0.9)",
                      "darkgray": "#666",
                      "darksmoke": "#222",
                      "error": "#D24A1D",
                      "facebook": "#1877F2",
                      "foregroundLayer": "rgba(0,0,0,0.4)",
                      "google": "#DB4437",
                      "gray": "#7D7D7D",
                      "instagram": "#C32AA3",
                      "lightgray": "#E5E5E5",
                      "linkedin": "#0077B5",
                      "logo": "#000",
                      "midgray": "#CCC",
                      "primary": "#0A7BC2",
                      "primaryLight": "#0C91E4",
                      "rss": "#7D7D7D",
                      "secondarytext": "#7D7D7D",
                      "success": "#23891F",
                      "twitter": "#1DA1F2",
                      "white": "#FFF",
                      "whiteOverlay": "rgba(255,255,255,0.7)",
                      "whitesmoke": "#F5F5F5",
                      "youtube": "#FF0000",
                    },
                    "columnGutter": "2.25rem",
                    "columnGutter19": Object {
                      "largeUp": "1.5rem",
                      "small19": "1rem",
                      "xlargeUp": "2rem",
                    },
                    "columnPadding": "1.125rem",
                    "columnPadding19": Object {
                      "largeUp": "0.75rem",
                      "small19": "0.5rem",
                      "xlargeUp": "1rem",
                    },
                    "featuredContentWidth": "1024px",
                    "globalNavHeight": "80px",
                    "linkTransition": "0.1s ease-out",
                    "mainContainerWidth": "66.5%",
                    "mainContentMaxWidth": "800px",
                    "pageWidth": "1336px",
                    "postContentMaxWidth": "636px",
                    "scrollbackNavHeight": "60px",
                    "sidebarContainerWidth": "33.5%",
                    "sidebarContentMaxWidth": "360px",
                    "sidebarContentMinWidth": "300px",
                    "slideshowTransitionDuration": "0.2s",
                    "typography": Object {
                      "body": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "embiggenedHeadlineSize": "34px",
                      "headline": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "headlineLineHeight": "1.3",
                      "headlineSize": "24px",
                      "permalinkHeadlineLineHeight": "1.2",
                      "permalinkHeadlineSize": Object {
                        "mediumUp": "2.5rem",
                        "small": "2rem",
                        "xxxlargeUp": "3rem",
                      },
                      "primary": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "serif": Object {
                        "fontFamily": "ElizabethSerif, Georgia, serif",
                        "fontSizes": Object {
                          "large": "27px",
                          "medium": "19px",
                          "small": "15px",
                          "xlarge": "30px",
                          "xsmall": "14px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "tertiary": Object {
                        "fontFamily": "FiraSans, sans-serif",
                        "fontSizes": Object {
                          "large": "29px",
                          "medium": "21px",
                          "small": "17px",
                          "xlarge": "35px",
                          "xsmall": "15px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                      "utility": Object {
                        "fontFamily": "ProximaNovaCond, sans-serif",
                        "fontSizes": Object {
                          "large": "32px",
                          "medium": "24px",
                          "small": "19px",
                          "xlarge": "37px",
                          "xsmall": "16px",
                        },
                        "lineHeights": Object {
                          "large": "40px",
                          "medium": "32px",
                          "small": "24px",
                          "xlarge": "44px",
                          "xsmall": "24px",
                        },
                      },
                    },
                  }
                }
              >
                <textfield__KinjaFormFieldWrapper>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "margin-bottom:32px;flex-basis:100%;&:hover{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}&:focus-within{",
                            ".c3",
                            "{color:",
                            [Function],
                            ";}}",
                            [Function],
                            " ",
                            ".c12",
                            "{margin-top:8px;}",
                          ],
                        },
                        "displayName": "textfield__KinjaFormFieldWrapper",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "textfield__KinjaFormFieldWrapper-sc-1a9gghc-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2"
                    >
                      <textfield__KinjaLabel
                        error=""
                        htmlFor="imageURL"
                      >
                        <StyledComponent
                          error=""
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c3",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "&&{color:",
                                  [Function],
                                  ";font-size:16px;line-height:21px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaLabel",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c3",
                              "target": "label",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          htmlFor="imageURL"
                        >
                          <label
                            className="c3 c4"
                            htmlFor="imageURL"
                          >
                            Paste the URL of the image
                          </label>
                        </StyledComponent>
                      </textfield__KinjaLabel>
                      <textfield__KinjaTextFieldWrapper
                        hasCustomIcon={false}
                        status="default"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "position:relative;&:hover{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:focus,&:hover &:active{border-bottom-color:",
                                  [Function],
                                  ";}&:hover &:disabled{border-bottom-color:",
                                  [Function],
                                  ";cursor:not-allowed;}",
                                  ".c13",
                                  "{padding:0;",
                                  [Function],
                                  "}",
                                  ".textfield__KinjaTextField-sc-1a9gghc-2",
                                  ",",
                                  ".c13",
                                  "{",
                                  [Function],
                                  " ",
                                  [Function],
                                  "}",
                                  ".c11",
                                  "{top:9px;}",
                                ],
                              },
                              "displayName": "textfield__KinjaTextFieldWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          hasCustomIcon={false}
                          status="default"
                        >
                          <div
                            className="c5 c6"
                          >
                            <textfield__KinjaTextField
                              error=""
                              id="imageURL"
                              name="imageURL"
                              onChange={[Function]}
                              status="default"
                              type="text"
                              value=""
                            >
                              <StyledComponent
                                error=""
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        "&&{border-bottom:1px solid ",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        " !important;font-size:18px;line-height:23px;padding:6px 0;width:100%;}&&&:hover,&&&:active,&&&:focus{color:",
                                        [Function],
                                        ";}&:hover{border-bottom-color:",
                                        [Function],
                                        ";}&&&:focus,&&&:active{border-bottom-color:",
                                        [Function],
                                        ";}&:disabled{border-bottom-color:",
                                        [Function],
                                        ";cursor:not-allowed;}",
                                        ";",
                                      ],
                                    },
                                    "displayName": "textfield__KinjaTextField",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "textfield__KinjaTextField-sc-1a9gghc-2",
                                    "target": "input",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="imageURL"
                                name="imageURL"
                                onChange={[Function]}
                                status="default"
                                type="text"
                                value=""
                              >
                                <input
                                  className="c7"
                                  id="imageURL"
                                  name="imageURL"
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                              </StyledComponent>
                            </textfield__KinjaTextField>
                          </div>
                        </StyledComponent>
                      </textfield__KinjaTextFieldWrapper>
                    </div>
                  </StyledComponent>
                </textfield__KinjaFormFieldWrapper>
              </ThemeProvider>
            </Theme>
          </Textfield18>
          <image-upload__ImageFileInput>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c8",
                    "isStatic": true,
                    "lastClassName": "caIkJs",
                    "rules": Array [],
                  },
                  "displayName": "image-upload__ImageFileInput",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c8",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c8 "
              >
                <image-upload__FileInputText>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "image-upload__FileInputText-d8l6nt-1",
                          "isStatic": true,
                          "lastClassName": "c9",
                          "rules": Array [
                            "white-space:nowrap;",
                          ],
                        },
                        "displayName": "image-upload__FileInputText",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "image-upload__FileInputText-d8l6nt-1",
                        "target": "p",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <p
                      className="c9"
                    >
                      <span
                        className="show-for-small-only"
                      >
                        Or upload one from your device
                      </span>
                      <span
                        className="show-for-medium-up"
                      >
                        Or upload one from your computer
                      </span>
                    </p>
                  </StyledComponent>
                </image-upload__FileInputText>
                <Filefield
                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                  error={null}
                  name="fileUpload"
                  onChange={[Function]}
                >
                  <Field
                    error={null}
                  >
                    <EnsureDefaultTheme>
                      <ThemeProvider
                        theme={[Function]}
                      >
                        <field__Wrapper
                          className="field"
                        >
                          <StyledComponent
                            className="field"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "field__Wrapper-sc-1k7q01z-0",
                                  "isStatic": false,
                                  "lastClassName": "c10",
                                  "rules": Array [
                                    "position:relative;margin-bottom:1.5rem;display:block;width:100%;",
                                    [Function],
                                  ],
                                },
                                "displayName": "field__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "field__Wrapper-sc-1k7q01z-0",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <label
                              className="field c10"
                            >
                              <filefield__Input
                                accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                error={null}
                                name="fileUpload"
                                onChange={[Function]}
                              >
                                <StyledComponent
                                  accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                  error={null}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [
                                        Object {
                                          "type": "file",
                                        },
                                      ],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "filefield__Input-pd0ao4-0",
                                        "isStatic": false,
                                        "lastClassName": "dLFlOg",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "filefield__Input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "filefield__Input-pd0ao4-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="fileUpload"
                                  onChange={[Function]}
                                >
                                  <input
                                    accept="image/gif,image/png,image/jpeg,image/bmp,image/webp,image/svg+xml"
                                    className=""
                                    name="fileUpload"
                                    onChange={[Function]}
                                    type="file"
                                  />
                                </StyledComponent>
                              </filefield__Input>
                            </label>
                          </StyledComponent>
                        </field__Wrapper>
                      </ThemeProvider>
                    </EnsureDefaultTheme>
                  </Field>
                </Filefield>
              </div>
            </StyledComponent>
          </image-upload__ImageFileInput>
        </div>
      </StyledComponent>
    </image-upload__ImageInputContainer>
  </div>
</ImageUpload>
`;
